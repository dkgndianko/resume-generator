{"version":3,"sources":["../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","../node_modules/@formatjs/ecma402-abstract/lib/262.js","../node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","../node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","../node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","../node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","../node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js","../node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","../node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","../node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","../node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","../node_modules/@formatjs/ecma402-abstract/lib/data.js","../node_modules/@formatjs/intl-getcanonicallocales/src/parser.js","../node_modules/@formatjs/intl-getcanonicallocales/src/emitter.js","../node_modules/@formatjs/intl-getcanonicallocales/src/likelySubtags.generated.js","../node_modules/@formatjs/intl-locale/index.js","../node_modules/@formatjs/intl-getcanonicallocales/index.js","../node_modules/@formatjs/intl-getcanonicallocales/src/canonicalizer.js","../node_modules/@formatjs/intl-getcanonicallocales/src/aliases.generated.js","../node_modules/@formatjs/intl-getcanonicallocales/src/types.js","../node_modules/@formatjs/intl-locale/get_internal_slots.js","../node_modules/@formatjs/intl-locale/polyfill.js"],"names":["CanonicalizeLocaleList","locales","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","_a","tzData","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","Object","keys","reduce","all","z","ianaTimeZone","ToString","o","TypeError","String","ToNumber","val","undefined","NaN","Number","TimeClip","time","isFinite","Math","abs","n","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","x","y","is","ArrayCreate","len","Array","HasOwnProperty","prop","prototype","hasOwnProperty","call","Type","MS_PER_DAY","mod","Day","t","WeekDay","DayFromYear","Date","UTC","TimeFromYear","YearFromTime","getUTCFullYear","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","MS_PER_SECOND","HourFromTime","MS_PER_MINUTE","MinFromTime","SecFromTime","OrdinaryHasInstance","C","O","internalSlots","boundTargetFunction","P","isPrototypeOf","msFromTime","CoerceOptionsToObject","options","create","DefaultNumberOption","min","max","fallback","RangeError","concat","GetNumberOption","property","minimum","maximum","GetOption","opts","type","values","value","Boolean","filter","length","join","GetOptionsObject","SANCTIONED_UNITS","removeUnitNamespace","unit","slice","indexOf","SIMPLE_UNITS","map","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNames","Set","linkNames","forEach","add","linkName","has","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","replace","_","c","test","IsWellFormedUnitIdentifier","toLowerCase","units","split","numerator","denominator","ComputeExponentForMagnitude","numberFormat","magnitude","getInternalSlots","notation","dataLocaleData","numberingSystem","compactDisplay","style","currencyDisplay","thresholdMap","numbers","nu","short","decimal","long","num","pow","thresholds","i","magnitudeKey","other","match","ToRawPrecision","minPrecision","maxPrecision","m","e","xFinal","int","p","repeat","xToString","toString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","getMagnitude","round","adjustDecimalPlace","cut","formattedString","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","f","mantissa","exponent","k","a","b","FormatNumericToString","intlObject","result","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","minimumIntegerDigits","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","digitMapping","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","source","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","data","pl","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","pattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","exec","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","symbols","_i","numberPatternParts_1","part","push","apply","paritionNumberIntoParts","useGrouping","minusSign","plusSign","percentSign","substring","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","_b","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","_c","_d","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","negativePattern","rules","select","PartitionNumberPattern","nan","infinity","signDisplay","FormatNumericToParts","nf","implDetails","parts","parts_1","UNICODE_EXTENSION_SEQUENCE_REGEX","invariant","condition","message","Err","BestAvailableLocale","availableLocales","locale","candidate","pos","lastIndexOf","UnicodeExtensionValue","extension","key","size","searchValue","start","end","done","ResolveLocale","requestedLocales","relevantExtensionKeys","localeData","getDefaultLocale","r","localeMatcher","requestedLocales_1","noExtensionLocale","availableLocale","LookupMatcher","foundLocale","minimizedAvailableLocaleMap","availableLocaleMap","canonicalizedLocaleMap","minimizedAvailableLocales","minimizedLocale","Locale","minimize","canonicalizedLocale","l","maximizedRequestedLocale","maximize","minimizedRequestedLocale","BestFitMatcher","dataLocale","supportedExtension","relevantExtensionKeys_1","foundLocaleData","keyLocaleData","isArray","supportedExtensionAddition","requestedValue","optionsValue","privateIndex","preExtension","postExtension","LookupSupportedLocales","subset","SetNumberFormatUnitOptions","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","InitializeNumberFormat","numberingSystemNames","opt","matcher","cDigits","PartitionPattern","beginIndex","endIndex","nextIndex","SupportedLocales","RangePatternType","_super","MissingLocaleDataError","_this","this","arguments","__extends","isMissingLocaleDataError","defineProperty","exports","parseUnicodeLocaleId","parseUnicodeLanguageId","isUnicodeVariantSubtag","isUnicodeScriptSubtag","isUnicodeRegionSubtag","isStructurallyValidLanguageTag","isUnicodeLanguageSubtag","SEPARATOR","tslib_1","require","ALPHANUM_1_8","ALPHANUM_2_8","ALPHANUM_3_8","KEY_REGEX","TYPE_REGEX","ALPHA_4","OTHER_EXTENSION_TYPE","UNICODE_REGION_SUBTAG_REGEX","UNICODE_VARIANT_SUBTAG_REGEX","UNICODE_LANGUAGE_SUBTAG_REGEX","TKEY_REGEX","lang","region","script","variant","chunks","shift","variants","parseUnicodeExtension","keyword","keywords","parseKeyword","attributes","parseTransformedExtension","fields","parsePuExtension","exts","parseOtherExtensionValue","tag","__assign","extensions","unicodeExtension","transformedExtension","puExtension","otherExtensionMap","parseExtensions","emitUnicodeLocaleId","emitUnicodeLanguageId","__spreadArray","extensions_1","ext","kv","likelySubtags","ecma402_abstract_1","intl_getcanonicallocales_1","get_internal_slots_1","__importDefault","RELEVANT_EXTENSION_KEYS","UNICODE_TYPE_REGEX","mergeUnicodeLanguageId","replacement","addLikelySubtags","ast","unicodeLangId","match_1","match_2","parts_2","match_3","parts_3","constructor","internalSlotsList","default","initializedLocale","language","languageId","applyOptionsToTag","calendar","ca","collation","co","hc","kf","kn","_kn","entry","keywords_1","applyUnicodeExtensionToTag","hourCycle","caseFirst","numeric","maxLocale","removeLikelySubtags","get","enumerable","configurable","Symbol","toStringTag","writable","parser_1","emitter_1","canonicalizer_1","seen","locales_1","canonicalizedTag","canonicalizeUnicodeLocaleId","parser_2","__exportStar","canonicalizeUnicodeLanguageId","aliases_generated_1","likelySubtags_generated_1","canonicalizeKVs","arr","arr_1","sort","compareKV","t1","t2","compareExtension","e1","e2","mergeVariants","v1","v2","v2_1","v","unicodeLanguageId","finalLangAst","replacedLang_1","languageAlias","replacedLangAst","replacedLang_2","replacedLang_3","replacedLang","regionAlias","territoryAlias","replacedRegion","regions","likelySubtag","likelyRegion","scriptAlias","variantAlias","alias","strs","str","internalSlotMap","WeakMap","set","_1","shouldPolyfill"],"mappings":"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AAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,geAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,QAAW,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,S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,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,QAAS,aACT,QAAS,aACT,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,GAAM,aACN,GAAM,aACN,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,IAAO,cACP,IAAO,cACP,GAAM,cACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,WAAY,cACZ,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,IAAO,cACP,GAAM,aACN,GAAM,aACN,GAAM,cACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,cACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,eACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,UAAW,aACX,QAAS,aACT,QAAS,aACT,QAAS,aACT,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,UAAW,aACX,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,UAAW,aACX,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,WAAY,cACZ,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,SAAU,cACV,WAAY,cACZ,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,UAAW,aACX,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,eACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,IAAO,cACP,IAAO,cACP,WAAY,cACZ,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,eACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,SAAU,cACV,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,UAAW,aACX,UAAW,aACX,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,UAAW,aACX,QAAS,aACT,QAAS,aACT,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,aACP,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,cACX,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,cACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,cACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,cAAe,cACf,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,SAAU,aACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,cAAe,cACf,SAAU,cACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,cAAe,cACf,cAAe,cACf,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,WAAY,eACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,cACV,SAAU,cACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,cAAe,cACf,cAAe,cACf,cAAe,cACf,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,IAAO,cACP,WAAY,cACZ,SAAU,cACV,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,UAAW,aACX,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,cACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,cACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,SAAU,cACV,WAAY,cACZ,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,QAAS,aACT,QAAS,aACT,UAAW,aACX,QAAS,aACT,QAAS,aACT,UAAW,aACX,UAAW,aACX,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,QAAS,aACT,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,IAAO,cACP,GAAM,aACN,IAAO,c,kCC90DXrb,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtDqS,EAAQlD,YAAS,EACjB,IAAI2D,EAAUC,EAAQ,GAClB4C,EAAqB5C,EAAQ,IAC7B6C,EAA6B7C,EAAQ,IACrC8C,EAAuB/C,EAAQgD,gBAAgB/C,EAAQ,KACvDgD,EAA0B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACzDC,EAAqB,oCAgFzB,SAASC,EAAuBtC,EAAME,EAAQD,EAAQK,EAAUiC,GAE5D,YADiB,IAAbjC,IAAuBA,EAAW,IACjCiC,EAQE,CACHvC,KAAOA,GAAiB,QAATA,EAAoCA,EAAnBuC,EAAYvC,KAC5CE,OAAQA,GAAUqC,EAAYrC,OAC9BD,OAAQA,GAAUsC,EAAYtC,OAC9BK,SAAUnB,EAAQwC,cAAcxC,EAAQwC,cAAc,GAAIrB,GAAU,GAAOiC,EAAYjC,UAAU,IAX1F,CACHN,KAAMA,GAAQ,MACdE,OAAQA,EACRD,OAAQA,EACRK,SAAUA,EASrB,CACD,SAASkC,EAAiBvB,GACtB,IAAIwB,GAAM,EAAIR,EAA2BtD,sBAAsBsC,GAC3DyB,EAAgBD,EAAIzC,KACpBA,EAAO0C,EAAc1C,KAAME,EAASwC,EAAcxC,OAAQD,EAASyC,EAAczC,OAAQK,EAAWoC,EAAcpC,SACtH,GAAIJ,GAAUD,EAAQ,CAClB,IAAI0C,EAAUV,EAA2BF,eAAc,EAAIE,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAME,OAAQA,EAAQD,OAAQA,EAAQK,SAAU,MACrK,GAAIqC,EAAS,CACT,IAAIxJ,GAAU,EAAI8I,EAA2BrD,wBAAwB+D,GAErE,OADAF,EAAIzC,KAAOsC,OAAuBhb,OAAWA,OAAWA,EAAWgZ,EAAUnH,IACtE,EAAI8I,EAA2BR,qBAAqBgB,EAC9D,CACJ,CACD,GAAIvC,EAAQ,CACR,IAAI0C,EAAUX,EAA2BF,eAAc,EAAIE,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAME,OAAQA,EAAQI,SAAU,MACrJ,GAAIsC,EAAS,CACT,IAAIC,GAAU,EAAIZ,EAA2BrD,wBAAwBgE,GAErE,OADAH,EAAIzC,KAAOsC,OAAuBhb,OAAWA,EAAW2Y,EAAQK,EAAUuC,IACnE,EAAIZ,EAA2BR,qBAAqBgB,EAC9D,CACJ,CACD,GAAIxC,EAAQ,CACR,IAAI6C,EAAUb,EAA2BF,eAAc,EAAIE,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAMC,OAAQA,EAAQK,SAAU,MACrJ,GAAIwC,EAAS,CACT,IAAIC,GAAU,EAAId,EAA2BrD,wBAAwBkE,GAErE,OADAL,EAAIzC,KAAOsC,OAAuBhb,EAAW4Y,OAAQ5Y,EAAWgZ,EAAUyC,IACnE,EAAId,EAA2BR,qBAAqBgB,EAC9D,CACJ,CACD,IAAI1S,EAAQkS,EAA2BF,cAAc/B,IACjDiC,EAA2BF,eAAc,EAAIE,EAA2BP,uBAAuB,CAAE1B,KAAM,MAAOE,OAAQA,EAAQI,SAAU,MAC5I,IAAKvQ,EACD,MAAM,IAAI3F,MAAM,iCAEpB,IAAI8O,GAAQ,EAAI+I,EAA2BrD,wBAAwB7O,GAEnE,OADA0S,EAAIzC,KAAOsC,OAAuBhb,EAAW4Y,EAAQD,EAAQK,EAAUpH,IAChE,EAAI+I,EAA2BR,qBAAqBgB,EAC9D,CA+BD,IAAIjH,EAAwB,WACxB,SAASA,EAAOyF,EAAK/U,GAIjB,KADgBmS,MAAQA,gBAAgB7C,EAAS6C,KAAK2E,iBAAc,GAEhE,MAAM,IAAI9b,UAAU,yCAExB,IAqBI6D,EArBA0P,EAAwBe,EAAOf,sBAC/BwI,EAAoB,CACpB,oBACA,SACA,WACA,YACA,YACA,mBAQJ,GANIxI,EAAsB1N,QAAQ,OAAS,GACvCkW,EAAkBrN,KAAK,aAEvB6E,EAAsB1N,QAAQ,OAAS,GACvCkW,EAAkBrN,KAAK,gBAEftO,IAAR2Z,EACA,MAAM,IAAI/Z,UAAU,uEAExB,GAAmB,kBAAR+Z,GAAmC,kBAARA,EAClC,MAAM,IAAI/Z,UAAU,kCAMpB+Z,EAHe,kBAARA,IACNlW,GAAgB,EAAImX,EAAqBgB,SAASjC,KACnDlW,EAAcoY,kBACRpY,EAAc4O,OAGdsH,EAAIvQ,WAEd3F,GAAgB,EAAImX,EAAqBgB,SAAS7E,MAClD,IAAIhT,GAAU,EAAI2W,EAAmB5W,uBAAuBc,GAC5D+U,EA3MR,SAA2BA,EAAK5V,IAC5B,EAAI2W,EAAmB3I,WAA0B,kBAAR4H,EAAkB,kCAC3D,EAAIe,EAAmB3I,YAAW,EAAI4I,EAA2BjD,gCAAgCiC,GAAM,yBAA0BtV,YACjI,IAAIyX,GAAW,EAAIpB,EAAmB/V,WAAWZ,EAAS,WAAY,cAAU/D,OAAWA,QAC1EA,IAAb8b,IACA,EAAIpB,EAAmB3I,YAAW,EAAI4I,EAA2BhD,yBAAyBmE,GAAW,oCAAqCzX,YAE9I,IAAIuU,GAAS,EAAI8B,EAAmB/V,WAAWZ,EAAS,SAAU,cAAU/D,OAAWA,QACxEA,IAAX4Y,IACA,EAAI8B,EAAmB3I,YAAW,EAAI4I,EAA2BnD,uBAAuBoB,GAAS,kCAAmCvU,YAExI,IAAIsU,GAAS,EAAI+B,EAAmB/V,WAAWZ,EAAS,SAAU,cAAU/D,OAAWA,QACxEA,IAAX2Y,IACA,EAAI+B,EAAmB3I,YAAW,EAAI4I,EAA2BlD,uBAAuBkB,GAAS,kCAAmCtU,YAExI,IAAI0X,GAAa,EAAIpB,EAA2BrD,wBAAwBqC,GAUxE,YATiB3Z,IAAb8b,IACAC,EAAWrD,KAAOoD,QAEP9b,IAAX4Y,IACAmD,EAAWnD,OAASA,QAET5Y,IAAX2Y,IACAoD,EAAWpD,OAASA,GAEjBja,KAAKC,qBAAoB,EAAIgc,EAA2BR,qBAAqBtC,EAAQ+B,SAAS/B,EAAQ+B,SAAS,CAAC,GAAG,EAAIe,EAA2BtD,sBAAsBsC,IAAO,CAAEjB,KAAMqD,MAAgB,EACjN,CAiLaC,CAAkBrC,EAAK5V,GAC7B,IAAIoS,EAAM/W,OAAO4E,OAAO,MACpBiY,GAAW,EAAIvB,EAAmB/V,WAAWZ,EAAS,WAAY,cAAU/D,OAAWA,GAC3F,QAAiBA,IAAbic,IACKlB,EAAmBnU,KAAKqV,GACzB,MAAM,IAAI5X,WAAW,oBAG7B8R,EAAI+F,GAAKD,EACT,IAAIE,GAAY,EAAIzB,EAAmB/V,WAAWZ,EAAS,YAAa,cAAU/D,OAAWA,GAC7F,QAAkBA,IAAdmc,IACKpB,EAAmBnU,KAAKuV,GACzB,MAAM,IAAI9X,WAAW,qBAG7B8R,EAAIiG,GAAKD,EACT,IAAIE,GAAK,EAAI3B,EAAmB/V,WAAWZ,EAAS,YAAa,SAAU,CAAC,MAAO,MAAO,MAAO,YAAQ/D,GACzGmW,EAAIkG,GAAKA,EACT,IAAIC,GAAK,EAAI5B,EAAmB/V,WAAWZ,EAAS,YAAa,SAAU,CAAC,QAAS,QAAS,cAAU/D,GACxGmW,EAAImG,GAAKA,EACT,IACIC,EADAC,GAAM,EAAI9B,EAAmB/V,WAAWZ,EAAS,UAAW,eAAW/D,OAAWA,QAE1EA,IAARwc,IACAD,EAAK1c,OAAO2c,IAEhBrG,EAAIoG,GAAKA,EACT,IAAI9U,GAAkB,EAAIiT,EAAmB/V,WAAWZ,EAAS,kBAAmB,cAAU/D,OAAWA,GACzG,QAAwBA,IAApByH,IACKsT,EAAmBnU,KAAKa,GACzB,MAAM,IAAIpD,WAAW,2BAG7B8R,EAAIpO,GAAKN,EACT,IAAI6L,EAjNZ,SAAoCqG,EAAK5V,EAASoP,GAI9C,IAHA,IAAI2G,EACAX,EAAW,GACXgC,GAAM,EAAIR,EAA2BtD,sBAAsBsC,GACtDxL,EAAK,EAAGrP,EAAKqc,EAAItB,WAAY1L,EAAKrP,EAAGoG,OAAQiJ,IAAM,CACxD,IAAIoM,EAAMzb,EAAGqP,GACI,MAAboM,EAAI1V,OACJiV,EAAmBS,EACfjZ,MAAMyT,QAAQwF,EAAIpB,YAClBA,EAAWoB,EAAIpB,UAE1B,CAED,IADA,IAAIvO,EAASxL,OAAO4E,OAAO,MAClBsL,EAAK,EAAGsF,EAA0BzB,EAAuB7D,EAAKsF,EAAwB1P,OAAQoK,IAAM,CAGzG,IAFA,IAAIqD,EAAMiC,EAAwBtF,GAC9BvK,OAAQ,EAAQ0X,OAAQ,EACnBzM,EAAK,EAAG0M,EAAavD,EAAUnJ,EAAK0M,EAAWxX,OAAQ8K,IAAM,CAClE,IAAIkJ,EAAUwD,EAAW1M,GACrBkJ,EAAQ,KAAOvG,IAEf5N,GADA0X,EAAQvD,GACM,GAErB,EACD,EAAIwB,EAAmB3I,WAAWY,KAAO5O,EAAS,GAAGO,OAAOqO,EAAK,wBACjE,IAAIuC,EAAenR,EAAQ4O,QACN3S,IAAjBkV,KACA,EAAIwF,EAAmB3I,WAAmC,kBAAjBmD,EAA2B,aAAa5Q,OAAOqO,EAAK,sBAC7F5N,EAAQmQ,EACJuH,EACAA,EAAM,GAAK1X,EAGXoU,EAAS7K,KAAK,CAACqE,EAAK5N,KAG5B6F,EAAO+H,GAAO5N,CACjB,CAcD,OAbK+U,EAUDA,EAAiBX,SAAWA,EATxBA,EAASjU,QACTiW,EAAItB,WAAWvL,KAAK,CAChBzJ,KAAM,IACNsU,SAAUA,EACVE,WAAY,KAOxBzO,EAAOyH,OAAS3T,KAAKC,qBAAoB,EAAIgc,EAA2BR,qBAAqBgB,IAAM,GAC5FvQ,CACV,CA8Je+R,CAA2BhD,EAAKxD,EAAKhD,GAC7C1P,EAAc4O,OAASiB,EAAEjB,OACzB5O,EAAcwY,SAAW3I,EAAE4I,GAC3BzY,EAAc0Y,UAAY7I,EAAE8I,GAC5B3Y,EAAcmZ,UAAYtJ,EAAE+I,GACxBlJ,EAAsB1N,QAAQ,OAAS,IACvChC,EAAcoZ,UAAYvJ,EAAEgJ,IAE5BnJ,EAAsB1N,QAAQ,OAAS,IACvChC,EAAcqZ,SAAU,EAAIpC,EAAmB/Z,WAAW2S,EAAEiJ,GAAI,SAEpE9Y,EAAcgE,gBAAkB6L,EAAEvL,EACrC,CAkHD,OA9GAmM,EAAOzS,UAAU8S,SAAW,WACxB,IAAIlC,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,IAEI,OAAO,IAAI6B,EADWgH,EAAiB7I,GAK1C,CAFD,MAAOvJ,GACH,OAAO,IAAIoL,EAAO7B,EACrB,CACJ,EAID6B,EAAOzS,UAAU0S,SAAW,WACxB,IAAI9B,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,IAEI,OAAO,IAAI6B,EApIvB,SAA6ByF,GACzB,IAAIoD,EAAY7B,EAAiBvB,GACjC,IAAKoD,EACD,OAAOpD,EAEXoD,GAAY,EAAIpC,EAA2BP,uBAAuBvC,EAAQ+B,SAAS/B,EAAQ+B,SAAS,CAAC,GAAG,EAAIe,EAA2BrD,wBAAwByF,IAAa,CAAE/D,SAAU,MACxL,IAAImC,GAAM,EAAIR,EAA2BtD,sBAAsBsC,GAC3D7a,EAAKqc,EAAIzC,KAAMA,EAAO5Z,EAAG4Z,KAAME,EAAS9Z,EAAG8Z,OAAQD,EAAS7Z,EAAG6Z,OAAQK,EAAWla,EAAGka,SAEzF,OADYkC,GAAiB,EAAIP,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAMM,SAAU,QAC7F+D,GACH,EAAIpC,EAA2BR,qBAAqBtC,EAAQ+B,SAAS/B,EAAQ+B,SAAS,CAAC,EAAGuB,GAAM,CAAEzC,KAAMsC,EAAuBtC,OAAM1Y,OAAWA,EAAWgZ,MAElKL,GACcuC,GAAiB,EAAIP,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAMC,OAAQA,EAAQK,SAAU,QAC7G+D,GACL,EAAIpC,EAA2BR,qBAAqBtC,EAAQ+B,SAAS/B,EAAQ+B,SAAS,CAAC,EAAGuB,GAAM,CAAEzC,KAAMsC,EAAuBtC,OAAM1Y,EAAW2Y,EAAQK,MAGnKJ,GACcsC,GAAiB,EAAIP,EAA2BP,uBAAuB,CAAE1B,KAAMA,EAAME,OAAQA,EAAQI,SAAU,QAC7G+D,GACL,EAAIpC,EAA2BR,qBAAqBtC,EAAQ+B,SAAS/B,EAAQ+B,SAAS,CAAC,EAAGuB,GAAM,CAAEzC,KAAMsC,EAAuBtC,EAAME,OAAQ5Y,EAAWgZ,MAGhKW,CACV,CA0GiCqD,CAAoB3K,GAK7C,CAFD,MAAOvJ,GACH,OAAO,IAAIoL,EAAO7B,EACrB,CACJ,EACD6B,EAAOzS,UAAU2H,SAAW,WACxB,OAAO,EAAIwR,EAAqBgB,SAAS7E,MAAM1E,MAClD,EACDjT,OAAO+X,eAAejD,EAAOzS,UAAW,WAAY,CAChDwb,IAAK,WACD,IAAI5K,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,OAAO,EAAIsI,EAA2BP,wBAAuB,EAAIO,EAA2BrD,wBAAwBjF,GACvH,EACD6K,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,WAAY,CAChDwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAMkF,QAClD,EACDiB,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,YAAa,CACjDwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAMoF,SAClD,EACDe,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,YAAa,CACjDwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAM6F,SAClD,EACDM,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,YAAa,CACjDwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAM8F,SAClD,EACDK,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,UAAW,CAC/Cwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAM+F,OAClD,EACDI,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,kBAAmB,CACvDwb,IAAK,WACD,OAAO,EAAIrC,EAAqBgB,SAAS7E,MAAMtP,eAClD,EACDyV,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,WAAY,CAIhDwb,IAAK,WACD,IAAI5K,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,OAAO,EAAIsI,EAA2BrD,wBAAwBjF,GAAQqG,IACzE,EACDwE,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,SAAU,CAI9Cwb,IAAK,WACD,IAAI5K,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,OAAO,EAAIsI,EAA2BrD,wBAAwBjF,GAAQuG,MACzE,EACDsE,YAAY,EACZC,cAAc,IAElB/d,OAAO+X,eAAejD,EAAOzS,UAAW,SAAU,CAI9Cwb,IAAK,WACD,IAAI5K,GAAS,EAAIuI,EAAqBgB,SAAS7E,MAAM1E,OACrD,OAAO,EAAIsI,EAA2BrD,wBAAwBjF,GAAQsG,MACzE,EACDuE,YAAY,EACZC,cAAc,IAElBjJ,EAAOf,sBAAwB2H,EACxB5G,CACV,CAxM2B,GAyM5BkD,EAAQlD,OAASA,EACjB,IAC0B,qBAAXkJ,QACPhe,OAAO+X,eAAejD,EAAOzS,UAAW2b,OAAOC,YAAa,CACxDtY,MAAO,cACPuY,UAAU,EACVJ,YAAY,EACZC,cAAc,IAGtB/d,OAAO+X,eAAejD,EAAOzS,UAAUia,YAAa,SAAU,CAC1D3W,MAAO,EACPuY,UAAU,EACVJ,YAAY,EACZC,cAAc,GAKrB,CAFD,MAAOrU,GAEN,CACDsO,EAAQwE,QAAU1H,C,kCCxYlB9U,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtDqS,EAAQO,wBAA0BP,EAAQI,sBAAwBJ,EAAQK,sBAAwBL,EAAQM,+BAAiCN,EAAQE,uBAAyBF,EAAQC,qBAAuBD,EAAQzY,yBAAsB,EACzO,IAAIkZ,EAAUC,EAAQ,GAClByF,EAAWzF,EAAQ,IACnB0F,EAAY1F,EAAQ,IACpB2F,EAAkB3F,EAAQ,IAyB9BV,EAAQzY,oBAHR,SAA6BF,GACzB,OAlBJ,SAAgCA,GAC5B,QAAgBuB,IAAZvB,EACA,MAAO,GAEX,IAAIif,EAAO,GACY,kBAAZjf,IACPA,EAAU,CAACA,IAEf,IAAK,IAAI0P,EAAK,EAAGwP,EAAYlf,EAAS0P,EAAKwP,EAAUzY,OAAQiJ,IAAM,CAC/D,IAAIkE,EAASsL,EAAUxP,GACnByP,GAAmB,EAAIJ,EAAUrD,sBAAqB,EAAIsD,EAAgBI,8BAA6B,EAAIN,EAASlG,sBAAsBhF,KAC1IqL,EAAKjY,QAAQmY,GAAoB,GACjCF,EAAKpP,KAAKsP,EAEjB,CACD,OAAOF,CACV,CAEUlf,CAAuBC,EACjC,EAED,IAAIqf,EAAWhG,EAAQ,IACvB1Y,OAAO+X,eAAeC,EAAS,uBAAwB,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAASzG,oBAAuB,IACrIjY,OAAO+X,eAAeC,EAAS,yBAA0B,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAASxG,sBAAyB,IACzIlY,OAAO+X,eAAeC,EAAS,iCAAkC,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAASpG,8BAAiC,IACzJtY,OAAO+X,eAAeC,EAAS,wBAAyB,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAASrG,qBAAwB,IACvIrY,OAAO+X,eAAeC,EAAS,wBAAyB,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAAStG,qBAAwB,IACvIpY,OAAO+X,eAAeC,EAAS,0BAA2B,CAAE8F,YAAY,EAAMD,IAAK,WAAc,OAAOa,EAASnG,uBAA0B,IAC3IE,EAAQkG,aAAajG,EAAQ,IAAgBV,GAC7CS,EAAQkG,aAAajG,EAAQ,IAAkBV,GAC/CS,EAAQkG,aAAajG,EAAQ,IAAkCV,E,kCCxC/DhY,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtDqS,EAAQyG,4BAA8BzG,EAAQ4G,mCAAgC,EAC9E,IAAInG,EAAUC,EAAQ,GAClBmG,EAAsBnG,EAAQ,IAC9ByF,EAAWzF,EAAQ,IACnBoG,EAA4BpG,EAAQ,IACpC0F,EAAY1F,EAAQ,IAOxB,SAASqG,EAAgBC,GAGrB,IAFA,IAAI7e,EAAM,CAAC,EACPqL,EAAS,GACJuD,EAAK,EAAGkQ,EAAQD,EAAKjQ,EAAKkQ,EAAMnZ,OAAQiJ,IAAM,CACnD,IAAIqM,EAAK6D,EAAMlQ,GACXqM,EAAG,KAAMjb,IAGbA,EAAIib,EAAG,IAAM,EACRA,EAAG,IAAgB,SAAVA,EAAG,GAIb5P,EAAO0D,KAAK,CAACkM,EAAG,GAAG1T,cAAe0T,EAAG,GAAG1T,gBAHxC8D,EAAO0D,KAAK,CAACkM,EAAG,GAAG1T,gBAK1B,CACD,OAAO8D,EAAO0T,KAAKC,EACtB,CACD,SAASA,EAAUC,EAAIC,GACnB,OAAOD,EAAG,GAAKC,EAAG,IAAM,EAAID,EAAG,GAAKC,EAAG,GAAK,EAAI,CACnD,CACD,SAASC,EAAiBC,EAAIC,GAC1B,OAAOD,EAAG9Z,KAAO+Z,EAAG/Z,MAAQ,EAAI8Z,EAAG9Z,KAAO+Z,EAAG/Z,KAAO,EAAI,CAC3D,CACD,SAASga,EAAcC,EAAIC,GAEvB,IADA,IAAInU,EAASiN,EAAQwC,cAAc,GAAIyE,GAAI,GAClC3Q,EAAK,EAAG6Q,EAAOD,EAAI5Q,EAAK6Q,EAAK9Z,OAAQiJ,IAAM,CAChD,IAAI8Q,EAAID,EAAK7Q,GACT2Q,EAAGrZ,QAAQwZ,GAAK,GAChBrU,EAAO0D,KAAK2Q,EAEnB,CACD,OAAOrU,CACV,CAUD,SAASoT,EAA8BkB,GAQnC,IAAIC,EAAeD,EACnB,GAAIA,EAAkBlG,SAAS9T,OAE3B,IADA,IAAIka,EAAiB,GACZjR,EAAK,EAAGrP,EAAKogB,EAAkBlG,SAAU7K,EAAKrP,EAAGoG,OAAQiJ,IAAM,CACpE,IAAI0K,EAAU/Z,EAAGqP,GACjB,GAAKiR,EACDnB,EAAoBoB,eAAc,EAAI7B,EAAUpD,uBAAuB,CACnE1B,KAAMwG,EAAkBxG,KACxBM,SAAU,CAACH,MACT,CAENsG,EAAe,CACXzG,MAFA4G,GAAkB,EAAI/B,EAASjG,wBAAwB8H,EAAepY,MAAMuW,EAAS3F,aAE/Dc,KACtBE,OAAQuG,EAAavG,QAAU0G,EAAgB1G,OAC/CD,OAAQwG,EAAaxG,QAAU2G,EAAgB3G,OAC/CK,SAAU6F,EAAcM,EAAanG,SAAUsG,EAAgBtG,WAEnE,KACH,CACJ,CAIL,GAAImG,EAAavG,QAAUuG,EAAaxG,OAAQ,CAC5C,IAAI4G,EAAiBtB,EAAoBoB,eAAc,EAAI7B,EAAUpD,uBAAuB,CACxF1B,KAAMyG,EAAazG,KACnBE,OAAQuG,EAAavG,OACrBD,OAAQwG,EAAaxG,OACrBK,SAAU,MAEd,GAAIuG,EAEAJ,EAAe,CACXzG,MAFA4G,GAAkB,EAAI/B,EAASjG,wBAAwBiI,EAAevY,MAAMuW,EAAS3F,aAE/Dc,KACtBE,OAAQ0G,EAAgB1G,OACxBD,OAAQ2G,EAAgB3G,OACxBK,SAAUmG,EAAanG,SAGlC,CAGD,GAAImG,EAAaxG,OAAQ,CACrB,IAAI6G,EAAiBvB,EAAoBoB,eAAc,EAAI7B,EAAUpD,uBAAuB,CACxF1B,KAAMyG,EAAazG,KACnBC,OAAQwG,EAAaxG,OACrBK,SAAU,MAEd,GAAIwG,EAEAL,EAAe,CACXzG,MAFA4G,GAAkB,EAAI/B,EAASjG,wBAAwBkI,EAAexY,MAAMuW,EAAS3F,aAE/Dc,KACtBE,OAAQuG,EAAavG,QAAU0G,EAAgB1G,OAC/CD,OAAQ2G,EAAgB3G,OACxBK,SAAUmG,EAAanG,SAGlC,CAGD,IAKQsG,EALJG,EAAexB,EAAoBoB,eAAc,EAAI7B,EAAUpD,uBAAuB,CACtF1B,KAAMyG,EAAazG,KACnBM,SAAU,MAEVyG,IAEAN,EAAe,CACXzG,MAFA4G,GAAkB,EAAI/B,EAASjG,wBAAwBmI,EAAazY,MAAMuW,EAAS3F,aAE7Dc,KACtBE,OAAQuG,EAAavG,QAAU0G,EAAgB1G,OAC/CD,OAAQwG,EAAaxG,QAAU2G,EAAgB3G,OAC/CK,SAAUmG,EAAanG,WAG/B,GAAImG,EAAaxG,OAAQ,CACrB,IAAIA,EAASwG,EAAaxG,OAAOzZ,cAC7BwgB,EAAczB,EAAoB0B,eAAehH,GACjDiH,OAAiB,EACrB,GAAIF,EAAa,CACb,IAAIG,EAAUH,EAAY1Y,MAAM,KAChC4Y,EAAiBC,EAAQ,GACzB,IAAIC,EAAe5B,EAA0BzD,eAAc,EAAI+C,EAAUpD,uBAAuB,CAC5F1B,KAAMyG,EAAazG,KACnBE,OAAQuG,EAAavG,OACrBI,SAAU,MAEd,GAAI8G,EAAc,CACd,IAAIC,GAAe,EAAIxC,EAASjG,wBAAwBwI,EAAa9Y,MAAMuW,EAAS3F,YAAYe,OAC5FoH,GAAgBF,EAAQpa,QAAQsa,IAAiB,IACjDH,EAAiBG,EAExB,CACJ,CACGH,IACAT,EAAaxG,OAASiH,GAE1BT,EAAaxG,OAASwG,EAAaxG,OAAOzZ,aAC7C,CASD,GARIigB,EAAavG,SACbuG,EAAavG,OACTuG,EAAavG,OAAO,GAAG1Z,cACnBigB,EAAavG,OAAOpT,MAAM,GAAGsB,cACjCmX,EAAoB+B,YAAYb,EAAavG,UAC7CuG,EAAavG,OAASqF,EAAoB+B,YAAYb,EAAavG,UAGvEuG,EAAanG,SAAS9T,OAAQ,CAC9B,IAAK,IAAIoD,EAAI,EAAGA,EAAI6W,EAAanG,SAAS9T,OAAQoD,IAAK,CAC/CuQ,EAAUsG,EAAanG,SAAS1Q,GAAGxB,cACvC,GAAImX,EAAoBgC,aAAapH,GAAU,CAC3C,IAAIqH,EAAQjC,EAAoBgC,aAAapH,IACzC,EAAI0E,EAAShG,wBAAwB2I,GACrCf,EAAanG,SAAS1Q,GAAK4X,GAEtB,EAAI3C,EAAS5F,yBAAyBuI,KAE3Cf,EAAazG,KAAOwH,EAE3B,CACJ,CACDf,EAAanG,SAASsF,MACzB,CACD,OAAOa,CACV,CACD/H,EAAQ4G,8BAAgCA,EAmCxC5G,EAAQyG,4BA3BR,SAAqCxL,GAEjC,GADAA,EAAOqG,KAAOsF,EAA8B3L,EAAOqG,MAC/CrG,EAAOwH,WAAY,CACnB,IAAK,IAAI1L,EAAK,EAAGrP,EAAKuT,EAAOwH,WAAY1L,EAAKrP,EAAGoG,OAAQiJ,IAAM,CAC3D,IAAIuE,EAAY5T,EAAGqP,GACnB,OAAQuE,EAAU7N,MACd,IAAK,IACD6N,EAAUyG,SAAWgF,EAAgBzL,EAAUyG,UAC3CzG,EAAU2G,aACV3G,EAAU2G,YArMP8G,EAqMsCzN,EAAU2G,WApMhEja,OAAOC,KAAK8gB,EAAK7gB,QAAO,SAAUC,EAAK6gB,GAE1C,OADA7gB,EAAI6gB,EAAItZ,eAAiB,EAClBvH,CACV,GAAE,CAAC,IAAI+e,SAmMQ,MACJ,IAAK,IACG5L,EAAUgG,OACVhG,EAAUgG,KAAOsF,EAA8BtL,EAAUgG,OAE7DhG,EAAU6G,OAAS4E,EAAgBzL,EAAU6G,QAC7C,MACJ,QACI7G,EAAU3N,MAAQ2N,EAAU3N,MAAM+B,cAG7C,CACDuL,EAAOwH,WAAWyE,KAAKI,EAC1B,CApNL,IAA2ByB,EAqNvB,OAAO9N,CACV,C,kCC7NDjT,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtDqS,EAAQ6I,aAAe7I,EAAQ4I,YAAc5I,EAAQuI,eAAiBvI,EAAQiI,mBAAgB,EAG9FjI,EAAQiI,cAAgB,CACpB,WAAY,MACZ,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,aAAc,MACd,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,GAAM,MACN,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,cAAe,MACf,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,QACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,QACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,YAAa,iBACbaAAc,MACd,IAAO,KACP,QAAS,MACT,QAAS,MACT,YAAa,iBACb,aAAc,mBACd,QAAS,MACT,YAAa,MACb,QAAS,KACT,UAAW,gBACX,WAAY,KACZ,QAAS,MACT,QAAS,MACT,QAAS,MACT,QAAS,MACT,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,GAAM,KACN,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,GAAM,KACN,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,GAAM,KACN,IAAO,KACP,GAAM,KACN,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,GAAM,KACN,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,SAAU,KACV,YAAa,KACb,SAAU,KACV,aAAc,KACda,MACb,YAAa,MACb,SAAU,MACV,YAAa,MACb,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,SAAU,MACV,GAAM,UACN,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,QACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,GAAM,MACN,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,QACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,GAAM,KACN,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,aAAc,SACd,cAAe,MACf,cAAe,MACf,aAAc,MACd,YAAa,MACb,qBAAsB,cACtB,aAAc,MACd,cAAe,MACf,YAAa,MACb,YAAa,MACb,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,MACP,SAAU,KACV,cAAe,UACf,cAAe,UACf,SAAU,MACV,WAAY,KACZ,WAAY,MACZ,SAAU,eACV,aAAc,MACd,SAAU,MACV,WAAY,MACZ,SAAU,MACV,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,KACP,IAAO,KACP,IAAO,MAEXjI,EAAQuI,eAAiB,CACrB,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,scocvI,EAAQ4I,YAAc,CAClB,KAAQ,QAEZ5I,EAAQ6I,aAAe,CACnB,OAAU,UACV,SAAY,U,kCCjnChB7gB,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,G,kCCEtD3F,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtD,IAAIsb,EAAkB,IAAIC,QAS1BlJ,EAAQwE,QARR,SAA0B3a,GACtB,IAAIwC,EAAgB4c,EAAgBpD,IAAIhc,GAKxC,OAJKwC,IACDA,EAAgBrE,OAAO4E,OAAO,MAC9Bqc,EAAgBE,IAAItf,EAAGwC,IAEpBA,CACV,C,kCCXDrE,OAAO+X,eAAeC,EAAS,aAAc,CAAErS,OAAO,IACtD,IAAIyb,EAAK1I,EAAQ,KAEb,EADoBA,EAAQ,IACN2I,mBACtBrhB,OAAO+X,eAAezY,KAAM,SAAU,CAClCqG,MAAOyb,EAAGtM,OACVoJ,UAAU,EACVJ,YAAY,EACZC,cAAc,G","file":"static/js/3.79c22ce3.chunk.js","sourcesContent":["/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = Object.keys(tzData).reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e15) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\n","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    return ToObject(options);\n}\n","export function DefaultNumberOption(val, min, max, fallback) {\n    if (val !== undefined) {\n        val = Number(val);\n        if (isNaN(val) || val < min || val > max) {\n            throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n        }\n        return Math.floor(val);\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    // @ts-expect-error\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    if (typeof opts !== 'object') {\n        throw new TypeError('Options must be an object');\n    }\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    if (typeof options === 'object') {\n        return options;\n    }\n    throw new TypeError('Options must be an object');\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set();\n    var linkNames = new Set();\n    Object.keys(tzData)\n        .map(function (z) { return z.toUpperCase(); })\n        .forEach(function (z) { return zoneNames.add(z); });\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\n        linkNames.add(linkName.toUpperCase());\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n    });\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        var xToString = x.toString();\n        // If xToString is formatted as scientific notation, the number is either very small or very\n        // large. If the precision of the formatted string is lower that requested max precision, we\n        // should still infer them from the formatted string, otherwise the formatted result might have\n        // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n        var xToStringExponentIndex = xToString.indexOf('e');\n        var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n        var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n        if (xToStringExponentIndex >= 0 &&\n            xToStringMantissaWithoutDecimalPoint.length <= p) {\n            e = +xToStringExponent;\n            m =\n                xToStringMantissaWithoutDecimalPoint +\n                    repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n            xFinal = x;\n        }\n        else {\n            e = getMagnitude(x);\n            var decimalPlaceOffset = e - p + 1;\n            // n is the integer containing the required precision digits. To derive the formatted string,\n            // we will adjust its decimal place in the logic below.\n            var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n            // The rounding caused the change of magnitude, so we should increment `e` by 1.\n            if (adjustDecimalPlace(n, p - 1) >= 10) {\n                e = e + 1;\n                // Divide n by 10 to swallow one precision.\n                n = Math.floor(n / 10);\n            }\n            m = n.toString();\n            // Equivalent of n * 10 ** (e - p + 1)\n            xFinal = adjustDecimalPlace(n, p - 1 - e);\n        }\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n        int = e + 1;\n    }\n    else {\n        m = \"0.\".concat(repeat('0', -e - 1)).concat(m);\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n    // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n    function adjustDecimalPlace(x, magnitude) {\n        return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n    }\n}\n","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = \"\".concat(a, \".\").concat(b);\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","export var digitMapping = { \"adlm\": [\"𞥐\", \"𞥑\", \"𞥒\", \"𞥓\", \"𞥔\", \"𞥕\", \"𞥖\", \"𞥗\", \"𞥘\", \"𞥙\"], \"ahom\": [\"𑜰\", \"𑜱\", \"𑜲\", \"𑜳\", \"𑜴\", \"𑜵\", \"𑜶\", \"𑜷\", \"𑜸\", \"𑜹\"], \"arab\": [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"], \"arabext\": [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"], \"bali\": [\"᭐\", \"᭑\", \"᭒\", \"᭓\", \"᭔\", \"᭕\", \"᭖\", \"᭗\", \"᭘\", \"᭙\"], \"beng\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\"], \"bhks\": [\"𑱐\", \"𑱑\", \"𑱒\", \"𑱓\", \"𑱔\", \"𑱕\", \"𑱖\", \"𑱗\", \"𑱘\", \"𑱙\"], \"brah\": [\"𑁦\", \"𑁧\", \"𑁨\", \"𑁩\", \"𑁪\", \"𑁫\", \"𑁬\", \"𑁭\", \"𑁮\", \"𑁯\"], \"cakm\": [\"𑄶\", \"𑄷\", \"𑄸\", \"𑄹\", \"𑄺\", \"𑄻\", \"𑄼\", \"𑄽\", \"𑄾\", \"𑄿\"], \"cham\": [\"꩐\", \"꩑\", \"꩒\", \"꩓\", \"꩔\", \"꩕\", \"꩖\", \"꩗\", \"꩘\", \"꩙\"], \"deva\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\"], \"diak\": [\"𑥐\", \"𑥑\", \"𑥒\", \"𑥓\", \"𑥔\", \"𑥕\", \"𑥖\", \"𑥗\", \"𑥘\", \"𑥙\"], \"fullwide\": [\"０\", \"１\", \"２\", \"３\", \"４\", \"５\", \"６\", \"７\", \"８\", \"９\"], \"gong\": [\"𑶠\", \"𑶡\", \"𑶢\", \"𑶣\", \"𑶤\", \"𑶥\", \"𑶦\", \"𑶧\", \"𑶨\", \"𑶩\"], \"gonm\": [\"𑵐\", \"𑵑\", \"𑵒\", \"𑵓\", \"𑵔\", \"𑵕\", \"𑵖\", \"𑵗\", \"𑵘\", \"𑵙\"], \"gujr\": [\"૦\", \"૧\", \"૨\", \"૩\", \"૪\", \"૫\", \"૬\", \"૭\", \"૮\", \"૯\"], \"guru\": [\"੦\", \"੧\", \"੨\", \"੩\", \"੪\", \"੫\", \"੬\", \"੭\", \"੮\", \"੯\"], \"hanidec\": [\"〇\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"], \"hmng\": [\"𖭐\", \"𖭑\", \"𖭒\", \"𖭓\", \"𖭔\", \"𖭕\", \"𖭖\", \"𖭗\", \"𖭘\", \"𖭙\"], \"hmnp\": [\"𞅀\", \"𞅁\", \"𞅂\", \"𞅃\", \"𞅄\", \"𞅅\", \"𞅆\", \"𞅇\", \"𞅈\", \"𞅉\"], \"java\": [\"꧐\", \"꧑\", \"꧒\", \"꧓\", \"꧔\", \"꧕\", \"꧖\", \"꧗\", \"꧘\", \"꧙\"], \"kali\": [\"꤀\", \"꤁\", \"꤂\", \"꤃\", \"꤄\", \"꤅\", \"꤆\", \"꤇\", \"꤈\", \"꤉\"], \"khmr\": [\"០\", \"១\", \"២\", \"៣\", \"៤\", \"៥\", \"៦\", \"៧\", \"៨\", \"៩\"], \"knda\": [\"೦\", \"೧\", \"೨\", \"೩\", \"೪\", \"೫\", \"೬\", \"೭\", \"೮\", \"೯\"], \"lana\": [\"᪀\", \"᪁\", \"᪂\", \"᪃\", \"᪄\", \"᪅\", \"᪆\", \"᪇\", \"᪈\", \"᪉\"], \"lanatham\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"], \"laoo\": [\"໐\", \"໑\", \"໒\", \"໓\", \"໔\", \"໕\", \"໖\", \"໗\", \"໘\", \"໙\"], \"lepc\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"], \"limb\": [\"᥆\", \"᥇\", \"᥈\", \"᥉\", \"᥊\", \"᥋\", \"᥌\", \"᥍\", \"᥎\", \"᥏\"], \"mathbold\": [\"𝟎\", \"𝟏\", \"𝟐\", \"𝟑\", \"𝟒\", \"𝟓\", \"𝟔\", \"𝟕\", \"𝟖\", \"𝟗\"], \"mathdbl\": [\"𝟘\", \"𝟙\", \"𝟚\", \"𝟛\", \"𝟜\", \"𝟝\", \"𝟞\", \"𝟟\", \"𝟠\", \"𝟡\"], \"mathmono\": [\"𝟶\", \"𝟷\", \"𝟸\", \"𝟹\", \"𝟺\", \"𝟻\", \"𝟼\", \"𝟽\", \"𝟾\", \"𝟿\"], \"mathsanb\": [\"𝟬\", \"𝟭\", \"𝟮\", \"𝟯\", \"𝟰\", \"𝟱\", \"𝟲\", \"𝟳\", \"𝟴\", \"𝟵\"], \"mathsans\": [\"𝟢\", \"𝟣\", \"𝟤\", \"𝟥\", \"𝟦\", \"𝟧\", \"𝟨\", \"𝟩\", \"𝟪\", \"𝟫\"], \"mlym\": [\"൦\", \"൧\", \"൨\", \"൩\", \"൪\", \"൫\", \"൬\", \"൭\", \"൮\", \"൯\"], \"modi\": [\"𑙐\", \"𑙑\", \"𑙒\", \"𑙓\", \"𑙔\", \"𑙕\", \"𑙖\", \"𑙗\", \"𑙘\", \"𑙙\"], \"mong\": [\"᠐\", \"᠑\", \"᠒\", \"᠓\", \"᠔\", \"᠕\", \"᠖\", \"᠗\", \"᠘\", \"᠙\"], \"mroo\": [\"𖩠\", \"𖩡\", \"𖩢\", \"𖩣\", \"𖩤\", \"𖩥\", \"𖩦\", \"𖩧\", \"𖩨\", \"𖩩\"], \"mtei\": [\"꯰\", \"꯱\", \"꯲\", \"꯳\", \"꯴\", \"꯵\", \"꯶\", \"꯷\", \"꯸\", \"꯹\"], \"mymr\": [\"၀\", \"၁\", \"၂\", \"၃\", \"၄\", \"၅\", \"၆\", \"၇\", \"၈\", \"၉\"], \"mymrshan\": [\"႐\", \"႑\", \"႒\", \"႓\", \"႔\", \"႕\", \"႖\", \"႗\", \"႘\", \"႙\"], \"mymrtlng\": [\"꧰\", \"꧱\", \"꧲\", \"꧳\", \"꧴\", \"꧵\", \"꧶\", \"꧷\", \"꧸\", \"꧹\"], \"newa\": [\"𑑐\", \"𑑑\", \"𑑒\", \"𑑓\", \"𑑔\", \"𑑕\", \"𑑖\", \"𑑗\", \"𑑘\", \"𑑙\"], \"nkoo\": [\"߀\", \"߁\", \"߂\", \"߃\", \"߄\", \"߅\", \"߆\", \"߇\", \"߈\", \"߉\"], \"olck\": [\"᱐\", \"᱑\", \"᱒\", \"᱓\", \"᱔\", \"᱕\", \"᱖\", \"᱗\", \"᱘\", \"᱙\"], \"orya\": [\"୦\", \"୧\", \"୨\", \"୩\", \"୪\", \"୫\", \"୬\", \"୭\", \"୮\", \"୯\"], \"osma\": [\"𐒠\", \"𐒡\", \"𐒢\", \"𐒣\", \"𐒤\", \"𐒥\", \"𐒦\", \"𐒧\", \"𐒨\", \"𐒩\"], \"rohg\": [\"𐴰\", \"𐴱\", \"𐴲\", \"𐴳\", \"𐴴\", \"𐴵\", \"𐴶\", \"𐴷\", \"𐴸\", \"𐴹\"], \"saur\": [\"꣐\", \"꣑\", \"꣒\", \"꣓\", \"꣔\", \"꣕\", \"꣖\", \"꣗\", \"꣘\", \"꣙\"], \"segment\": [\"🯰\", \"🯱\", \"🯲\", \"🯳\", \"🯴\", \"🯵\", \"🯶\", \"🯷\", \"🯸\", \"🯹\"], \"shrd\": [\"𑇐\", \"𑇑\", \"𑇒\", \"𑇓\", \"𑇔\", \"𑇕\", \"𑇖\", \"𑇗\", \"𑇘\", \"𑇙\"], \"sind\": [\"𑋰\", \"𑋱\", \"𑋲\", \"𑋳\", \"𑋴\", \"𑋵\", \"𑋶\", \"𑋷\", \"𑋸\", \"𑋹\"], \"sinh\": [\"෦\", \"෧\", \"෨\", \"෩\", \"෪\", \"෫\", \"෬\", \"෭\", \"෮\", \"෯\"], \"sora\": [\"𑃰\", \"𑃱\", \"𑃲\", \"𑃳\", \"𑃴\", \"𑃵\", \"𑃶\", \"𑃷\", \"𑃸\", \"𑃹\"], \"sund\": [\"᮰\", \"᮱\", \"᮲\", \"᮳\", \"᮴\", \"᮵\", \"᮶\", \"᮷\", \"᮸\", \"᮹\"], \"takr\": [\"𑛀\", \"𑛁\", \"𑛂\", \"𑛃\", \"𑛄\", \"𑛅\", \"𑛆\", \"𑛇\", \"𑛈\", \"𑛉\"], \"talu\": [\"᧐\", \"᧑\", \"᧒\", \"᧓\", \"᧔\", \"᧕\", \"᧖\", \"᧗\", \"᧘\", \"᧙\"], \"tamldec\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\"], \"telu\": [\"౦\", \"౧\", \"౨\", \"౩\", \"౪\", \"౫\", \"౬\", \"౭\", \"౮\", \"౯\"], \"thai\": [\"๐\", \"๑\", \"๒\", \"๓\", \"๔\", \"๕\", \"๖\", \"๗\", \"๘\", \"๙\"], \"tibt\": [\"༠\", \"༡\", \"༢\", \"༣\", \"༤\", \"༥\", \"༦\", \"༧\", \"༨\", \"༩\"], \"tirh\": [\"𑓐\", \"𑓑\", \"𑓒\", \"𑓓\", \"𑓔\", \"𑓕\", \"𑓖\", \"𑓗\", \"𑓘\", \"𑓙\"], \"vaii\": [\"ᘠ\", \"ᘡ\", \"ᘢ\", \"ᘣ\", \"ᘤ\", \"ᘥ\", \"ᘦ\", \"ᘧ\", \"ᘨ\", \"ᘩ\"], \"wara\": [\"𑣠\", \"𑣡\", \"𑣢\", \"𑣣\", \"𑣤\", \"𑣥\", \"𑣦\", \"𑣧\", \"𑣨\", \"𑣩\"], \"wcho\": [\"𞋰\", \"𞋱\", \"𞋲\", \"𞋳\", \"𞋴\", \"𞋵\", \"𞋶\", \"𞋷\", \"𞋸\", \"𞋹\"] };\n","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n","import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && options.useGrouping, decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (!isFinite(x)) {\n        n = symbols.infinity;\n    }\n    else {\n        if (internalSlots.style === 'percent') {\n            x *= 100;\n        }\n        ;\n        _b = ComputeExponent(numberFormat, x, {\n            getInternalSlots: getInternalSlots,\n        }), exponent = _b[0], magnitude = _b[1];\n        // Preserve more precision by doing multiplication when exponent is negative.\n        x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return formatToParts({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(nf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","export var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */\nexport function BestAvailableLocale(availableLocales, locale) {\n    var candidate = locale;\n    while (true) {\n        if (availableLocales.has(candidate)) {\n            return candidate;\n        }\n        var pos = candidate.lastIndexOf('-');\n        if (!~pos) {\n            return undefined;\n        }\n        if (pos >= 2 && candidate[pos - 2] === '-') {\n            pos -= 2;\n        }\n        candidate = candidate.slice(0, pos);\n    }\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\nexport function UnicodeExtensionValue(extension, key) {\n    invariant(key.length === 2, 'key must have 2 elements');\n    var size = extension.length;\n    var searchValue = \"-\".concat(key, \"-\");\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while (!done) {\n            var e = extension.indexOf('-', k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            }\n            else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            }\n            else if (e === -1) {\n                end = size;\n                done = true;\n            }\n            else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\".concat(key);\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return '';\n    }\n    return undefined;\n}\n","import { LookupMatcher } from './LookupMatcher';\nimport { BestFitMatcher } from './BestFitMatcher';\nimport { invariant } from './utils';\nimport { UnicodeExtensionValue } from './UnicodeExtensionValue';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === 'lookup') {\n        r = LookupMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    else {\n        r = BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    var foundLocale = r.locale;\n    var result = { locale: '', dataLocale: foundLocale };\n    var supportedExtension = '-u';\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n        var key = relevantExtensionKeys_1[_i];\n        invariant(foundLocale in localeData, \"Missing locale data for \".concat(foundLocale));\n        var foundLocaleData = localeData[foundLocale];\n        invariant(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \".concat(key, \" must be an object\"));\n        var keyLocaleData = foundLocaleData[key];\n        invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n        var value = keyLocaleData[0];\n        invariant(typeof value === 'string' || value === null, \"value must be string or null but got \".concat(typeof value, \" in key \").concat(key));\n        var supportedExtensionAddition = '';\n        if (r.extension) {\n            var requestedValue = UnicodeExtensionValue(r.extension, key);\n            if (requestedValue !== undefined) {\n                if (requestedValue !== '') {\n                    if (~keyLocaleData.indexOf(requestedValue)) {\n                        value = requestedValue;\n                        supportedExtensionAddition = \"-\".concat(key, \"-\").concat(value);\n                    }\n                }\n                else if (~requestedValue.indexOf('true')) {\n                    value = 'true';\n                    supportedExtensionAddition = \"-\".concat(key);\n                }\n            }\n        }\n        if (key in options) {\n            var optionsValue = options[key];\n            invariant(typeof optionsValue === 'string' ||\n                typeof optionsValue === 'undefined' ||\n                optionsValue === null, 'optionsValue must be String, Undefined or Null');\n            if (~keyLocaleData.indexOf(optionsValue)) {\n                if (optionsValue !== value) {\n                    value = optionsValue;\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        result[key] = value;\n        supportedExtension += supportedExtensionAddition;\n    }\n    if (supportedExtension.length > 2) {\n        var privateIndex = foundLocale.indexOf('-x-');\n        if (privateIndex === -1) {\n            foundLocale = foundLocale + supportedExtension;\n        }\n        else {\n            var preExtension = foundLocale.slice(0, privateIndex);\n            var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n    }\n    result.locale = foundLocale;\n    return result;\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var result = { locale: '' };\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            result.locale = availableLocale;\n            if (locale !== noExtensionLocale) {\n                result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n            }\n            return result;\n        }\n    }\n    result.locale = getDefaultLocale();\n    return result;\n}\n","import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var minimizedAvailableLocaleMap = {};\n    var availableLocaleMap = {};\n    var canonicalizedLocaleMap = {};\n    var minimizedAvailableLocales = new Set();\n    availableLocales.forEach(function (locale) {\n        var minimizedLocale = new Intl.Locale(locale)\n            .minimize()\n            .toString();\n        var canonicalizedLocale = Intl.getCanonicalLocales(locale)[0] || locale;\n        minimizedAvailableLocaleMap[minimizedLocale] = locale;\n        availableLocaleMap[locale] = locale;\n        canonicalizedLocaleMap[canonicalizedLocale] = locale;\n        minimizedAvailableLocales.add(minimizedLocale);\n        minimizedAvailableLocales.add(locale);\n        minimizedAvailableLocales.add(canonicalizedLocale);\n    });\n    var foundLocale;\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var l = requestedLocales_1[_i];\n        if (foundLocale) {\n            break;\n        }\n        var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        if (availableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        if (minimizedAvailableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        var locale = new Intl.Locale(noExtensionLocale);\n        var maximizedRequestedLocale = locale.maximize().toString();\n        var minimizedRequestedLocale = locale.minimize().toString();\n        // Check minimized locale\n        if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n            foundLocale = minimizedRequestedLocale;\n            break;\n        }\n        // Lookup algo on maximized locale\n        foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n    }\n    if (!foundLocale) {\n        return { locale: getDefaultLocale() };\n    }\n    return {\n        locale: availableLocaleMap[foundLocale] ||\n            canonicalizedLocaleMap[foundLocale] ||\n            minimizedAvailableLocaleMap[foundLocale] ||\n            foundLocale,\n    };\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\n * @param availableLocales\n * @param requestedLocales\n */\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\n    var subset = [];\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            subset.push(availableLocale);\n        }\n    }\n    return subset;\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { GetNumberOption } from '../GetNumberOption';\nimport { DefaultNumberOption } from '../DefaultNumberOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    if (mnsd !== undefined || mxsd !== undefined) {\n        internalSlots.roundingType = 'significantDigits';\n        mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n        internalSlots.minimumSignificantDigits = mnsd;\n        internalSlots.maximumSignificantDigits = mxsd;\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        internalSlots.roundingType = 'fractionDigits';\n        mnfd = DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        internalSlots.minimumFractionDigits = mnfd;\n        internalSlots.maximumFractionDigits = mxfd;\n    }\n    else if (notation === 'compact') {\n        internalSlots.roundingType = 'compactRounding';\n    }\n    else {\n        internalSlots.roundingType = 'fractionDigits';\n        internalSlots.minimumFractionDigits = mnfdDefault;\n        internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = CoerceOptionsToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[r.dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n    }\n    var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n    internalSlots.useGrouping = useGrouping;\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n    internalSlots.signDisplay = signDisplay;\n    return nf;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { ToObject } from './262';\nimport { GetOption } from './GetOption';\nimport { LookupSupportedLocales } from '@formatjs/intl-localematcher';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(availableLocales, requestedLocales);\n    }\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUnicodeLocaleId = exports.parseUnicodeLanguageId = exports.isUnicodeVariantSubtag = exports.isUnicodeScriptSubtag = exports.isUnicodeRegionSubtag = exports.isStructurallyValidLanguageTag = exports.isUnicodeLanguageSubtag = exports.SEPARATOR = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ALPHANUM_1_8 = /^[a-z0-9]{1,8}$/i;\nvar ALPHANUM_2_8 = /^[a-z0-9]{2,8}$/i;\nvar ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;\nvar KEY_REGEX = /^[a-z0-9][a-z]$/i;\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n// alphanum-[tTuUxX]\nvar OTHER_EXTENSION_TYPE = /^[0-9a-svwyz]$/i;\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar UNICODE_VARIANT_SUBTAG_REGEX = /^([a-z0-9]{5,8}|[0-9][a-z0-9]{3})$/i;\nvar UNICODE_LANGUAGE_SUBTAG_REGEX = /^([a-z]{2,3}|[a-z]{5,8})$/i;\nvar TKEY_REGEX = /^[a-z][0-9]$/i;\nexports.SEPARATOR = '-';\nfunction isUnicodeLanguageSubtag(lang) {\n    return UNICODE_LANGUAGE_SUBTAG_REGEX.test(lang);\n}\nexports.isUnicodeLanguageSubtag = isUnicodeLanguageSubtag;\nfunction isStructurallyValidLanguageTag(tag) {\n    try {\n        parseUnicodeLanguageId(tag.split(exports.SEPARATOR));\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.isStructurallyValidLanguageTag = isStructurallyValidLanguageTag;\nfunction isUnicodeRegionSubtag(region) {\n    return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\nexports.isUnicodeRegionSubtag = isUnicodeRegionSubtag;\nfunction isUnicodeScriptSubtag(script) {\n    return ALPHA_4.test(script);\n}\nexports.isUnicodeScriptSubtag = isUnicodeScriptSubtag;\nfunction isUnicodeVariantSubtag(variant) {\n    return UNICODE_VARIANT_SUBTAG_REGEX.test(variant);\n}\nexports.isUnicodeVariantSubtag = isUnicodeVariantSubtag;\nfunction parseUnicodeLanguageId(chunks) {\n    if (typeof chunks === 'string') {\n        chunks = chunks.split(exports.SEPARATOR);\n    }\n    var lang = chunks.shift();\n    if (!lang) {\n        throw new RangeError('Missing unicode_language_subtag');\n    }\n    if (lang === 'root') {\n        return { lang: 'root', variants: [] };\n    }\n    // unicode_language_subtag\n    if (!isUnicodeLanguageSubtag(lang)) {\n        throw new RangeError('Malformed unicode_language_subtag');\n    }\n    var script;\n    // unicode_script_subtag\n    if (chunks.length && isUnicodeScriptSubtag(chunks[0])) {\n        script = chunks.shift();\n    }\n    var region;\n    // unicode_region_subtag\n    if (chunks.length && isUnicodeRegionSubtag(chunks[0])) {\n        region = chunks.shift();\n    }\n    var variants = {};\n    while (chunks.length && isUnicodeVariantSubtag(chunks[0])) {\n        var variant = chunks.shift();\n        if (variant in variants) {\n            throw new RangeError(\"Duplicate variant \\\"\".concat(variant, \"\\\"\"));\n        }\n        variants[variant] = 1;\n    }\n    return {\n        lang: lang,\n        script: script,\n        region: region,\n        variants: Object.keys(variants),\n    };\n}\nexports.parseUnicodeLanguageId = parseUnicodeLanguageId;\nfunction parseUnicodeExtension(chunks) {\n    var keywords = [];\n    var keyword;\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length) {\n        return {\n            type: 'u',\n            keywords: keywords,\n            attributes: [],\n        };\n    }\n    // Mix of attributes & keywords\n    // Check for attributes first\n    var attributes = [];\n    while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n        attributes.push(chunks.shift());\n    }\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length || attributes.length) {\n        return {\n            type: 'u',\n            attributes: attributes,\n            keywords: keywords,\n        };\n    }\n    throw new RangeError('Malformed unicode_extension');\n}\nfunction parseKeyword(chunks) {\n    var key;\n    if (!KEY_REGEX.test(chunks[0])) {\n        return;\n    }\n    key = chunks.shift();\n    var type = [];\n    while (chunks.length && TYPE_REGEX.test(chunks[0])) {\n        type.push(chunks.shift());\n    }\n    var value = '';\n    if (type.length) {\n        value = type.join(exports.SEPARATOR);\n    }\n    return [key, value];\n}\nfunction parseTransformedExtension(chunks) {\n    var lang;\n    try {\n        lang = parseUnicodeLanguageId(chunks);\n    }\n    catch (e) {\n        // Try just parsing tfield\n    }\n    var fields = [];\n    while (chunks.length && TKEY_REGEX.test(chunks[0])) {\n        var key = chunks.shift();\n        var value = [];\n        while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n            value.push(chunks.shift());\n        }\n        if (!value.length) {\n            throw new RangeError(\"Missing tvalue for tkey \\\"\".concat(key, \"\\\"\"));\n        }\n        fields.push([key, value.join(exports.SEPARATOR)]);\n    }\n    if (fields.length) {\n        return {\n            type: 't',\n            fields: fields,\n            lang: lang,\n        };\n    }\n    throw new RangeError('Malformed transformed_extension');\n}\nfunction parsePuExtension(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_1_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return {\n            type: 'x',\n            value: exts.join(exports.SEPARATOR),\n        };\n    }\n    throw new RangeError('Malformed private_use_extension');\n}\nfunction parseOtherExtensionValue(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_2_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return exts.join(exports.SEPARATOR);\n    }\n    return '';\n}\nfunction parseExtensions(chunks) {\n    if (!chunks.length) {\n        return { extensions: [] };\n    }\n    var extensions = [];\n    var unicodeExtension;\n    var transformedExtension;\n    var puExtension;\n    var otherExtensionMap = {};\n    do {\n        var type = chunks.shift();\n        switch (type) {\n            case 'u':\n            case 'U':\n                if (unicodeExtension) {\n                    throw new RangeError('There can only be 1 -u- extension');\n                }\n                unicodeExtension = parseUnicodeExtension(chunks);\n                extensions.push(unicodeExtension);\n                break;\n            case 't':\n            case 'T':\n                if (transformedExtension) {\n                    throw new RangeError('There can only be 1 -t- extension');\n                }\n                transformedExtension = parseTransformedExtension(chunks);\n                extensions.push(transformedExtension);\n                break;\n            case 'x':\n            case 'X':\n                if (puExtension) {\n                    throw new RangeError('There can only be 1 -x- extension');\n                }\n                puExtension = parsePuExtension(chunks);\n                extensions.push(puExtension);\n                break;\n            default:\n                if (!OTHER_EXTENSION_TYPE.test(type)) {\n                    throw new RangeError('Malformed extension type');\n                }\n                if (type in otherExtensionMap) {\n                    throw new RangeError(\"There can only be 1 -\".concat(type, \"- extension\"));\n                }\n                var extension = {\n                    type: type,\n                    value: parseOtherExtensionValue(chunks),\n                };\n                otherExtensionMap[extension.type] = extension;\n                extensions.push(extension);\n                break;\n        }\n    } while (chunks.length);\n    return { extensions: extensions };\n}\nfunction parseUnicodeLocaleId(locale) {\n    var chunks = locale.split(exports.SEPARATOR);\n    var lang = parseUnicodeLanguageId(chunks);\n    return tslib_1.__assign({ lang: lang }, parseExtensions(chunks));\n}\nexports.parseUnicodeLocaleId = parseUnicodeLocaleId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitUnicodeLocaleId = exports.emitUnicodeLanguageId = void 0;\nvar tslib_1 = require(\"tslib\");\nfunction emitUnicodeLanguageId(lang) {\n    if (!lang) {\n        return '';\n    }\n    return tslib_1.__spreadArray([lang.lang, lang.script, lang.region], (lang.variants || []), true).filter(Boolean)\n        .join('-');\n}\nexports.emitUnicodeLanguageId = emitUnicodeLanguageId;\nfunction emitUnicodeLocaleId(_a) {\n    var lang = _a.lang, extensions = _a.extensions;\n    var chunks = [emitUnicodeLanguageId(lang)];\n    for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var ext = extensions_1[_i];\n        chunks.push(ext.type);\n        switch (ext.type) {\n            case 'u':\n                chunks.push.apply(chunks, tslib_1.__spreadArray(tslib_1.__spreadArray([], ext.attributes, false), ext.keywords.reduce(function (all, kv) { return all.concat(kv); }, []), false));\n                break;\n            case 't':\n                chunks.push.apply(chunks, tslib_1.__spreadArray([emitUnicodeLanguageId(ext.lang)], ext.fields.reduce(function (all, kv) { return all.concat(kv); }, []), false));\n                break;\n            default:\n                chunks.push(ext.value);\n                break;\n        }\n    }\n    return chunks.filter(Boolean).join('-');\n}\nexports.emitUnicodeLocaleId = emitUnicodeLocaleId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.likelySubtags = void 0;\n/* @generated */\n// prettier-ignore  \nexports.likelySubtags = {\n    \"aa\": \"aa-Latn-ET\",\n    \"aai\": \"aai-Latn-ZZ\",\n    \"aak\": \"aak-Latn-ZZ\",\n    \"aau\": \"aau-Latn-ZZ\",\n    \"ab\": \"ab-Cyrl-GE\",\n    \"abi\": \"abi-Latn-ZZ\",\n    \"abq\": \"abq-Cyrl-ZZ\",\n    \"abr\": \"abr-Latn-GH\",\n    \"abt\": \"abt-Latn-ZZ\",\n    \"aby\": \"aby-Latn-ZZ\",\n    \"acd\": \"acd-Latn-ZZ\",\n    \"ace\": \"ace-Latn-ID\",\n    \"ach\": \"ach-Latn-UG\",\n    \"ada\": \"ada-Latn-GH\",\n    \"ade\": \"ade-Latn-ZZ\",\n    \"adj\": \"adj-Latn-ZZ\",\n    \"adp\": \"adp-Tibt-BT\",\n    \"ady\": \"ady-Cyrl-RU\",\n    \"adz\": \"adz-Latn-ZZ\",\n    \"ae\": \"ae-Avst-IR\",\n    \"aeb\": \"aeb-Arab-TN\",\n    \"aey\": \"aey-Latn-ZZ\",\n    \"af\": \"af-Latn-ZA\",\n    \"agc\": \"agc-Latn-ZZ\",\n    \"agd\": \"agd-Latn-ZZ\",\n    \"agg\": \"agg-Latn-ZZ\",\n    \"agm\": \"agm-Latn-ZZ\",\n    \"ago\": \"ago-Latn-ZZ\",\n    \"agq\": \"agq-Latn-CM\",\n    \"aha\": \"aha-Latn-ZZ\",\n    \"ahl\": \"ahl-Latn-ZZ\",\n    \"aho\": \"aho-Ahom-IN\",\n    \"ajg\": \"ajg-Latn-ZZ\",\n    \"ak\": \"ak-Latn-GH\",\n    \"akk\": \"akk-Xsux-IQ\",\n    \"ala\": \"ala-Latn-ZZ\",\n    \"ali\": \"ali-Latn-ZZ\",\n    \"aln\": \"aln-Latn-XK\",\n    \"alt\": \"alt-Cyrl-RU\",\n    \"am\": \"am-Ethi-ET\",\n    \"amm\": \"amm-Latn-ZZ\",\n    \"amn\": \"amn-Latn-ZZ\",\n    \"amo\": \"amo-Latn-NG\",\n    \"amp\": \"amp-Latn-ZZ\",\n    \"an\": \"an-Latn-ES\",\n    \"anc\": \"anc-Latn-ZZ\",\n    \"ank\": \"ank-Latn-ZZ\",\n    \"ann\": \"ann-Latn-ZZ\",\n    \"any\": \"any-Latn-ZZ\",\n    \"aoj\": \"aoj-Latn-ZZ\",\n    \"aom\": \"aom-Latn-ZZ\",\n    \"aoz\": \"aoz-Latn-ID\",\n    \"apc\": \"apc-Arab-ZZ\",\n    \"apd\": \"apd-Arab-TG\",\n    \"ape\": \"ape-Latn-ZZ\",\n    \"apr\": \"apr-Latn-ZZ\",\n    \"aps\": \"aps-Latn-ZZ\",\n    \"apz\": \"apz-Latn-ZZ\",\n    \"ar\": \"ar-Arab-EG\",\n    \"arc\": \"arc-Armi-IR\",\n    \"arc-Nbat\": \"arc-Nbat-JO\",\n    \"arc-Palm\": \"arc-Palm-SY\",\n    \"arh\": \"arh-Latn-ZZ\",\n    \"arn\": \"arn-Latn-CL\",\n    \"aro\": \"aro-Latn-BO\",\n    \"arq\": \"arq-Arab-DZ\",\n    \"ars\": \"ars-Arab-SA\",\n    \"ary\": \"ary-Arab-MA\",\n    \"arz\": \"arz-Arab-EG\",\n    \"as\": \"as-Beng-IN\",\n    \"asa\": \"asa-Latn-TZ\",\n    \"ase\": \"ase-Sgnw-US\",\n    \"asg\": \"asg-Latn-ZZ\",\n    \"aso\": \"aso-Latn-ZZ\",\n    \"ast\": \"ast-Latn-ES\",\n    \"ata\": \"ata-Latn-ZZ\",\n    \"atg\": \"atg-Latn-ZZ\",\n    \"atj\": \"atj-Latn-CA\",\n    \"auy\": \"auy-Latn-ZZ\",\n    \"av\": \"av-Cyrl-RU\",\n    \"avl\": \"avl-Arab-ZZ\",\n    \"avn\": \"avn-Latn-ZZ\",\n    \"avt\": \"avt-Latn-ZZ\",\n    \"avu\": \"avu-Latn-ZZ\",\n    \"awa\": \"awa-Deva-IN\",\n    \"awb\": \"awb-Latn-ZZ\",\n    \"awo\": \"awo-Latn-ZZ\",\n    \"awx\": \"awx-Latn-ZZ\",\n    \"ay\": \"ay-Latn-BO\",\n    \"ayb\": \"ayb-Latn-ZZ\",\n    \"az\": \"az-Latn-AZ\",\n    \"az-Arab\": \"az-Arab-IR\",\n    \"az-IQ\": \"az-Arab-IQ\",\n    \"az-IR\": \"az-Arab-IR\",\n    \"az-RU\": \"az-Cyrl-RU\",\n    \"ba\": \"ba-Cyrl-RU\",\n    \"bal\": \"bal-Arab-PK\",\n    \"ban\": \"ban-Latn-ID\",\n    \"bap\": \"bap-Deva-NP\",\n    \"bar\": \"bar-Latn-AT\",\n    \"bas\": \"bas-Latn-CM\",\n    \"bav\": \"bav-Latn-ZZ\",\n    \"bax\": \"bax-Bamu-CM\",\n    \"bba\": \"bba-Latn-ZZ\",\n    \"bbb\": \"bbb-Latn-ZZ\",\n    \"bbc\": \"bbc-Latn-ID\",\n    \"bbd\": \"bbd-Latn-ZZ\",\n    \"bbj\": \"bbj-Latn-CM\",\n    \"bbp\": \"bbp-Latn-ZZ\",\n    \"bbr\": \"bbr-Latn-ZZ\",\n    \"bcf\": \"bcf-Latn-ZZ\",\n    \"bch\": \"bch-Latn-ZZ\",\n    \"bci\": \"bci-Latn-CI\",\n    \"bcm\": \"bcm-Latn-ZZ\",\n    \"bcn\": \"bcn-Latn-ZZ\",\n    \"bco\": \"bco-Latn-ZZ\",\n    \"bcq\": \"bcq-Ethi-ZZ\",\n    \"bcu\": \"bcu-Latn-ZZ\",\n    \"bdd\": \"bdd-Latn-ZZ\",\n    \"be\": \"be-Cyrl-BY\",\n    \"bef\": \"bef-Latn-ZZ\",\n    \"beh\": \"beh-Latn-ZZ\",\n    \"bej\": \"bej-Arab-SD\",\n    \"bem\": \"bem-Latn-ZM\",\n    \"bet\": \"bet-Latn-ZZ\",\n    \"bew\": \"bew-Latn-ID\",\n    \"bex\": \"bex-Latn-ZZ\",\n    \"bez\": \"bez-Latn-TZ\",\n    \"bfd\": \"bfd-Latn-CM\",\n    \"bfq\": \"bfq-Taml-IN\",\n    \"bft\": \"bft-Arab-PK\",\n    \"bfy\": \"bfy-Deva-IN\",\n    \"bg\": \"bg-Cyrl-BG\",\n    \"bgc\": \"bgc-Deva-IN\",\n    \"bgn\": \"bgn-Arab-PK\",\n    \"bgx\": \"bgx-Grek-TR\",\n    \"bhb\": \"bhb-Deva-IN\",\n    \"bhg\": \"bhg-Latn-ZZ\",\n    \"bhi\": \"bhi-Deva-IN\",\n    \"bhl\": \"bhl-Latn-ZZ\",\n    \"bho\": \"bho-Deva-IN\",\n    \"bhy\": \"bhy-Latn-ZZ\",\n    \"bi\": \"bi-Latn-VU\",\n    \"bib\": \"bib-Latn-ZZ\",\n    \"big\": \"big-Latn-ZZ\",\n    \"bik\": \"bik-Latn-PH\",\n    \"bim\": \"bim-Latn-ZZ\",\n    \"bin\": \"bin-Latn-NG\",\n    \"bio\": \"bio-Latn-ZZ\",\n    \"biq\": \"biq-Latn-ZZ\",\n    \"bjh\": \"bjh-Latn-ZZ\",\n    \"bji\": \"bji-Ethi-ZZ\",\n    \"bjj\": \"bjj-Deva-IN\",\n    \"bjn\": \"bjn-Latn-ID\",\n    \"bjo\": \"bjo-Latn-ZZ\",\n    \"bjr\": \"bjr-Latn-ZZ\",\n    \"bjt\": \"bjt-Latn-SN\",\n    \"bjz\": \"bjz-Latn-ZZ\",\n    \"bkc\": \"bkc-Latn-ZZ\",\n    \"bkm\": \"bkm-Latn-CM\",\n    \"bkq\": \"bkq-Latn-ZZ\",\n    \"bku\": \"bku-Latn-PH\",\n    \"bkv\": \"bkv-Latn-ZZ\",\n    \"blg\": \"blg-Latn-MY\",\n    \"blt\": \"blt-Tavt-VN\",\n    \"bm\": \"bm-Latn-ML\",\n    \"bmh\": \"bmh-Latn-ZZ\",\n    \"bmk\": \"bmk-Latn-ZZ\",\n    \"bmq\": \"bmq-Latn-ML\",\n    \"bmu\": \"bmu-Latn-ZZ\",\n    \"bn\": \"bn-Beng-BD\",\n    \"bng\": \"bng-Latn-ZZ\",\n    \"bnm\": \"bnm-Latn-ZZ\",\n    \"bnp\": \"bnp-Latn-ZZ\",\n    \"bo\": \"bo-Tibt-CN\",\n    \"boj\": \"boj-Latn-ZZ\",\n    \"bom\": \"bom-Latn-ZZ\",\n    \"bon\": \"bon-Latn-ZZ\",\n    \"bpy\": \"bpy-Beng-IN\",\n    \"bqc\": \"bqc-Latn-ZZ\",\n    \"bqi\": \"bqi-Arab-IR\",\n    \"bqp\": \"bqp-Latn-ZZ\",\n    \"bqv\": \"bqv-Latn-CI\",\n    \"br\": \"br-Latn-FR\",\n    \"bra\": \"bra-Deva-IN\",\n    \"brh\": \"brh-Arab-PK\",\n    \"brx\": \"brx-Deva-IN\",\n    \"brz\": \"brz-Latn-ZZ\",\n    \"bs\": \"bs-Latn-BA\",\n    \"bsj\": \"bsj-Latn-ZZ\",\n    \"bsq\": \"bsq-Bass-LR\",\n    \"bss\": \"bss-Latn-CM\",\n    \"bst\": \"bst-Ethi-ZZ\",\n    \"bto\": \"bto-Latn-PH\",\n    \"btt\": \"btt-Latn-ZZ\",\n    \"btv\": \"btv-Deva-PK\",\n    \"bua\": \"bua-Cyrl-RU\",\n    \"buc\": \"buc-Latn-YT\",\n    \"bud\": \"bud-Latn-ZZ\",\n    \"bug\": \"bug-Latn-ID\",\n    \"buk\": \"buk-Latn-ZZ\",\n    \"bum\": \"bum-Latn-CM\",\n    \"buo\": \"buo-Latn-ZZ\",\n    \"bus\": \"bus-Latn-ZZ\",\n    \"buu\": \"buu-Latn-ZZ\",\n    \"bvb\": \"bvb-Latn-GQ\",\n    \"bwd\": \"bwd-Latn-ZZ\",\n    \"bwr\": \"bwr-Latn-ZZ\",\n    \"bxh\": \"bxh-Latn-ZZ\",\n    \"bye\": \"bye-Latn-ZZ\",\n    \"byn\": \"byn-Ethi-ER\",\n    \"byr\": \"byr-Latn-ZZ\",\n    \"bys\": \"bys-Latn-ZZ\",\n    \"byv\": \"byv-Latn-CM\",\n    \"byx\": \"byx-Latn-ZZ\",\n    \"bza\": \"bza-Latn-ZZ\",\n    \"bze\": \"bze-Latn-ML\",\n    \"bzf\": \"bzf-Latn-ZZ\",\n    \"bzh\": \"bzh-Latn-ZZ\",\n    \"bzw\": \"bzw-Latn-ZZ\",\n    \"ca\": \"ca-Latn-ES\",\n    \"cad\": \"cad-Latn-US\",\n    \"can\": \"can-Latn-ZZ\",\n    \"cbj\": \"cbj-Latn-ZZ\",\n    \"cch\": \"cch-Latn-NG\",\n    \"ccp\": \"ccp-Cakm-BD\",\n    \"ce\": \"ce-Cyrl-RU\",\n    \"ceb\": \"ceb-Latn-PH\",\n    \"cfa\": \"cfa-Latn-ZZ\",\n    \"cgg\": \"cgg-Latn-UG\",\n    \"ch\": \"ch-Latn-GU\",\n    \"chk\": \"chk-Latn-FM\",\n    \"chm\": \"chm-Cyrl-RU\",\n    \"cho\": \"cho-Latn-US\",\n    \"chp\": \"chp-Latn-CA\",\n    \"chr\": \"chr-Cher-US\",\n    \"cic\": \"cic-Latn-US\",\n    \"cja\": \"cja-Arab-KH\",\n    \"cjm\": \"cjm-Cham-VN\",\n    \"cjv\": \"cjv-Latn-ZZ\",\n    \"ckb\": \"ckb-Arab-IQ\",\n    \"ckl\": \"ckl-Latn-ZZ\",\n    \"cko\": \"cko-Latn-ZZ\",\n    \"cky\": \"cky-Latn-ZZ\",\n    \"cla\": \"cla-Latn-ZZ\",\n    \"cme\": \"cme-Latn-ZZ\",\n    \"cmg\": \"cmg-Soyo-MN\",\n    \"co\": \"co-Latn-FR\",\n    \"cop\": \"cop-Copt-EG\",\n    \"cps\": \"cps-Latn-PH\",\n    \"cr\": \"cr-Cans-CA\",\n    \"crh\": \"crh-Cyrl-UA\",\n    \"crj\": \"crj-Cans-CA\",\n    \"crk\": \"crk-Cans-CA\",\n    \"crl\": \"crl-Cans-CA\",\n    \"crm\": \"crm-Cans-CA\",\n    \"crs\": \"crs-Latn-SC\",\n    \"cs\": \"cs-Latn-CZ\",\n    \"csb\": \"csb-Latn-PL\",\n    \"csw\": \"csw-Cans-CA\",\n    \"ctd\": \"ctd-Pauc-MM\",\n    \"cu\": \"cu-Cyrl-RU\",\n    \"cu-Glag\": \"cu-Glag-BG\",\n    \"cv\": \"cv-Cyrl-RU\",\n    \"cy\": \"cy-Latn-GB\",\n    \"da\": \"da-Latn-DK\",\n    \"dad\": \"dad-Latn-ZZ\",\n    \"daf\": \"daf-Latn-CI\",\n    \"dag\": \"dag-Latn-ZZ\",\n    \"dah\": \"dah-Latn-ZZ\",\n    \"dak\": \"dak-Latn-US\",\n    \"dar\": \"dar-Cyrl-RU\",\n    \"dav\": \"dav-Latn-KE\",\n    \"dbd\": \"dbd-Latn-ZZ\",\n    \"dbq\": \"dbq-Latn-ZZ\",\n    \"dcc\": \"dcc-Arab-IN\",\n    \"ddn\": \"ddn-Latn-ZZ\",\n    \"de\": \"de-Latn-DE\",\n    \"ded\": \"ded-Latn-ZZ\",\n    \"den\": \"den-Latn-CA\",\n    \"dga\": \"dga-Latn-ZZ\",\n    \"dgh\": \"dgh-Latn-ZZ\",\n    \"dgi\": \"dgi-Latn-ZZ\",\n    \"dgl\": \"dgl-Arab-ZZ\",\n    \"dgr\": \"dgr-Latn-CA\",\n    \"dgz\": \"dgz-Latn-ZZ\",\n    \"dia\": \"dia-Latn-ZZ\",\n    \"dje\": \"dje-Latn-NE\",\n    \"dmf\": \"dmf-Medf-NG\",\n    \"dnj\": \"dnj-Latn-CI\",\n    \"dob\": \"dob-Latn-ZZ\",\n    \"doi\": \"doi-Deva-IN\",\n    \"dop\": \"dop-Latn-ZZ\",\n    \"dow\": \"dow-Latn-ZZ\",\n    \"drh\": \"drh-Mong-CN\",\n    \"dri\": \"dri-Latn-ZZ\",\n    \"drs\": \"drs-Ethi-ZZ\",\n    \"dsb\": \"dsb-Latn-DE\",\n    \"dtm\": \"dtm-Latn-ML\",\n    \"dtp\": \"dtp-Latn-MY\",\n    \"dts\": \"dts-Latn-ZZ\",\n    \"dty\": \"dty-Deva-NP\",\n    \"dua\": \"dua-Latn-CM\",\n    \"duc\": \"duc-Latn-ZZ\",\n    \"dud\": \"dud-Latn-ZZ\",\n    \"dug\": \"dug-Latn-ZZ\",\n    \"dv\": \"dv-Thaa-MV\",\n    \"dva\": \"dva-Latn-ZZ\",\n    \"dww\": \"dww-Latn-ZZ\",\n    \"dyo\": \"dyo-Latn-SN\",\n    \"dyu\": \"dyu-Latn-BF\",\n    \"dz\": \"dz-Tibt-BT\",\n    \"dzg\": \"dzg-Latn-ZZ\",\n    \"ebu\": \"ebu-Latn-KE\",\n    \"ee\": \"ee-Latn-GH\",\n    \"efi\": \"efi-Latn-NG\",\n    \"egl\": \"egl-Latn-IT\",\n    \"egy\": \"egy-Egyp-EG\",\n    \"eka\": \"eka-Latn-ZZ\",\n    \"eky\": \"eky-Kali-MM\",\n    \"el\": \"el-Grek-GR\",\n    \"ema\": \"ema-Latn-ZZ\",\n    \"emi\": \"emi-Latn-ZZ\",\n    \"en\": \"en-Latn-US\",\n    \"en-Shaw\": \"en-Shaw-GB\",\n    \"enn\": \"enn-Latn-ZZ\",\n    \"enq\": \"enq-Latn-ZZ\",\n    \"eo\": \"eo-Latn-001\",\n    \"eri\": \"eri-Latn-ZZ\",\n    \"es\": \"es-Latn-ES\",\n    \"esg\": \"esg-Gonm-IN\",\n    \"esu\": \"esu-Latn-US\",\n    \"et\": \"et-Latn-EE\",\n    \"etr\": \"etr-Latn-ZZ\",\n    \"ett\": \"ett-Ital-IT\",\n    \"etu\": \"etu-Latn-ZZ\",\n    \"etx\": \"etx-Latn-ZZ\",\n    \"eu\": \"eu-Latn-ES\",\n    \"ewo\": \"ewo-Latn-CM\",\n    \"ext\": \"ext-Latn-ES\",\n    \"eza\": \"eza-Latn-ZZ\",\n    \"fa\": \"fa-Arab-IR\",\n    \"faa\": \"faa-Latn-ZZ\",\n    \"fab\": \"fab-Latn-ZZ\",\n    \"fag\": \"fag-Latn-ZZ\",\n    \"fai\": \"fai-Latn-ZZ\",\n    \"fan\": \"fan-Latn-GQ\",\n    \"ff\": \"ff-Latn-SN\",\n    \"ff-Adlm\": \"ff-Adlm-GN\",\n    \"ffi\": \"ffi-Latn-ZZ\",\n    \"ffm\": \"ffm-Latn-ML\",\n    \"fi\": \"fi-Latn-FI\",\n    \"fia\": \"fia-Arab-SD\",\n    \"fil\": \"fil-Latn-PH\",\n    \"fit\": \"fit-Latn-SE\",\n    \"fj\": \"fj-Latn-FJ\",\n    \"flr\": \"flr-Latn-ZZ\",\n    \"fmp\": \"fmp-Latn-ZZ\",\n    \"fo\": \"fo-Latn-FO\",\n    \"fod\": \"fod-Latn-ZZ\",\n    \"fon\": \"fon-Latn-BJ\",\n    \"for\": \"for-Latn-ZZ\",\n    \"fpe\": \"fpe-Latn-ZZ\",\n    \"fqs\": \"fqs-Latn-ZZ\",\n    \"fr\": \"fr-Latn-FR\",\n    \"frc\": \"frc-Latn-US\",\n    \"frp\": \"frp-Latn-FR\",\n    \"frr\": \"frr-Latn-DE\",\n    \"frs\": \"frs-Latn-DE\",\n    \"fub\": \"fub-Arab-CM\",\n    \"fud\": \"fud-Latn-WF\",\n    \"fue\": \"fue-Latn-ZZ\",\n    \"fuf\": \"fuf-Latn-GN\",\n    \"fuh\": \"fuh-Latn-ZZ\",\n    \"fuq\": \"fuq-Latn-NE\",\n    \"fur\": \"fur-Latn-IT\",\n    \"fuv\": \"fuv-Latn-NG\",\n    \"fuy\": \"fuy-Latn-ZZ\",\n    \"fvr\": \"fvr-Latn-SD\",\n    \"fy\": \"fy-Latn-NL\",\n    \"ga\": \"ga-Latn-IE\",\n    \"gaa\": \"gaa-Latn-GH\",\n    \"gaf\": \"gaf-Latn-ZZ\",\n    \"gag\": \"gag-Latn-MD\",\n    \"gah\": \"gah-Latn-ZZ\",\n    \"gaj\": \"gaj-Latn-ZZ\",\n    \"gam\": \"gam-Latn-ZZ\",\n    \"gan\": \"gan-Hans-CN\",\n    \"gaw\": \"gaw-Latn-ZZ\",\n    \"gay\": \"gay-Latn-ID\",\n    \"gba\": \"gba-Latn-ZZ\",\n    \"gbf\": \"gbf-Latn-ZZ\",\n    \"gbm\": \"gbm-Deva-IN\",\n    \"gby\": \"gby-Latn-ZZ\",\n    \"gbz\": \"gbz-Arab-IR\",\n    \"gcr\": \"gcr-Latn-GF\",\n    \"gd\": \"gd-Latn-GB\",\n    \"gde\": \"gde-Latn-ZZ\",\n    \"gdn\": \"gdn-Latn-ZZ\",\n    \"gdr\": \"gdr-Latn-ZZ\",\n    \"geb\": \"geb-Latn-ZZ\",\n    \"gej\": \"gej-Latn-ZZ\",\n    \"gel\": \"gel-Latn-ZZ\",\n    \"gez\": \"gez-Ethi-ET\",\n    \"gfk\": \"gfk-Latn-ZZ\",\n    \"ggn\": \"ggn-Deva-NP\",\n    \"ghs\": \"ghs-Latn-ZZ\",\n    \"gil\": \"gil-Latn-KI\",\n    \"gim\": \"gim-Latn-ZZ\",\n    \"gjk\": \"gjk-Arab-PK\",\n    \"gjn\": \"gjn-Latn-ZZ\",\n    \"gju\": \"gju-Arab-PK\",\n    \"gkn\": \"gkn-Latn-ZZ\",\n    \"gkp\": \"gkp-Latn-ZZ\",\n    \"gl\": \"gl-Latn-ES\",\n    \"glk\": \"glk-Arab-IR\",\n    \"gmm\": \"gmm-Latn-ZZ\",\n    \"gmv\": \"gmv-Ethi-ZZ\",\n    \"gn\": \"gn-Latn-PY\",\n    \"gnd\": \"gnd-Latn-ZZ\",\n    \"gng\": \"gng-Latn-ZZ\",\n    \"god\": \"god-Latn-ZZ\",\n    \"gof\": \"gof-Ethi-ZZ\",\n    \"goi\": \"goi-Latn-ZZ\",\n    \"gom\": \"gom-Deva-IN\",\n    \"gon\": \"gon-Telu-IN\",\n    \"gor\": \"gor-Latn-ID\",\n    \"gos\": \"gos-Latn-NL\",\n    \"got\": \"got-Goth-UA\",\n    \"grb\": \"grb-Latn-ZZ\",\n    \"grc\": \"grc-Cprt-CY\",\n    \"grc-Linb\": \"grc-Linb-GR\",\n    \"grt\": \"grt-Beng-IN\",\n    \"grw\": \"grw-Latn-ZZ\",\n    \"gsw\": \"gsw-Latn-CH\",\n    \"gu\": \"gu-Gujr-IN\",\n    \"gub\": \"gub-Latn-BR\",\n    \"guc\": \"guc-Latn-CO\",\n    \"gud\": \"gud-Latn-ZZ\",\n    \"gur\": \"gur-Latn-GH\",\n    \"guw\": \"guw-Latn-ZZ\",\n    \"gux\": \"gux-Latn-ZZ\",\n    \"guz\": \"guz-Latn-KE\",\n    \"gv\": \"gv-Latn-IM\",\n    \"gvf\": \"gvf-Latn-ZZ\",\n    \"gvr\": \"gvr-Deva-NP\",\n    \"gvs\": \"gvs-Latn-ZZ\",\n    \"gwc\": \"gwc-Arab-ZZ\",\n    \"gwi\": \"gwi-Latn-CA\",\n    \"gwt\": \"gwt-Arab-ZZ\",\n    \"gyi\": \"gyi-Latn-ZZ\",\n    \"ha\": \"ha-Latn-NG\",\n    \"ha-CM\": \"ha-Arab-CM\",\n    \"ha-SD\": \"ha-Arab-SD\",\n    \"hag\": \"hag-Latn-ZZ\",\n    \"hak\": \"hak-Hans-CN\",\n    \"ham\": \"ham-Latn-ZZ\",\n    \"haw\": \"haw-Latn-US\",\n    \"haz\": \"haz-Arab-AF\",\n    \"hbb\": \"hbb-Latn-ZZ\",\n    \"hdy\": \"hdy-Ethi-ZZ\",\n    \"he\": \"he-Hebr-IL\",\n    \"hhy\": \"hhy-Latn-ZZ\",\n    \"hi\": \"hi-Deva-IN\",\n    \"hia\": \"hia-Latn-ZZ\",\n    \"hif\": \"hif-Latn-FJ\",\n    \"hig\": \"hig-Latn-ZZ\",\n    \"hih\": \"hih-Latn-ZZ\",\n    \"hil\": \"hil-Latn-PH\",\n    \"hla\": \"hla-Latn-ZZ\",\n    \"hlu\": \"hlu-Hluw-TR\",\n    \"hmd\": \"hmd-Plrd-CN\",\n    \"hmt\": \"hmt-Latn-ZZ\",\n    \"hnd\": \"hnd-Arab-PK\",\n    \"hne\": \"hne-Deva-IN\",\n    \"hnj\": \"hnj-Hmnp-US\",\n    \"hnn\": \"hnn-Latn-PH\",\n    \"hno\": \"hno-Arab-PK\",\n    \"ho\": \"ho-Latn-PG\",\n    \"hoc\": \"hoc-Deva-IN\",\n    \"hoj\": \"hoj-Deva-IN\",\n    \"hot\": \"hot-Latn-ZZ\",\n    \"hr\": \"hr-Latn-HR\",\n    \"hsb\": \"hsb-Latn-DE\",\n    \"hsn\": \"hsn-Hans-CN\",\n    \"ht\": \"ht-Latn-HT\",\n    \"hu\": \"hu-Latn-HU\",\n    \"hui\": \"hui-Latn-ZZ\",\n    \"hy\": \"hy-Armn-AM\",\n    \"hz\": \"hz-Latn-NA\",\n    \"ia\": \"ia-Latn-001\",\n    \"ian\": \"ian-Latn-ZZ\",\n    \"iar\": \"iar-Latn-ZZ\",\n    \"iba\": \"iba-Latn-MY\",\n    \"ibb\": \"ibb-Latn-NG\",\n    \"iby\": \"iby-Latn-ZZ\",\n    \"ica\": \"ica-Latn-ZZ\",\n    \"ich\": \"ich-Latn-ZZ\",\n    \"id\": \"id-Latn-ID\",\n    \"idd\": \"idd-Latn-ZZ\",\n    \"idi\": \"idi-Latn-ZZ\",\n    \"idu\": \"idu-Latn-ZZ\",\n    \"ife\": \"ife-Latn-TG\",\n    \"ig\": \"ig-Latn-NG\",\n    \"igb\": \"igb-Latn-ZZ\",\n    \"ige\": \"ige-Latn-ZZ\",\n    \"ii\": \"ii-Yiii-CN\",\n    \"ijj\": \"ijj-Latn-ZZ\",\n    \"ik\": \"ik-Latn-US\",\n    \"ikk\": \"ikk-Latn-ZZ\",\n    \"ikt\": \"ikt-Latn-CA\",\n    \"ikw\": \"ikw-Latn-ZZ\",\n    \"ikx\": \"ikx-Latn-ZZ\",\n    \"ilo\": \"ilo-Latn-PH\",\n    \"imo\": \"imo-Latn-ZZ\",\n    \"in\": \"in-Latn-ID\",\n    \"inh\": \"inh-Cyrl-RU\",\n    \"io\": \"io-Latn-001\",\n    \"iou\": \"iou-Latn-ZZ\",\n    \"iri\": \"iri-Latn-ZZ\",\n    \"is\": \"is-Latn-IS\",\n    \"it\": \"it-Latn-IT\",\n    \"iu\": \"iu-Cans-CA\",\n    \"iw\": \"iw-Hebr-IL\",\n    \"iwm\": \"iwm-Latn-ZZ\",\n    \"iws\": \"iws-Latn-ZZ\",\n    \"izh\": \"izh-Latn-RU\",\n    \"izi\": \"izi-Latn-ZZ\",\n    \"ja\": \"ja-Jpan-JP\",\n    \"jab\": \"jab-Latn-ZZ\",\n    \"jam\": \"jam-Latn-JM\",\n    \"jar\": \"jar-Latn-ZZ\",\n    \"jbo\": \"jbo-Latn-001\",\n    \"jbu\": \"jbu-Latn-ZZ\",\n    \"jen\": \"jen-Latn-ZZ\",\n    \"jgk\": \"jgk-Latn-ZZ\",\n    \"jgo\": \"jgo-Latn-CM\",\n    \"ji\": \"ji-Hebr-UA\",\n    \"jib\": \"jib-Latn-ZZ\",\n    \"jmc\": \"jmc-Latn-TZ\",\n    \"jml\": \"jml-Deva-NP\",\n    \"jra\": \"jra-Latn-ZZ\",\n    \"jut\": \"jut-Latn-DK\",\n    \"jv\": \"jv-Latn-ID\",\n    \"jw\": \"jw-Latn-ID\",\n    \"ka\": \"ka-Geor-GE\",\n    \"kaa\": \"kaa-Cyrl-UZ\",\n    \"kab\": \"kab-Latn-DZ\",\n    \"kac\": \"kac-Latn-MM\",\n    \"kad\": \"kad-Latn-ZZ\",\n    \"kai\": \"kai-Latn-ZZ\",\n    \"kaj\": \"kaj-Latn-NG\",\n    \"kam\": \"kam-Latn-KE\",\n    \"kao\": \"kao-Latn-ML\",\n    \"kbd\": \"kbd-Cyrl-RU\",\n    \"kbm\": \"kbm-Latn-ZZ\",\n    \"kbp\": \"kbp-Latn-ZZ\",\n    \"kbq\": \"kbq-Latn-ZZ\",\n    \"kbx\": \"kbx-Latn-ZZ\",\n    \"kby\": \"kby-Arab-NE\",\n    \"kcg\": \"kcg-Latn-NG\",\n    \"kck\": \"kck-Latn-ZW\",\n    \"kcl\": \"kcl-Latn-ZZ\",\n    \"kct\": \"kct-Latn-ZZ\",\n    \"kde\": \"kde-Latn-TZ\",\n    \"kdh\": \"kdh-Latn-TG\",\n    \"kdl\": \"kdl-Latn-ZZ\",\n    \"kdt\": \"kdt-Thai-TH\",\n    \"kea\": \"kea-Latn-CV\",\n    \"ken\": \"ken-Latn-CM\",\n    \"kez\": \"kez-Latn-ZZ\",\n    \"kfo\": \"kfo-Latn-CI\",\n    \"kfr\": \"kfr-Deva-IN\",\n    \"kfy\": \"kfy-Deva-IN\",\n    \"kg\": \"kg-Latn-CD\",\n    \"kge\": \"kge-Latn-ID\",\n    \"kgf\": \"kgf-Latn-ZZ\",\n    \"kgp\": \"kgp-Latn-BR\",\n    \"kha\": \"kha-Latn-IN\",\n    \"khb\": \"khb-Talu-CN\",\n    \"khn\": \"khn-Deva-IN\",\n    \"khq\": \"khq-Latn-ML\",\n    \"khs\": \"khs-Latn-ZZ\",\n    \"kht\": \"kht-Mymr-IN\",\n    \"khw\": \"khw-Arab-PK\",\n    \"khz\": \"khz-Latn-ZZ\",\n    \"ki\": \"ki-Latn-KE\",\n    \"kij\": \"kij-Latn-ZZ\",\n    \"kiu\": \"kiu-Latn-TR\",\n    \"kiw\": \"kiw-Latn-ZZ\",\n    \"kj\": \"kj-Latn-NA\",\n    \"kjd\": \"kjd-Latn-ZZ\",\n    \"kjg\": \"kjg-Laoo-LA\",\n    \"kjs\": \"kjs-Latn-ZZ\",\n    \"kjy\": \"kjy-Latn-ZZ\",\n    \"kk\": \"kk-Cyrl-KZ\",\n    \"kk-AF\": \"kk-Arab-AF\",\n    \"kk-Arab\": \"kk-Arab-CN\",\n    \"kk-CN\": \"kk-Arab-CN\",\n    \"kk-IR\": \"kk-Arab-IR\",\n    \"kk-MN\": \"kk-Arab-MN\",\n    \"kkc\": \"kkc-Latn-ZZ\",\n    \"kkj\": \"kkj-Latn-CM\",\n    \"kl\": \"kl-Latn-GL\",\n    \"kln\": \"kln-Latn-KE\",\n    \"klq\": \"klq-Latn-ZZ\",\n    \"klt\": \"klt-Latn-ZZ\",\n    \"klx\": \"klx-Latn-ZZ\",\n    \"km\": \"km-Khmr-KH\",\n    \"kmb\": \"kmb-Latn-AO\",\n    \"kmh\": \"kmh-Latn-ZZ\",\n    \"kmo\": \"kmo-Latn-ZZ\",\n    \"kms\": \"kms-Latn-ZZ\",\n    \"kmu\": \"kmu-Latn-ZZ\",\n    \"kmw\": \"kmw-Latn-ZZ\",\n    \"kn\": \"kn-Knda-IN\",\n    \"knf\": \"knf-Latn-GW\",\n    \"knp\": \"knp-Latn-ZZ\",\n    \"ko\": \"ko-Kore-KR\",\n    \"koi\": \"koi-Cyrl-RU\",\n    \"kok\": \"kok-Deva-IN\",\n    \"kol\": \"kol-Latn-ZZ\",\n    \"kos\": \"kos-Latn-FM\",\n    \"koz\": \"koz-Latn-ZZ\",\n    \"kpe\": \"kpe-Latn-LR\",\n    \"kpf\": \"kpf-Latn-ZZ\",\n    \"kpo\": \"kpo-Latn-ZZ\",\n    \"kpr\": \"kpr-Latn-ZZ\",\n    \"kpx\": \"kpx-Latn-ZZ\",\n    \"kqb\": \"kqb-Latn-ZZ\",\n    \"kqf\": \"kqf-Latn-ZZ\",\n    \"kqs\": \"kqs-Latn-ZZ\",\n    \"kqy\": \"kqy-Ethi-ZZ\",\n    \"kr\": \"kr-Latn-ZZ\",\n    \"krc\": \"krc-Cyrl-RU\",\n    \"kri\": \"kri-Latn-SL\",\n    \"krj\": \"krj-Latn-PH\",\n    \"krl\": \"krl-Latn-RU\",\n    \"krs\": \"krs-Latn-ZZ\",\n    \"kru\": \"kru-Deva-IN\",\n    \"ks\": \"ks-Arab-IN\",\n    \"ksb\": \"ksb-Latn-TZ\",\n    \"ksd\": \"ksd-Latn-ZZ\",\n    \"ksf\": \"ksf-Latn-CM\",\n    \"ksh\": \"ksh-Latn-DE\",\n    \"ksj\": \"ksj-Latn-ZZ\",\n    \"ksr\": \"ksr-Latn-ZZ\",\n    \"ktb\": \"ktb-Ethi-ZZ\",\n    \"ktm\": \"ktm-Latn-ZZ\",\n    \"kto\": \"kto-Latn-ZZ\",\n    \"ktr\": \"ktr-Latn-MY\",\n    \"ku\": \"ku-Latn-TR\",\n    \"ku-Arab\": \"ku-Arab-IQ\",\n    \"ku-LB\": \"ku-Arab-LB\",\n    \"ku-Yezi\": \"ku-Yezi-GE\",\n    \"kub\": \"kub-Latn-ZZ\",\n    \"kud\": \"kud-Latn-ZZ\",\n    \"kue\": \"kue-Latn-ZZ\",\n    \"kuj\": \"kuj-Latn-ZZ\",\n    \"kum\": \"kum-Cyrl-RU\",\n    \"kun\": \"kun-Latn-ZZ\",\n    \"kup\": \"kup-Latn-ZZ\",\n    \"kus\": \"kus-Latn-ZZ\",\n    \"kv\": \"kv-Cyrl-RU\",\n    \"kvg\": \"kvg-Latn-ZZ\",\n    \"kvr\": \"kvr-Latn-ID\",\n    \"kvx\": \"kvx-Arab-PK\",\n    \"kw\": \"kw-Latn-GB\",\n    \"kwj\": \"kwj-Latn-ZZ\",\n    \"kwo\": \"kwo-Latn-ZZ\",\n    \"kwq\": \"kwq-Latn-ZZ\",\n    \"kxa\": \"kxa-Latn-ZZ\",\n    \"kxc\": \"kxc-Ethi-ZZ\",\n    \"kxe\": \"kxe-Latn-ZZ\",\n    \"kxl\": \"kxl-Deva-IN\",\n    \"kxm\": \"kxm-Thai-TH\",\n    \"kxp\": \"kxp-Arab-PK\",\n    \"kxw\": \"kxw-Latn-ZZ\",\n    \"kxz\": \"kxz-Latn-ZZ\",\n    \"ky\": \"ky-Cyrl-KG\",\n    \"ky-Arab\": \"ky-Arab-CN\",\n    \"ky-CN\": \"ky-Arab-CN\",\n    \"ky-Latn\": \"ky-Latn-TR\",\n    \"ky-TR\": \"ky-Latn-TR\",\n    \"kye\": \"kye-Latn-ZZ\",\n    \"kyx\": \"kyx-Latn-ZZ\",\n    \"kzh\": \"kzh-Arab-ZZ\",\n    \"kzj\": \"kzj-Latn-MY\",\n    \"kzr\": \"kzr-Latn-ZZ\",\n    \"kzt\": \"kzt-Latn-MY\",\n    \"la\": \"la-Latn-VA\",\n    \"lab\": \"lab-Lina-GR\",\n    \"lad\": \"lad-Hebr-IL\",\n    \"lag\": \"lag-Latn-TZ\",\n    \"lah\": \"lah-Arab-PK\",\n    \"laj\": \"laj-Latn-UG\",\n    \"las\": \"las-Latn-ZZ\",\n    \"lb\": \"lb-Latn-LU\",\n    \"lbe\": \"lbe-Cyrl-RU\",\n    \"lbu\": \"lbu-Latn-ZZ\",\n    \"lbw\": \"lbw-Latn-ID\",\n    \"lcm\": \"lcm-Latn-ZZ\",\n    \"lcp\": \"lcp-Thai-CN\",\n    \"ldb\": \"ldb-Latn-ZZ\",\n    \"led\": \"led-Latn-ZZ\",\n    \"lee\": \"lee-Latn-ZZ\",\n    \"lem\": \"lem-Latn-ZZ\",\n    \"lep\": \"lep-Lepc-IN\",\n    \"leq\": \"leq-Latn-ZZ\",\n    \"leu\": \"leu-Latn-ZZ\",\n    \"lez\": \"lez-Cyrl-RU\",\n    \"lg\": \"lg-Latn-UG\",\n    \"lgg\": \"lgg-Latn-ZZ\",\n    \"li\": \"li-Latn-NL\",\n    \"lia\": \"lia-Latn-ZZ\",\n    \"lid\": \"lid-Latn-ZZ\",\n    \"lif\": \"lif-Deva-NP\",\n    \"lif-Limb\": \"lif-Limb-IN\",\n    \"lig\": \"lig-Latn-ZZ\",\n    \"lih\": \"lih-Latn-ZZ\",\n    \"lij\": \"lij-Latn-IT\",\n    \"lis\": \"lis-Lisu-CN\",\n    \"ljp\": \"ljp-Latn-ID\",\n    \"lki\": \"lki-Arab-IR\",\n    \"lkt\": \"lkt-Latn-US\",\n    \"lle\": \"lle-Latn-ZZ\",\n    \"lln\": \"lln-Latn-ZZ\",\n    \"lmn\": \"lmn-Telu-IN\",\n    \"lmo\": \"lmo-Latn-IT\",\n    \"lmp\": \"lmp-Latn-ZZ\",\n    \"ln\": \"ln-Latn-CD\",\n    \"lns\": \"lns-Latn-ZZ\",\n    \"lnu\": \"lnu-Latn-ZZ\",\n    \"lo\": \"lo-Laoo-LA\",\n    \"loj\": \"loj-Latn-ZZ\",\n    \"lok\": \"lok-Latn-ZZ\",\n    \"lol\": \"lol-Latn-CD\",\n    \"lor\": \"lor-Latn-ZZ\",\n    \"los\": \"los-Latn-ZZ\",\n    \"loz\": \"loz-Latn-ZM\",\n    \"lrc\": \"lrc-Arab-IR\",\n    \"lt\": \"lt-Latn-LT\",\n    \"ltg\": \"ltg-Latn-LV\",\n    \"lu\": \"lu-Latn-CD\",\n    \"lua\": \"lua-Latn-CD\",\n    \"luo\": \"luo-Latn-KE\",\n    \"luy\": \"luy-Latn-KE\",\n    \"luz\": \"luz-Arab-IR\",\n    \"lv\": \"lv-Latn-LV\",\n    \"lwl\": \"lwl-Thai-TH\",\n    \"lzh\": \"lzh-Hans-CN\",\n    \"lzz\": \"lzz-Latn-TR\",\n    \"mad\": \"mad-Latn-ID\",\n    \"maf\": \"maf-Latn-CM\",\n    \"mag\": \"mag-Deva-IN\",\n    \"mai\": \"mai-Deva-IN\",\n    \"mak\": \"mak-Latn-ID\",\n    \"man\": \"man-Latn-GM\",\n    \"man-GN\": \"man-Nkoo-GN\",\n    \"man-Nkoo\": \"man-Nkoo-GN\",\n    \"mas\": \"mas-Latn-KE\",\n    \"maw\": \"maw-Latn-ZZ\",\n    \"maz\": \"maz-Latn-MX\",\n    \"mbh\": \"mbh-Latn-ZZ\",\n    \"mbo\": \"mbo-Latn-ZZ\",\n    \"mbq\": \"mbq-Latn-ZZ\",\n    \"mbu\": \"mbu-Latn-ZZ\",\n    \"mbw\": \"mbw-Latn-ZZ\",\n    \"mci\": \"mci-Latn-ZZ\",\n    \"mcp\": \"mcp-Latn-ZZ\",\n    \"mcq\": \"mcq-Latn-ZZ\",\n    \"mcr\": \"mcr-Latn-ZZ\",\n    \"mcu\": \"mcu-Latn-ZZ\",\n    \"mda\": \"mda-Latn-ZZ\",\n    \"mde\": \"mde-Arab-ZZ\",\n    \"mdf\": \"mdf-Cyrl-RU\",\n    \"mdh\": \"mdh-Latn-PH\",\n    \"mdj\": \"mdj-Latn-ZZ\",\n    \"mdr\": \"mdr-Latn-ID\",\n    \"mdx\": \"mdx-Ethi-ZZ\",\n    \"med\": \"med-Latn-ZZ\",\n    \"mee\": \"mee-Latn-ZZ\",\n    \"mek\": \"mek-Latn-ZZ\",\n    \"men\": \"men-Latn-SL\",\n    \"mer\": \"mer-Latn-KE\",\n    \"met\": \"met-Latn-ZZ\",\n    \"meu\": \"meu-Latn-ZZ\",\n    \"mfa\": \"mfa-Arab-TH\",\n    \"mfe\": \"mfe-Latn-MU\",\n    \"mfn\": \"mfn-Latn-ZZ\",\n    \"mfo\": \"mfo-Latn-ZZ\",\n    \"mfq\": \"mfq-Latn-ZZ\",\n    \"mg\": \"mg-Latn-MG\",\n    \"mgh\": \"mgh-Latn-MZ\",\n    \"mgl\": \"mgl-Latn-ZZ\",\n    \"mgo\": \"mgo-Latn-CM\",\n    \"mgp\": \"mgp-Deva-NP\",\n    \"mgy\": \"mgy-Latn-TZ\",\n    \"mh\": \"mh-Latn-MH\",\n    \"mhi\": \"mhi-Latn-ZZ\",\n    \"mhl\": \"mhl-Latn-ZZ\",\n    \"mi\": \"mi-Latn-NZ\",\n    \"mif\": \"mif-Latn-ZZ\",\n    \"min\": \"min-Latn-ID\",\n    \"miw\": \"miw-Latn-ZZ\",\n    \"mk\": \"mk-Cyrl-MK\",\n    \"mki\": \"mki-Arab-ZZ\",\n    \"mkl\": \"mkl-Latn-ZZ\",\n    \"mkp\": \"mkp-Latn-ZZ\",\n    \"mkw\": \"mkw-Latn-ZZ\",\n    \"ml\": \"ml-Mlym-IN\",\n    \"mle\": \"mle-Latn-ZZ\",\n    \"mlp\": \"mlp-Latn-ZZ\",\n    \"mls\": \"mls-Latn-SD\",\n    \"mmo\": \"mmo-Latn-ZZ\",\n    \"mmu\": \"mmu-Latn-ZZ\",\n    \"mmx\": \"mmx-Latn-ZZ\",\n    \"mn\": \"mn-Cyrl-MN\",\n    \"mn-CN\": \"mn-Mong-CN\",\n    \"mn-Mong\": \"mn-Mong-CN\",\n    \"mna\": \"mna-Latn-ZZ\",\n    \"mnf\": \"mnf-Latn-ZZ\",\n    \"mni\": \"mni-Beng-IN\",\n    \"mnw\": \"mnw-Mymr-MM\",\n    \"mo\": \"mo-Latn-RO\",\n    \"moa\": \"moa-Latn-ZZ\",\n    \"moe\": \"moe-Latn-CA\",\n    \"moh\": \"moh-Latn-CA\",\n    \"mos\": \"mos-Latn-BF\",\n    \"mox\": \"mox-Latn-ZZ\",\n    \"mpp\": \"mpp-Latn-ZZ\",\n    \"mps\": \"mps-Latn-ZZ\",\n    \"mpt\": \"mpt-Latn-ZZ\",\n    \"mpx\": \"mpx-Latn-ZZ\",\n    \"mql\": \"mql-Latn-ZZ\",\n    \"mr\": \"mr-Deva-IN\",\n    \"mrd\": \"mrd-Deva-NP\",\n    \"mrj\": \"mrj-Cyrl-RU\",\n    \"mro\": \"mro-Mroo-BD\",\n    \"ms\": \"ms-Latn-MY\",\n    \"ms-CC\": \"ms-Arab-CC\",\n    \"mt\": \"mt-Latn-MT\",\n    \"mtc\": \"mtc-Latn-ZZ\",\n    \"mtf\": \"mtf-Latn-ZZ\",\n    \"mti\": \"mti-Latn-ZZ\",\n    \"mtr\": \"mtr-Deva-IN\",\n    \"mua\": \"mua-Latn-CM\",\n    \"mur\": \"mur-Latn-ZZ\",\n    \"mus\": \"mus-Latn-US\",\n    \"mva\": \"mva-Latn-ZZ\",\n    \"mvn\": \"mvn-Latn-ZZ\",\n    \"mvy\": \"mvy-Arab-PK\",\n    \"mwk\": \"mwk-Latn-ML\",\n    \"mwr\": \"mwr-Deva-IN\",\n    \"mwv\": \"mwv-Latn-ID\",\n    \"mww\": \"mww-Hmnp-US\",\n    \"mxc\": \"mxc-Latn-ZW\",\n    \"mxm\": \"mxm-Latn-ZZ\",\n    \"my\": \"my-Mymr-MM\",\n    \"myk\": \"myk-Latn-ZZ\",\n    \"mym\": \"mym-Ethi-ZZ\",\n    \"myv\": \"myv-Cyrl-RU\",\n    \"myw\": \"myw-Latn-ZZ\",\n    \"myx\": \"myx-Latn-UG\",\n    \"myz\": \"myz-Mand-IR\",\n    \"mzk\": \"mzk-Latn-ZZ\",\n    \"mzm\": \"mzm-Latn-ZZ\",\n    \"mzn\": \"mzn-Arab-IR\",\n    \"mzp\": \"mzp-Latn-ZZ\",\n    \"mzw\": \"mzw-Latn-ZZ\",\n    \"mzz\": \"mzz-Latn-ZZ\",\n    \"na\": \"na-Latn-NR\",\n    \"nac\": \"nac-Latn-ZZ\",\n    \"naf\": \"naf-Latn-ZZ\",\n    \"nak\": \"nak-Latn-ZZ\",\n    \"nan\": \"nan-Hans-CN\",\n    \"nap\": \"nap-Latn-IT\",\n    \"naq\": \"naq-Latn-NA\",\n    \"nas\": \"nas-Latn-ZZ\",\n    \"nb\": \"nb-Latn-NO\",\n    \"nca\": \"nca-Latn-ZZ\",\n    \"nce\": \"nce-Latn-ZZ\",\n    \"ncf\": \"ncf-Latn-ZZ\",\n    \"nch\": \"nch-Latn-MX\",\n    \"nco\": \"nco-Latn-ZZ\",\n    \"ncu\": \"ncu-Latn-ZZ\",\n    \"nd\": \"nd-Latn-ZW\",\n    \"ndc\": \"ndc-Latn-MZ\",\n    \"nds\": \"nds-Latn-DE\",\n    \"ne\": \"ne-Deva-NP\",\n    \"neb\": \"neb-Latn-ZZ\",\n    \"new\": \"new-Deva-NP\",\n    \"nex\": \"nex-Latn-ZZ\",\n    \"nfr\": \"nfr-Latn-ZZ\",\n    \"ng\": \"ng-Latn-NA\",\n    \"nga\": \"nga-Latn-ZZ\",\n    \"ngb\": \"ngb-Latn-ZZ\",\n    \"ngl\": \"ngl-Latn-MZ\",\n    \"nhb\": \"nhb-Latn-ZZ\",\n    \"nhe\": \"nhe-Latn-MX\",\n    \"nhw\": \"nhw-Latn-MX\",\n    \"nif\": \"nif-Latn-ZZ\",\n    \"nii\": \"nii-Latn-ZZ\",\n    \"nij\": \"nij-Latn-ID\",\n    \"nin\": \"nin-Latn-ZZ\",\n    \"niu\": \"niu-Latn-NU\",\n    \"niy\": \"niy-Latn-ZZ\",\n    \"niz\": \"niz-Latn-ZZ\",\n    \"njo\": \"njo-Latn-IN\",\n    \"nkg\": \"nkg-Latn-ZZ\",\n    \"nko\": \"nko-Latn-ZZ\",\n    \"nl\": \"nl-Latn-NL\",\n    \"nmg\": \"nmg-Latn-CM\",\n    \"nmz\": \"nmz-Latn-ZZ\",\n    \"nn\": \"nn-Latn-NO\",\n    \"nnf\": \"nnf-Latn-ZZ\",\n    \"nnh\": \"nnh-Latn-CM\",\n    \"nnk\": \"nnk-Latn-ZZ\",\n    \"nnm\": \"nnm-Latn-ZZ\",\n    \"nnp\": \"nnp-Wcho-IN\",\n    \"no\": \"no-Latn-NO\",\n    \"nod\": \"nod-Lana-TH\",\n    \"noe\": \"noe-Deva-IN\",\n    \"non\": \"non-Runr-SE\",\n    \"nop\": \"nop-Latn-ZZ\",\n    \"nou\": \"nou-Latn-ZZ\",\n    \"nqo\": \"nqo-Nkoo-GN\",\n    \"nr\": \"nr-Latn-ZA\",\n    \"nrb\": \"nrb-Latn-ZZ\",\n    \"nsk\": \"nsk-Cans-CA\",\n    \"nsn\": \"nsn-Latn-ZZ\",\n    \"nso\": \"nso-Latn-ZA\",\n    \"nss\": \"nss-Latn-ZZ\",\n    \"nst\": \"nst-Tnsa-IN\",\n    \"ntm\": \"ntm-Latn-ZZ\",\n    \"ntr\": \"ntr-Latn-ZZ\",\n    \"nui\": \"nui-Latn-ZZ\",\n    \"nup\": \"nup-Latn-ZZ\",\n    \"nus\": \"nus-Latn-SS\",\n    \"nuv\": \"nuv-Latn-ZZ\",\n    \"nux\": \"nux-Latn-ZZ\",\n    \"nv\": \"nv-Latn-US\",\n    \"nwb\": \"nwb-Latn-ZZ\",\n    \"nxq\": \"nxq-Latn-CN\",\n    \"nxr\": \"nxr-Latn-ZZ\",\n    \"ny\": \"ny-Latn-MW\",\n    \"nym\": \"nym-Latn-TZ\",\n    \"nyn\": \"nyn-Latn-UG\",\n    \"nzi\": \"nzi-Latn-GH\",\n    \"oc\": \"oc-Latn-FR\",\n    \"ogc\": \"ogc-Latn-ZZ\",\n    \"okr\": \"okr-Latn-ZZ\",\n    \"okv\": \"okv-Latn-ZZ\",\n    \"om\": \"om-Latn-ET\",\n    \"ong\": \"ong-Latn-ZZ\",\n    \"onn\": \"onn-Latn-ZZ\",\n    \"ons\": \"ons-Latn-ZZ\",\n    \"opm\": \"opm-Latn-ZZ\",\n    \"or\": \"or-Orya-IN\",\n    \"oro\": \"oro-Latn-ZZ\",\n    \"oru\": \"oru-Arab-ZZ\",\n    \"os\": \"os-Cyrl-GE\",\n    \"osa\": \"osa-Osge-US\",\n    \"ota\": \"ota-Arab-ZZ\",\n    \"otk\": \"otk-Orkh-MN\",\n    \"oui\": \"oui-Ougr-143\",\n    \"ozm\": \"ozm-Latn-ZZ\",\n    \"pa\": \"pa-Guru-IN\",\n    \"pa-Arab\": \"pa-Arab-PK\",\n    \"pa-PK\": \"pa-Arab-PK\",\n    \"pag\": \"pag-Latn-PH\",\n    \"pal\": \"pal-Phli-IR\",\n    \"pal-Phlp\": \"pal-Phlp-CN\",\n    \"pam\": \"pam-Latn-PH\",\n    \"pap\": \"pap-Latn-AW\",\n    \"pau\": \"pau-Latn-PW\",\n    \"pbi\": \"pbi-Latn-ZZ\",\n    \"pcd\": \"pcd-Latn-FR\",\n    \"pcm\": \"pcm-Latn-NG\",\n    \"pdc\": \"pdc-Latn-US\",\n    \"pdt\": \"pdt-Latn-CA\",\n    \"ped\": \"ped-Latn-ZZ\",\n    \"peo\": \"peo-Xpeo-IR\",\n    \"pex\": \"pex-Latn-ZZ\",\n    \"pfl\": \"pfl-Latn-DE\",\n    \"phl\": \"phl-Arab-ZZ\",\n    \"phn\": \"phn-Phnx-LB\",\n    \"pil\": \"pil-Latn-ZZ\",\n    \"pip\": \"pip-Latn-ZZ\",\n    \"pka\": \"pka-Brah-IN\",\n    \"pko\": \"pko-Latn-KE\",\n    \"pl\": \"pl-Latn-PL\",\n    \"pla\": \"pla-Latn-ZZ\",\n    \"pms\": \"pms-Latn-IT\",\n    \"png\": \"png-Latn-ZZ\",\n    \"pnn\": \"pnn-Latn-ZZ\",\n    \"pnt\": \"pnt-Grek-GR\",\n    \"pon\": \"pon-Latn-FM\",\n    \"ppa\": \"ppa-Deva-IN\",\n    \"ppo\": \"ppo-Latn-ZZ\",\n    \"pra\": \"pra-Khar-PK\",\n    \"prd\": \"prd-Arab-IR\",\n    \"prg\": \"prg-Latn-001\",\n    \"ps\": \"ps-Arab-AF\",\n    \"pss\": \"pss-Latn-ZZ\",\n    \"pt\": \"pt-Latn-BR\",\n    \"ptp\": \"ptp-Latn-ZZ\",\n    \"puu\": \"puu-Latn-GA\",\n    \"pwa\": \"pwa-Latn-ZZ\",\n    \"qu\": \"qu-Latn-PE\",\n    \"quc\": \"quc-Latn-GT\",\n    \"qug\": \"qug-Latn-EC\",\n    \"rai\": \"rai-Latn-ZZ\",\n    \"raj\": \"raj-Deva-IN\",\n    \"rao\": \"rao-Latn-ZZ\",\n    \"rcf\": \"rcf-Latn-RE\",\n    \"rej\": \"rej-Latn-ID\",\n    \"rel\": \"rel-Latn-ZZ\",\n    \"res\": \"res-Latn-ZZ\",\n    \"rgn\": \"rgn-Latn-IT\",\n    \"rhg\": \"rhg-Rohg-MM\",\n    \"ria\": \"ria-Latn-IN\",\n    \"rif\": \"rif-Tfng-MA\",\n    \"rif-NL\": \"rif-Latn-NL\",\n    \"rjs\": \"rjs-Deva-NP\",\n    \"rkt\": \"rkt-Beng-BD\",\n    \"rm\": \"rm-Latn-CH\",\n    \"rmf\": \"rmf-Latn-FI\",\n    \"rmo\": \"rmo-Latn-CH\",\n    \"rmt\": \"rmt-Arab-IR\",\n    \"rmu\": \"rmu-Latn-SE\",\n    \"rn\": \"rn-Latn-BI\",\n    \"rna\": \"rna-Latn-ZZ\",\n    \"rng\": \"rng-Latn-MZ\",\n    \"ro\": \"ro-Latn-RO\",\n    \"rob\": \"rob-Latn-ID\",\n    \"rof\": \"rof-Latn-TZ\",\n    \"roo\": \"roo-Latn-ZZ\",\n    \"rro\": \"rro-Latn-ZZ\",\n    \"rtm\": \"rtm-Latn-FJ\",\n    \"ru\": \"ru-Cyrl-RU\",\n    \"rue\": \"rue-Cyrl-UA\",\n    \"rug\": \"rug-Latn-SB\",\n    \"rw\": \"rw-Latn-RW\",\n    \"rwk\": \"rwk-Latn-TZ\",\n    \"rwo\": \"rwo-Latn-ZZ\",\n    \"ryu\": \"ryu-Kana-JP\",\n    \"sa\": \"sa-Deva-IN\",\n    \"saf\": \"saf-Latn-GH\",\n    \"sah\": \"sah-Cyrl-RU\",\n    \"saq\": \"saq-Latn-KE\",\n    \"sas\": \"sas-Latn-ID\",\n    \"sat\": \"sat-Olck-IN\",\n    \"sav\": \"sav-Latn-SN\",\n    \"saz\": \"saz-Saur-IN\",\n    \"sba\": \"sba-Latn-ZZ\",\n    \"sbe\": \"sbe-Latn-ZZ\",\n    \"sbp\": \"sbp-Latn-TZ\",\n    \"sc\": \"sc-Latn-IT\",\n    \"sck\": \"sck-Deva-IN\",\n    \"scl\": \"scl-Arab-ZZ\",\n    \"scn\": \"scn-Latn-IT\",\n    \"sco\": \"sco-Latn-GB\",\n    \"scs\": \"scs-Latn-CA\",\n    \"sd\": \"sd-Arab-PK\",\n    \"sd-Deva\": \"sd-Deva-IN\",\n    \"sd-Khoj\": \"sd-Khoj-IN\",\n    \"sd-Sind\": \"sd-Sind-IN\",\n    \"sdc\": \"sdc-Latn-IT\",\n    \"sdh\": \"sdh-Arab-IR\",\n    \"se\": \"se-Latn-NO\",\n    \"sef\": \"sef-Latn-CI\",\n    \"seh\": \"seh-Latn-MZ\",\n    \"sei\": \"sei-Latn-MX\",\n    \"ses\": \"ses-Latn-ML\",\n    \"sg\": \"sg-Latn-CF\",\n    \"sga\": \"sga-Ogam-IE\",\n    \"sgs\": \"sgs-Latn-LT\",\n    \"sgw\": \"sgw-Ethi-ZZ\",\n    \"sgz\": \"sgz-Latn-ZZ\",\n    \"shi\": \"shi-Tfng-MA\",\n    \"shk\": \"shk-Latn-ZZ\",\n    \"shn\": \"shn-Mymr-MM\",\n    \"shu\": \"shu-Arab-ZZ\",\n    \"si\": \"si-Sinh-LK\",\n    \"sid\": \"sid-Latn-ET\",\n    \"sig\": \"sig-Latn-ZZ\",\n    \"sil\": \"sil-Latn-ZZ\",\n    \"sim\": \"sim-Latn-ZZ\",\n    \"sjr\": \"sjr-Latn-ZZ\",\n    \"sk\": \"sk-Latn-SK\",\n    \"skc\": \"skc-Latn-ZZ\",\n    \"skr\": \"skr-Arab-PK\",\n    \"sks\": \"sks-Latn-ZZ\",\n    \"sl\": \"sl-Latn-SI\",\n    \"sld\": \"sld-Latn-ZZ\",\n    \"sli\": \"sli-Latn-PL\",\n    \"sll\": \"sll-Latn-ZZ\",\n    \"sly\": \"sly-Latn-ID\",\n    \"sm\": \"sm-Latn-WS\",\n    \"sma\": \"sma-Latn-SE\",\n    \"smj\": \"smj-Latn-SE\",\n    \"smn\": \"smn-Latn-FI\",\n    \"smp\": \"smp-Samr-IL\",\n    \"smq\": \"smq-Latn-ZZ\",\n    \"sms\": \"sms-Latn-FI\",\n    \"sn\": \"sn-Latn-ZW\",\n    \"snc\": \"snc-Latn-ZZ\",\n    \"snk\": \"snk-Latn-ML\",\n    \"snp\": \"snp-Latn-ZZ\",\n    \"snx\": \"snx-Latn-ZZ\",\n    \"sny\": \"sny-Latn-ZZ\",\n    \"so\": \"so-Latn-SO\",\n    \"sog\": \"sog-Sogd-UZ\",\n    \"sok\": \"sok-Latn-ZZ\",\n    \"soq\": \"soq-Latn-ZZ\",\n    \"sou\": \"sou-Thai-TH\",\n    \"soy\": \"soy-Latn-ZZ\",\n    \"spd\": \"spd-Latn-ZZ\",\n    \"spl\": \"spl-Latn-ZZ\",\n    \"sps\": \"sps-Latn-ZZ\",\n    \"sq\": \"sq-Latn-AL\",\n    \"sr\": \"sr-Cyrl-RS\",\n    \"sr-ME\": \"sr-Latn-ME\",\n    \"sr-RO\": \"sr-Latn-RO\",\n    \"sr-RU\": \"sr-Latn-RU\",\n    \"sr-TR\": \"sr-Latn-TR\",\n    \"srb\": \"srb-Sora-IN\",\n    \"srn\": \"srn-Latn-SR\",\n    \"srr\": \"srr-Latn-SN\",\n    \"srx\": \"srx-Deva-IN\",\n    \"ss\": \"ss-Latn-ZA\",\n    \"ssd\": \"ssd-Latn-ZZ\",\n    \"ssg\": \"ssg-Latn-ZZ\",\n    \"ssy\": \"ssy-Latn-ER\",\n    \"st\": \"st-Latn-ZA\",\n    \"stk\": \"stk-Latn-ZZ\",\n    \"stq\": \"stq-Latn-DE\",\n    \"su\": \"su-Latn-ID\",\n    \"sua\": \"sua-Latn-ZZ\",\n    \"sue\": \"sue-Latn-ZZ\",\n    \"suk\": \"suk-Latn-TZ\",\n    \"sur\": \"sur-Latn-ZZ\",\n    \"sus\": \"sus-Latn-GN\",\n    \"sv\": \"sv-Latn-SE\",\n    \"sw\": \"sw-Latn-TZ\",\n    \"swb\": \"swb-Arab-YT\",\n    \"swc\": \"swc-Latn-CD\",\n    \"swg\": \"swg-Latn-DE\",\n    \"swp\": \"swp-Latn-ZZ\",\n    \"swv\": \"swv-Deva-IN\",\n    \"sxn\": \"sxn-Latn-ID\",\n    \"sxw\": \"sxw-Latn-ZZ\",\n    \"syl\": \"syl-Beng-BD\",\n    \"syr\": \"syr-Syrc-IQ\",\n    \"szl\": \"szl-Latn-PL\",\n    \"ta\": \"ta-Taml-IN\",\n    \"taj\": \"taj-Deva-NP\",\n    \"tal\": \"tal-Latn-ZZ\",\n    \"tan\": \"tan-Latn-ZZ\",\n    \"taq\": \"taq-Latn-ZZ\",\n    \"tbc\": \"tbc-Latn-ZZ\",\n    \"tbd\": \"tbd-Latn-ZZ\",\n    \"tbf\": \"tbf-Latn-ZZ\",\n    \"tbg\": \"tbg-Latn-ZZ\",\n    \"tbo\": \"tbo-Latn-ZZ\",\n    \"tbw\": \"tbw-Latn-PH\",\n    \"tbz\": \"tbz-Latn-ZZ\",\n    \"tci\": \"tci-Latn-ZZ\",\n    \"tcy\": \"tcy-Knda-IN\",\n    \"tdd\": \"tdd-Tale-CN\",\n    \"tdg\": \"tdg-Deva-NP\",\n    \"tdh\": \"tdh-Deva-NP\",\n    \"tdu\": \"tdu-Latn-MY\",\n    \"te\": \"te-Telu-IN\",\n    \"ted\": \"ted-Latn-ZZ\",\n    \"tem\": \"tem-Latn-SL\",\n    \"teo\": \"teo-Latn-UG\",\n    \"tet\": \"tet-Latn-TL\",\n    \"tfi\": \"tfi-Latn-ZZ\",\n    \"tg\": \"tg-Cyrl-TJ\",\n    \"tg-Arab\": \"tg-Arab-PK\",\n    \"tg-PK\": \"tg-Arab-PK\",\n    \"tgc\": \"tgc-Latn-ZZ\",\n    \"tgo\": \"tgo-Latn-ZZ\",\n    \"tgu\": \"tgu-Latn-ZZ\",\n    \"th\": \"th-Thai-TH\",\n    \"thl\": \"thl-Deva-NP\",\n    \"thq\": \"thq-Deva-NP\",\n    \"thr\": \"thr-Deva-NP\",\n    \"ti\": \"ti-Ethi-ET\",\n    \"tif\": \"tif-Latn-ZZ\",\n    \"tig\": \"tig-Ethi-ER\",\n    \"tik\": \"tik-Latn-ZZ\",\n    \"tim\": \"tim-Latn-ZZ\",\n    \"tio\": \"tio-Latn-ZZ\",\n    \"tiv\": \"tiv-Latn-NG\",\n    \"tk\": \"tk-Latn-TM\",\n    \"tkl\": \"tkl-Latn-TK\",\n    \"tkr\": \"tkr-Latn-AZ\",\n    \"tkt\": \"tkt-Deva-NP\",\n    \"tl\": \"tl-Latn-PH\",\n    \"tlf\": \"tlf-Latn-ZZ\",\n    \"tlx\": \"tlx-Latn-ZZ\",\n    \"tly\": \"tly-Latn-AZ\",\n    \"tmh\": \"tmh-Latn-NE\",\n    \"tmy\": \"tmy-Latn-ZZ\",\n    \"tn\": \"tn-Latn-ZA\",\n    \"tnh\": \"tnh-Latn-ZZ\",\n    \"to\": \"to-Latn-TO\",\n    \"tof\": \"tof-Latn-ZZ\",\n    \"tog\": \"tog-Latn-MW\",\n    \"toq\": \"toq-Latn-ZZ\",\n    \"tpi\": \"tpi-Latn-PG\",\n    \"tpm\": \"tpm-Latn-ZZ\",\n    \"tpz\": \"tpz-Latn-ZZ\",\n    \"tqo\": \"tqo-Latn-ZZ\",\n    \"tr\": \"tr-Latn-TR\",\n    \"tru\": \"tru-Latn-TR\",\n    \"trv\": \"trv-Latn-TW\",\n    \"trw\": \"trw-Arab-PK\",\n    \"ts\": \"ts-Latn-ZA\",\n    \"tsd\": \"tsd-Grek-GR\",\n    \"tsf\": \"tsf-Deva-NP\",\n    \"tsg\": \"tsg-Latn-PH\",\n    \"tsj\": \"tsj-Tibt-BT\",\n    \"tsw\": \"tsw-Latn-ZZ\",\n    \"tt\": \"tt-Cyrl-RU\",\n    \"ttd\": \"ttd-Latn-ZZ\",\n    \"tte\": \"tte-Latn-ZZ\",\n    \"ttj\": \"ttj-Latn-UG\",\n    \"ttr\": \"ttr-Latn-ZZ\",\n    \"tts\": \"tts-Thai-TH\",\n    \"ttt\": \"ttt-Latn-AZ\",\n    \"tuh\": \"tuh-Latn-ZZ\",\n    \"tul\": \"tul-Latn-ZZ\",\n    \"tum\": \"tum-Latn-MW\",\n    \"tuq\": \"tuq-Latn-ZZ\",\n    \"tvd\": \"tvd-Latn-ZZ\",\n    \"tvl\": \"tvl-Latn-TV\",\n    \"tvu\": \"tvu-Latn-ZZ\",\n    \"twh\": \"twh-Latn-ZZ\",\n    \"twq\": \"twq-Latn-NE\",\n    \"txg\": \"txg-Tang-CN\",\n    \"txo\": \"txo-Toto-IN\",\n    \"ty\": \"ty-Latn-PF\",\n    \"tya\": \"tya-Latn-ZZ\",\n    \"tyv\": \"tyv-Cyrl-RU\",\n    \"tzm\": \"tzm-Latn-MA\",\n    \"ubu\": \"ubu-Latn-ZZ\",\n    \"udi\": \"udi-Aghb-RU\",\n    \"udm\": \"udm-Cyrl-RU\",\n    \"ug\": \"ug-Arab-CN\",\n    \"ug-Cyrl\": \"ug-Cyrl-KZ\",\n    \"ug-KZ\": \"ug-Cyrl-KZ\",\n    \"ug-MN\": \"ug-Cyrl-MN\",\n    \"uga\": \"uga-Ugar-SY\",\n    \"uk\": \"uk-Cyrl-UA\",\n    \"uli\": \"uli-Latn-FM\",\n    \"umb\": \"umb-Latn-AO\",\n    \"und\": \"en-Latn-US\",\n    \"und-002\": \"en-Latn-NG\",\n    \"und-003\": \"en-Latn-US\",\n    \"und-005\": \"pt-Latn-BR\",\n    \"und-009\": \"en-Latn-AU\",\n    \"und-011\": \"en-Latn-NG\",\n    \"und-013\": \"es-Latn-MX\",\n    \"und-014\": \"sw-Latn-TZ\",\n    \"und-015\": \"ar-Arab-EG\",\n    \"und-017\": \"sw-Latn-CD\",\n    \"und-018\": \"en-Latn-ZA\",\n    \"und-019\": \"en-Latn-US\",\n    \"und-021\": \"en-Latn-US\",\n    \"und-029\": \"es-Latn-CU\",\n    \"und-030\": \"zh-Hans-CN\",\n    \"und-034\": \"hi-Deva-IN\",\n    \"und-035\": \"id-Latn-ID\",\n    \"und-039\": \"it-Latn-IT\",\n    \"und-053\": \"en-Latn-AU\",\n    \"und-054\": \"en-Latn-PG\",\n    \"und-057\": \"en-Latn-GU\",\n    \"und-061\": \"sm-Latn-WS\",\n    \"und-142\": \"zh-Hans-CN\",\n    \"und-143\": \"uz-Latn-UZ\",\n    \"und-145\": \"ar-Arab-SA\",\n    \"und-150\": \"ru-Cyrl-RU\",\n    \"und-151\": \"ru-Cyrl-RU\",\n    \"und-154\": \"en-Latn-GB\",\n    \"und-155\": \"de-Latn-DE\",\n    \"und-202\": \"en-Latn-NG\",\n    \"und-419\": \"es-Latn-419\",\n    \"und-AD\": \"ca-Latn-AD\",\n    \"und-Adlm\": \"ff-Adlm-GN\",\n    \"und-AE\": \"ar-Arab-AE\",\n    \"und-AF\": \"fa-Arab-AF\",\n    \"und-Aghb\": \"udi-Aghb-RU\",\n    \"und-Ahom\": \"aho-Ahom-IN\",\n    \"und-AL\": \"sq-Latn-AL\",\n    \"und-AM\": \"hy-Armn-AM\",\n    \"und-AO\": \"pt-Latn-AO\",\n    \"und-AQ\": \"und-Latn-AQ\",\n    \"und-AR\": \"es-Latn-AR\",\n    \"und-Arab\": \"ar-Arab-EG\",\n    \"und-Arab-CC\": \"ms-Arab-CC\",\n    \"und-Arab-CN\": \"ug-Arab-CN\",\n    \"und-Arab-GB\": \"ks-Arab-GB\",\n    \"und-Arab-ID\": \"ms-Arab-ID\",\n    \"und-Arab-IN\": \"ur-Arab-IN\",\n    \"und-Arab-KH\": \"cja-Arab-KH\",\n    \"und-Arab-MM\": \"rhg-Arab-MM\",\n    \"und-Arab-MN\": \"kk-Arab-MN\",\n    \"und-Arab-MU\": \"ur-Arab-MU\",\n    \"und-Arab-NG\": \"ha-Arab-NG\",\n    \"und-Arab-PK\": \"ur-Arab-PK\",\n    \"und-Arab-TG\": \"apd-Arab-TG\",\n    \"und-Arab-TH\": \"mfa-Arab-TH\",\n    \"und-Arab-TJ\": \"fa-Arab-TJ\",\n    \"und-Arab-TR\": \"az-Arab-TR\",\n    \"und-Arab-YT\": \"swb-Arab-YT\",\n    \"und-Armi\": \"arc-Armi-IR\",\n    \"und-Armn\": \"hy-Armn-AM\",\n    \"und-AS\": \"sm-Latn-AS\",\n    \"und-AT\": \"de-Latn-AT\",\n    \"und-Avst\": \"ae-Avst-IR\",\n    \"und-AW\": \"nl-Latn-AW\",\n    \"und-AX\": \"sv-Latn-AX\",\n    \"und-AZ\": \"az-Latn-AZ\",\n    \"und-BA\": \"bs-Latn-BA\",\n    \"und-Bali\": \"ban-Bali-ID\",\n    \"und-Bamu\": \"bax-Bamu-CM\",\n    \"und-Bass\": \"bsq-Bass-LR\",\n    \"und-Batk\": \"bbc-Batk-ID\",\n    \"und-BD\": \"bn-Beng-BD\",\n    \"und-BE\": \"nl-Latn-BE\",\n    \"und-Beng\": \"bn-Beng-BD\",\n    \"und-BF\": \"fr-Latn-BF\",\n    \"und-BG\": \"bg-Cyrl-BG\",\n    \"und-BH\": \"ar-Arab-BH\",\n    \"und-Bhks\": \"sa-Bhks-IN\",\n    \"und-BI\": \"rn-Latn-BI\",\n    \"und-BJ\": \"fr-Latn-BJ\",\n    \"und-BL\": \"fr-Latn-BL\",\n    \"und-BN\": \"ms-Latn-BN\",\n    \"und-BO\": \"es-Latn-BO\",\n    \"und-Bopo\": \"zh-Bopo-TW\",\n    \"und-BQ\": \"pap-Latn-BQ\",\n    \"und-BR\": \"pt-Latn-BR\",\n    \"und-Brah\": \"pka-Brah-IN\",\n    \"und-Brai\": \"fr-Brai-FR\",\n    \"und-BT\": \"dz-Tibt-BT\",\n    \"und-Bugi\": \"bug-Bugi-ID\",\n    \"und-Buhd\": \"bku-Buhd-PH\",\n    \"und-BV\": \"und-Latn-BV\",\n    \"und-BY\": \"be-Cyrl-BY\",\n    \"und-Cakm\": \"ccp-Cakm-BD\",\n    \"und-Cans\": \"cr-Cans-CA\",\n    \"und-Cari\": \"xcr-Cari-TR\",\n    \"und-CD\": \"sw-Latn-CD\",\n    \"und-CF\": \"fr-Latn-CF\",\n    \"und-CG\": \"fr-Latn-CG\",\n    \"und-CH\": \"de-Latn-CH\",\n    \"und-Cham\": \"cjm-Cham-VN\",\n    \"und-Cher\": \"chr-Cher-US\",\n    \"und-Chrs\": \"xco-Chrs-UZ\",\n    \"und-CI\": \"fr-Latn-CI\",\n    \"und-CL\": \"es-Latn-CL\",\n    \"und-CM\": \"fr-Latn-CM\",\n    \"und-CN\": \"zh-Hans-CN\",\n    \"und-CO\": \"es-Latn-CO\",\n    \"und-Copt\": \"cop-Copt-EG\",\n    \"und-CP\": \"und-Latn-CP\",\n    \"und-Cpmn\": \"und-Cpmn-CY\",\n    \"und-Cpmn-CY\": \"und-Cpmn-CY\",\n    \"und-Cprt\": \"grc-Cprt-CY\",\n    \"und-CR\": \"es-Latn-CR\",\n    \"und-CU\": \"es-Latn-CU\",\n    \"und-CV\": \"pt-Latn-CV\",\n    \"und-CW\": \"pap-Latn-CW\",\n    \"und-CY\": \"el-Grek-CY\",\n    \"und-Cyrl\": \"ru-Cyrl-RU\",\n    \"und-Cyrl-AL\": \"mk-Cyrl-AL\",\n    \"und-Cyrl-BA\": \"sr-Cyrl-BA\",\n    \"und-Cyrl-GE\": \"os-Cyrl-GE\",\n    \"und-Cyrl-GR\": \"mk-Cyrl-GR\",\n    \"und-Cyrl-MD\": \"uk-Cyrl-MD\",\n    \"und-Cyrl-RO\": \"bg-Cyrl-RO\",\n    \"und-Cyrl-SK\": \"uk-Cyrl-SK\",\n    \"und-Cyrl-TR\": \"kbd-Cyrl-TR\",\n    \"und-Cyrl-XK\": \"sr-Cyrl-XK\",\n    \"und-CZ\": \"cs-Latn-CZ\",\n    \"und-DE\": \"de-Latn-DE\",\n    \"und-Deva\": \"hi-Deva-IN\",\n    \"und-Deva-BT\": \"ne-Deva-BT\",\n    \"und-Deva-FJ\": \"hif-Deva-FJ\",\n    \"und-Deva-MU\": \"bho-Deva-MU\",\n    \"und-Deva-PK\": \"btv-Deva-PK\",\n    \"und-Diak\": \"dv-Diak-MV\",\n    \"und-DJ\": \"aa-Latn-DJ\",\n    \"und-DK\": \"da-Latn-DK\",\n    \"und-DO\": \"es-Latn-DO\",\n    \"und-Dogr\": \"doi-Dogr-IN\",\n    \"und-Dupl\": \"fr-Dupl-FR\",\n    \"und-DZ\": \"ar-Arab-DZ\",\n    \"und-EA\": \"es-Latn-EA\",\n    \"und-EC\": \"es-Latn-EC\",\n    \"und-EE\": \"et-Latn-EE\",\n    \"und-EG\": \"ar-Arab-EG\",\n    \"und-Egyp\": \"egy-Egyp-EG\",\n    \"und-EH\": \"ar-Arab-EH\",\n    \"und-Elba\": \"sq-Elba-AL\",\n    \"und-Elym\": \"arc-Elym-IR\",\n    \"und-ER\": \"ti-Ethi-ER\",\n    \"und-ES\": \"es-Latn-ES\",\n    \"und-ET\": \"am-Ethi-ET\",\n    \"und-Ethi\": \"am-Ethi-ET\",\n    \"und-EU\": \"en-Latn-IE\",\n    \"und-EZ\": \"de-Latn-EZ\",\n    \"und-FI\": \"fi-Latn-FI\",\n    \"und-FO\": \"fo-Latn-FO\",\n    \"und-FR\": \"fr-Latn-FR\",\n    \"und-GA\": \"fr-Latn-GA\",\n    \"und-GE\": \"ka-Geor-GE\",\n    \"und-Geor\": \"ka-Geor-GE\",\n    \"und-GF\": \"fr-Latn-GF\",\n    \"und-GH\": \"ak-Latn-GH\",\n    \"und-GL\": \"kl-Latn-GL\",\n    \"und-Glag\": \"cu-Glag-BG\",\n    \"und-GN\": \"fr-Latn-GN\",\n    \"und-Gong\": \"wsg-Gong-IN\",\n    \"und-Gonm\": \"esg-Gonm-IN\",\n    \"und-Goth\": \"got-Goth-UA\",\n    \"und-GP\": \"fr-Latn-GP\",\n    \"und-GQ\": \"es-Latn-GQ\",\n    \"und-GR\": \"el-Grek-GR\",\n    \"und-Gran\": \"sa-Gran-IN\",\n    \"und-Grek\": \"el-Grek-GR\",\n    \"und-Grek-TR\": \"bgx-Grek-TR\",\n    \"und-GS\": \"und-Latn-GS\",\n    \"und-GT\": \"es-Latn-GT\",\n    \"und-Gujr\": \"gu-Gujr-IN\",\n    \"und-Guru\": \"pa-Guru-IN\",\n    \"und-GW\": \"pt-Latn-GW\",\n    \"und-Hanb\": \"zh-Hanb-TW\",\n    \"und-Hang\": \"ko-Hang-KR\",\n    \"und-Hani\": \"zh-Hani-CN\",\n    \"und-Hano\": \"hnn-Hano-PH\",\n    \"und-Hans\": \"zh-Hans-CN\",\n    \"und-Hant\": \"zh-Hant-TW\",\n    \"und-Hebr\": \"he-Hebr-IL\",\n    \"und-Hebr-CA\": \"yi-Hebr-CA\",\n    \"und-Hebr-GB\": \"yi-Hebr-GB\",\n    \"und-Hebr-SE\": \"yi-Hebr-SE\",\n    \"und-Hebr-UA\": \"yi-Hebr-UA\",\n    \"und-Hebr-US\": \"yi-Hebr-US\",\n    \"und-Hira\": \"ja-Hira-JP\",\n    \"und-HK\": \"zh-Hant-HK\",\n    \"und-Hluw\": \"hlu-Hluw-TR\",\n    \"und-HM\": \"und-Latn-HM\",\n    \"und-Hmng\": \"hnj-Hmng-LA\",\n    \"und-Hmnp\": \"hnj-Hmnp-US\",\n    \"und-HN\": \"es-Latn-HN\",\n    \"und-HR\": \"hr-Latn-HR\",\n    \"und-HT\": \"ht-Latn-HT\",\n    \"und-HU\": \"hu-Latn-HU\",\n    \"und-Hung\": \"hu-Hung-HU\",\n    \"und-IC\": \"es-Latn-IC\",\n    \"und-ID\": \"id-Latn-ID\",\n    \"und-IL\": \"he-Hebr-IL\",\n    \"und-IN\": \"hi-Deva-IN\",\n    \"und-IQ\": \"ar-Arab-IQ\",\n    \"und-IR\": \"fa-Arab-IR\",\n    \"und-IS\": \"is-Latn-IS\",\n    \"und-IT\": \"it-Latn-IT\",\n    \"und-Ital\": \"ett-Ital-IT\",\n    \"und-Jamo\": \"ko-Jamo-KR\",\n    \"und-Java\": \"jv-Java-ID\",\n    \"und-JO\": \"ar-Arab-JO\",\n    \"und-JP\": \"ja-Jpan-JP\",\n    \"und-Jpan\": \"ja-Jpan-JP\",\n    \"und-Kali\": \"eky-Kali-MM\",\n    \"und-Kana\": \"ja-Kana-JP\",\n    \"und-KE\": \"sw-Latn-KE\",\n    \"und-KG\": \"ky-Cyrl-KG\",\n    \"und-KH\": \"km-Khmr-KH\",\n    \"und-Khar\": \"pra-Khar-PK\",\n    \"und-Khmr\": \"km-Khmr-KH\",\n    \"und-Khoj\": \"sd-Khoj-IN\",\n    \"und-Kits\": \"zkt-Kits-CN\",\n    \"und-KM\": \"ar-Arab-KM\",\n    \"und-Knda\": \"kn-Knda-IN\",\n    \"und-Kore\": \"ko-Kore-KR\",\n    \"und-KP\": \"ko-Kore-KP\",\n    \"und-KR\": \"ko-Kore-KR\",\n    \"und-Kthi\": \"bho-Kthi-IN\",\n    \"und-KW\": \"ar-Arab-KW\",\n    \"und-KZ\": \"ru-Cyrl-KZ\",\n    \"und-LA\": \"lo-Laoo-LA\",\n    \"und-Lana\": \"nod-Lana-TH\",\n    \"und-Laoo\": \"lo-Laoo-LA\",\n    \"und-Latn-AF\": \"tk-Latn-AF\",\n    \"und-Latn-AM\": \"ku-Latn-AM\",\n    \"und-Latn-CN\": \"za-Latn-CN\",\n    \"und-Latn-CY\": \"tr-Latn-CY\",\n    \"und-Latn-DZ\": \"fr-Latn-DZ\",\n    \"und-Latn-ET\": \"en-Latn-ET\",\n    \"und-Latn-GE\": \"ku-Latn-GE\",\n    \"und-Latn-IR\": \"tk-Latn-IR\",\n    \"und-Latn-KM\": \"fr-Latn-KM\",\n    \"und-Latn-MA\": \"fr-Latn-MA\",\n    \"und-Latn-MK\": \"sq-Latn-MK\",\n    \"und-Latn-MM\": \"kac-Latn-MM\",\n    \"und-Latn-MO\": \"pt-Latn-MO\",\n    \"und-Latn-MR\": \"fr-Latn-MR\",\n    \"und-Latn-RU\": \"krl-Latn-RU\",\n    \"und-Latn-SY\": \"fr-Latn-SY\",\n    \"und-Latn-TN\": \"fr-Latn-TN\",\n    \"und-Latn-TW\": \"trv-Latn-TW\",\n    \"und-Latn-UA\": \"pl-Latn-UA\",\n    \"und-LB\": \"ar-Arab-LB\",\n    \"und-Lepc\": \"lep-Lepc-IN\",\n    \"und-LI\": \"de-Latn-LI\",\n    \"und-Limb\": \"lif-Limb-IN\",\n    \"und-Lina\": \"lab-Lina-GR\",\n    \"und-Linb\": \"grc-Linb-GR\",\n    \"und-Lisu\": \"lis-Lisu-CN\",\n    \"und-LK\": \"si-Sinh-LK\",\n    \"und-LS\": \"st-Latn-LS\",\n    \"und-LT\": \"lt-Latn-LT\",\n    \"und-LU\": \"fr-Latn-LU\",\n    \"und-LV\": \"lv-Latn-LV\",\n    \"und-LY\": \"ar-Arab-LY\",\n    \"und-Lyci\": \"xlc-Lyci-TR\",\n    \"und-Lydi\": \"xld-Lydi-TR\",\n    \"und-MA\": \"ar-Arab-MA\",\n    \"und-Mahj\": \"hi-Mahj-IN\",\n    \"und-Maka\": \"mak-Maka-ID\",\n    \"und-Mand\": \"myz-Mand-IR\",\n    \"und-Mani\": \"xmn-Mani-CN\",\n    \"und-Marc\": \"bo-Marc-CN\",\n    \"und-MC\": \"fr-Latn-MC\",\n    \"und-MD\": \"ro-Latn-MD\",\n    \"und-ME\": \"sr-Latn-ME\",\n    \"und-Medf\": \"dmf-Medf-NG\",\n    \"und-Mend\": \"men-Mend-SL\",\n    \"und-Merc\": \"xmr-Merc-SD\",\n    \"und-Mero\": \"xmr-Mero-SD\",\n    \"und-MF\": \"fr-Latn-MF\",\n    \"und-MG\": \"mg-Latn-MG\",\n    \"und-MK\": \"mk-Cyrl-MK\",\n    \"und-ML\": \"bm-Latn-ML\",\n    \"und-Mlym\": \"ml-Mlym-IN\",\n    \"und-MM\": \"my-Mymr-MM\",\n    \"und-MN\": \"mn-Cyrl-MN\",\n    \"und-MO\": \"zh-Hant-MO\",\n    \"und-Modi\": \"mr-Modi-IN\",\n    \"und-Mong\": \"mn-Mong-CN\",\n    \"und-MQ\": \"fr-Latn-MQ\",\n    \"und-MR\": \"ar-Arab-MR\",\n    \"und-Mroo\": \"mro-Mroo-BD\",\n    \"und-MT\": \"mt-Latn-MT\",\n    \"und-Mtei\": \"mni-Mtei-IN\",\n    \"und-MU\": \"mfe-Latn-MU\",\n    \"und-Mult\": \"skr-Mult-PK\",\n    \"und-MV\": \"dv-Thaa-MV\",\n    \"und-MX\": \"es-Latn-MX\",\n    \"und-MY\": \"ms-Latn-MY\",\n    \"und-Mymr\": \"my-Mymr-MM\",\n    \"und-Mymr-IN\": \"kht-Mymr-IN\",\n    \"und-Mymr-TH\": \"mnw-Mymr-TH\",\n    \"und-MZ\": \"pt-Latn-MZ\",\n    \"und-NA\": \"af-Latn-NA\",\n    \"und-Nand\": \"sa-Nand-IN\",\n    \"und-Narb\": \"xna-Narb-SA\",\n    \"und-Nbat\": \"arc-Nbat-JO\",\n    \"und-NC\": \"fr-Latn-NC\",\n    \"und-NE\": \"ha-Latn-NE\",\n    \"und-Newa\": \"new-Newa-NP\",\n    \"und-NI\": \"es-Latn-NI\",\n    \"und-Nkoo\": \"man-Nkoo-GN\",\n    \"und-NL\": \"nl-Latn-NL\",\n    \"und-NO\": \"nb-Latn-NO\",\n    \"und-NP\": \"ne-Deva-NP\",\n    \"und-Nshu\": \"zhx-Nshu-CN\",\n    \"und-Ogam\": \"sga-Ogam-IE\",\n    \"und-Olck\": \"sat-Olck-IN\",\n    \"und-OM\": \"ar-Arab-OM\",\n    \"und-Orkh\": \"otk-Orkh-MN\",\n    \"und-Orya\": \"or-Orya-IN\",\n    \"und-Osge\": \"osa-Osge-US\",\n    \"und-Osma\": \"so-Osma-SO\",\n    \"und-Ougr\": \"oui-Ougr-143\",\n    \"und-PA\": \"es-Latn-PA\",\n    \"und-Palm\": \"arc-Palm-SY\",\n    \"und-Pauc\": \"ctd-Pauc-MM\",\n    \"und-PE\": \"es-Latn-PE\",\n    \"und-Perm\": \"kv-Perm-RU\",\n    \"und-PF\": \"fr-Latn-PF\",\n    \"und-PG\": \"tpi-Latn-PG\",\n    \"und-PH\": \"fil-Latn-PH\",\n    \"und-Phag\": \"lzh-Phag-CN\",\n    \"und-Phli\": \"pal-Phli-IR\",\n    \"und-Phlp\": \"pal-Phlp-CN\",\n    \"und-Phnx\": \"phn-Phnx-LB\",\n    \"und-PK\": \"ur-Arab-PK\",\n    \"und-PL\": \"pl-Latn-PL\",\n    \"und-Plrd\": \"hmd-Plrd-CN\",\n    \"und-PM\": \"fr-Latn-PM\",\n    \"und-PR\": \"es-Latn-PR\",\n    \"und-Prti\": \"xpr-Prti-IR\",\n    \"und-PS\": \"ar-Arab-PS\",\n    \"und-PT\": \"pt-Latn-PT\",\n    \"und-PW\": \"pau-Latn-PW\",\n    \"und-PY\": \"gn-Latn-PY\",\n    \"und-QA\": \"ar-Arab-QA\",\n    \"und-QO\": \"en-Latn-DG\",\n    \"und-RE\": \"fr-Latn-RE\",\n    \"und-Rjng\": \"rej-Rjng-ID\",\n    \"und-RO\": \"ro-Latn-RO\",\n    \"und-Rohg\": \"rhg-Rohg-MM\",\n    \"und-RS\": \"sr-Cyrl-RS\",\n    \"und-RU\": \"ru-Cyrl-RU\",\n    \"und-Runr\": \"non-Runr-SE\",\n    \"und-RW\": \"rw-Latn-RW\",\n    \"und-SA\": \"ar-Arab-SA\",\n    \"und-Samr\": \"smp-Samr-IL\",\n    \"und-Sarb\": \"xsa-Sarb-YE\",\n    \"und-Saur\": \"saz-Saur-IN\",\n    \"und-SC\": \"fr-Latn-SC\",\n    \"und-SD\": \"ar-Arab-SD\",\n    \"und-SE\": \"sv-Latn-SE\",\n    \"und-Sgnw\": \"ase-Sgnw-US\",\n    \"und-Shaw\": \"en-Shaw-GB\",\n    \"und-Shrd\": \"sa-Shrd-IN\",\n    \"und-SI\": \"sl-Latn-SI\",\n    \"und-Sidd\": \"sa-Sidd-IN\",\n    \"und-Sind\": \"sd-Sind-IN\",\n    \"und-Sinh\": \"si-Sinh-LK\",\n    \"und-SJ\": \"nb-Latn-SJ\",\n    \"und-SK\": \"sk-Latn-SK\",\n    \"und-SM\": \"it-Latn-SM\",\n    \"und-SN\": \"fr-Latn-SN\",\n    \"und-SO\": \"so-Latn-SO\",\n    \"und-Sogd\": \"sog-Sogd-UZ\",\n    \"und-Sogo\": \"sog-Sogo-UZ\",\n    \"und-Sora\": \"srb-Sora-IN\",\n    \"und-Soyo\": \"cmg-Soyo-MN\",\n    \"und-SR\": \"nl-Latn-SR\",\n    \"und-ST\": \"pt-Latn-ST\",\n    \"und-Sund\": \"su-Sund-ID\",\n    \"und-SV\": \"es-Latn-SV\",\n    \"und-SY\": \"ar-Arab-SY\",\n    \"und-Sylo\": \"syl-Sylo-BD\",\n    \"und-Syrc\": \"syr-Syrc-IQ\",\n    \"und-Tagb\": \"tbw-Tagb-PH\",\n    \"und-Takr\": \"doi-Takr-IN\",\n    \"und-Tale\": \"tdd-Tale-CN\",\n    \"und-Talu\": \"khb-Talu-CN\",\n    \"und-Taml\": \"ta-Taml-IN\",\n    \"und-Tang\": \"txg-Tang-CN\",\n    \"und-Tavt\": \"blt-Tavt-VN\",\n    \"und-TD\": \"fr-Latn-TD\",\n    \"und-Telu\": \"te-Telu-IN\",\n    \"und-TF\": \"fr-Latn-TF\",\n    \"und-Tfng\": \"zgh-Tfng-MA\",\n    \"und-TG\": \"fr-Latn-TG\",\n    \"und-Tglg\": \"fil-Tglg-PH\",\n    \"und-TH\": \"th-Thai-TH\",\n    \"und-Thaa\": \"dv-Thaa-MV\",\n    \"und-Thai\": \"th-Thai-TH\",\n    \"und-Thai-CN\": \"lcp-Thai-CN\",\n    \"und-Thai-KH\": \"kdt-Thai-KH\",\n    \"und-Thai-LA\": \"kdt-Thai-LA\",\n    \"und-Tibt\": \"bo-Tibt-CN\",\n    \"und-Tirh\": \"mai-Tirh-IN\",\n    \"und-TJ\": \"tg-Cyrl-TJ\",\n    \"und-TK\": \"tkl-Latn-TK\",\n    \"und-TL\": \"pt-Latn-TL\",\n    \"und-TM\": \"tk-Latn-TM\",\n    \"und-TN\": \"ar-Arab-TN\",\n    \"und-Tnsa\": \"nst-Tnsa-IN\",\n    \"und-TO\": \"to-Latn-TO\",\n    \"und-Toto\": \"txo-Toto-IN\",\n    \"und-TR\": \"tr-Latn-TR\",\n    \"und-TV\": \"tvl-Latn-TV\",\n    \"und-TW\": \"zh-Hant-TW\",\n    \"und-TZ\": \"sw-Latn-TZ\",\n    \"und-UA\": \"uk-Cyrl-UA\",\n    \"und-UG\": \"sw-Latn-UG\",\n    \"und-Ugar\": \"uga-Ugar-SY\",\n    \"und-UY\": \"es-Latn-UY\",\n    \"und-UZ\": \"uz-Latn-UZ\",\n    \"und-VA\": \"it-Latn-VA\",\n    \"und-Vaii\": \"vai-Vaii-LR\",\n    \"und-VE\": \"es-Latn-VE\",\n    \"und-Vith\": \"sq-Vith-AL\",\n    \"und-VN\": \"vi-Latn-VN\",\n    \"und-VU\": \"bi-Latn-VU\",\n    \"und-Wara\": \"hoc-Wara-IN\",\n    \"und-Wcho\": \"nnp-Wcho-IN\",\n    \"und-WF\": \"fr-Latn-WF\",\n    \"und-WS\": \"sm-Latn-WS\",\n    \"und-XK\": \"sq-Latn-XK\",\n    \"und-Xpeo\": \"peo-Xpeo-IR\",\n    \"und-Xsux\": \"akk-Xsux-IQ\",\n    \"und-YE\": \"ar-Arab-YE\",\n    \"und-Yezi\": \"ku-Yezi-GE\",\n    \"und-Yiii\": \"ii-Yiii-CN\",\n    \"und-YT\": \"fr-Latn-YT\",\n    \"und-Zanb\": \"cmg-Zanb-MN\",\n    \"und-ZW\": \"sn-Latn-ZW\",\n    \"unr\": \"unr-Beng-IN\",\n    \"unr-Deva\": \"unr-Deva-NP\",\n    \"unr-NP\": \"unr-Deva-NP\",\n    \"unx\": \"unx-Beng-IN\",\n    \"uok\": \"uok-Latn-ZZ\",\n    \"ur\": \"ur-Arab-PK\",\n    \"uri\": \"uri-Latn-ZZ\",\n    \"urt\": \"urt-Latn-ZZ\",\n    \"urw\": \"urw-Latn-ZZ\",\n    \"usa\": \"usa-Latn-ZZ\",\n    \"uth\": \"uth-Latn-ZZ\",\n    \"utr\": \"utr-Latn-ZZ\",\n    \"uvh\": \"uvh-Latn-ZZ\",\n    \"uvl\": \"uvl-Latn-ZZ\",\n    \"uz\": \"uz-Latn-UZ\",\n    \"uz-AF\": \"uz-Arab-AF\",\n    \"uz-Arab\": \"uz-Arab-AF\",\n    \"uz-CN\": \"uz-Cyrl-CN\",\n    \"vag\": \"vag-Latn-ZZ\",\n    \"vai\": \"vai-Vaii-LR\",\n    \"van\": \"van-Latn-ZZ\",\n    \"ve\": \"ve-Latn-ZA\",\n    \"vec\": \"vec-Latn-IT\",\n    \"vep\": \"vep-Latn-RU\",\n    \"vi\": \"vi-Latn-VN\",\n    \"vic\": \"vic-Latn-SX\",\n    \"viv\": \"viv-Latn-ZZ\",\n    \"vls\": \"vls-Latn-BE\",\n    \"vmf\": \"vmf-Latn-DE\",\n    \"vmw\": \"vmw-Latn-MZ\",\n    \"vo\": \"vo-Latn-001\",\n    \"vot\": \"vot-Latn-RU\",\n    \"vro\": \"vro-Latn-EE\",\n    \"vun\": \"vun-Latn-TZ\",\n    \"vut\": \"vut-Latn-ZZ\",\n    \"wa\": \"wa-Latn-BE\",\n    \"wae\": \"wae-Latn-CH\",\n    \"waj\": \"waj-Latn-ZZ\",\n    \"wal\": \"wal-Ethi-ET\",\n    \"wan\": \"wan-Latn-ZZ\",\n    \"war\": \"war-Latn-PH\",\n    \"wbp\": \"wbp-Latn-AU\",\n    \"wbq\": \"wbq-Telu-IN\",\n    \"wbr\": \"wbr-Deva-IN\",\n    \"wci\": \"wci-Latn-ZZ\",\n    \"wer\": \"wer-Latn-ZZ\",\n    \"wgi\": \"wgi-Latn-ZZ\",\n    \"whg\": \"whg-Latn-ZZ\",\n    \"wib\": \"wib-Latn-ZZ\",\n    \"wiu\": \"wiu-Latn-ZZ\",\n    \"wiv\": \"wiv-Latn-ZZ\",\n    \"wja\": \"wja-Latn-ZZ\",\n    \"wji\": \"wji-Latn-ZZ\",\n    \"wls\": \"wls-Latn-WF\",\n    \"wmo\": \"wmo-Latn-ZZ\",\n    \"wnc\": \"wnc-Latn-ZZ\",\n    \"wni\": \"wni-Arab-KM\",\n    \"wnu\": \"wnu-Latn-ZZ\",\n    \"wo\": \"wo-Latn-SN\",\n    \"wob\": \"wob-Latn-ZZ\",\n    \"wos\": \"wos-Latn-ZZ\",\n    \"wrs\": \"wrs-Latn-ZZ\",\n    \"wsg\": \"wsg-Gong-IN\",\n    \"wsk\": \"wsk-Latn-ZZ\",\n    \"wtm\": \"wtm-Deva-IN\",\n    \"wuu\": \"wuu-Hans-CN\",\n    \"wuv\": \"wuv-Latn-ZZ\",\n    \"wwa\": \"wwa-Latn-ZZ\",\n    \"xav\": \"xav-Latn-BR\",\n    \"xbi\": \"xbi-Latn-ZZ\",\n    \"xco\": \"xco-Chrs-UZ\",\n    \"xcr\": \"xcr-Cari-TR\",\n    \"xes\": \"xes-Latn-ZZ\",\n    \"xh\": \"xh-Latn-ZA\",\n    \"xla\": \"xla-Latn-ZZ\",\n    \"xlc\": \"xlc-Lyci-TR\",\n    \"xld\": \"xld-Lydi-TR\",\n    \"xmf\": \"xmf-Geor-GE\",\n    \"xmn\": \"xmn-Mani-CN\",\n    \"xmr\": \"xmr-Merc-SD\",\n    \"xna\": \"xna-Narb-SA\",\n    \"xnr\": \"xnr-Deva-IN\",\n    \"xog\": \"xog-Latn-UG\",\n    \"xon\": \"xon-Latn-ZZ\",\n    \"xpr\": \"xpr-Prti-IR\",\n    \"xrb\": \"xrb-Latn-ZZ\",\n    \"xsa\": \"xsa-Sarb-YE\",\n    \"xsi\": \"xsi-Latn-ZZ\",\n    \"xsm\": \"xsm-Latn-ZZ\",\n    \"xsr\": \"xsr-Deva-NP\",\n    \"xwe\": \"xwe-Latn-ZZ\",\n    \"yam\": \"yam-Latn-ZZ\",\n    \"yao\": \"yao-Latn-MZ\",\n    \"yap\": \"yap-Latn-FM\",\n    \"yas\": \"yas-Latn-ZZ\",\n    \"yat\": \"yat-Latn-ZZ\",\n    \"yav\": \"yav-Latn-CM\",\n    \"yay\": \"yay-Latn-ZZ\",\n    \"yaz\": \"yaz-Latn-ZZ\",\n    \"yba\": \"yba-Latn-ZZ\",\n    \"ybb\": \"ybb-Latn-CM\",\n    \"yby\": \"yby-Latn-ZZ\",\n    \"yer\": \"yer-Latn-ZZ\",\n    \"ygr\": \"ygr-Latn-ZZ\",\n    \"ygw\": \"ygw-Latn-ZZ\",\n    \"yi\": \"yi-Hebr-001\",\n    \"yko\": \"yko-Latn-ZZ\",\n    \"yle\": \"yle-Latn-ZZ\",\n    \"ylg\": \"ylg-Latn-ZZ\",\n    \"yll\": \"yll-Latn-ZZ\",\n    \"yml\": \"yml-Latn-ZZ\",\n    \"yo\": \"yo-Latn-NG\",\n    \"yon\": \"yon-Latn-ZZ\",\n    \"yrb\": \"yrb-Latn-ZZ\",\n    \"yre\": \"yre-Latn-ZZ\",\n    \"yrl\": \"yrl-Latn-BR\",\n    \"yss\": \"yss-Latn-ZZ\",\n    \"yua\": \"yua-Latn-MX\",\n    \"yue\": \"yue-Hant-HK\",\n    \"yue-CN\": \"yue-Hans-CN\",\n    \"yue-Hans\": \"yue-Hans-CN\",\n    \"yuj\": \"yuj-Latn-ZZ\",\n    \"yut\": \"yut-Latn-ZZ\",\n    \"yuw\": \"yuw-Latn-ZZ\",\n    \"za\": \"za-Latn-CN\",\n    \"zag\": \"zag-Latn-SD\",\n    \"zdj\": \"zdj-Arab-KM\",\n    \"zea\": \"zea-Latn-NL\",\n    \"zgh\": \"zgh-Tfng-MA\",\n    \"zh\": \"zh-Hans-CN\",\n    \"zh-AU\": \"zh-Hant-AU\",\n    \"zh-BN\": \"zh-Hant-BN\",\n    \"zh-Bopo\": \"zh-Bopo-TW\",\n    \"zh-GB\": \"zh-Hant-GB\",\n    \"zh-GF\": \"zh-Hant-GF\",\n    \"zh-Hanb\": \"zh-Hanb-TW\",\n    \"zh-Hant\": \"zh-Hant-TW\",\n    \"zh-HK\": \"zh-Hant-HK\",\n    \"zh-ID\": \"zh-Hant-ID\",\n    \"zh-MO\": \"zh-Hant-MO\",\n    \"zh-PA\": \"zh-Hant-PA\",\n    \"zh-PF\": \"zh-Hant-PF\",\n    \"zh-PH\": \"zh-Hant-PH\",\n    \"zh-SR\": \"zh-Hant-SR\",\n    \"zh-TH\": \"zh-Hant-TH\",\n    \"zh-TW\": \"zh-Hant-TW\",\n    \"zh-US\": \"zh-Hant-US\",\n    \"zh-VN\": \"zh-Hant-VN\",\n    \"zhx\": \"zhx-Nshu-CN\",\n    \"zia\": \"zia-Latn-ZZ\",\n    \"zkt\": \"zkt-Kits-CN\",\n    \"zlm\": \"zlm-Latn-TG\",\n    \"zmi\": \"zmi-Latn-MY\",\n    \"zne\": \"zne-Latn-ZZ\",\n    \"zu\": \"zu-Latn-ZA\",\n    \"zza\": \"zza-Latn-TR\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Locale = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_getcanonicallocales_1 = require(\"@formatjs/intl-getcanonicallocales\");\nvar get_internal_slots_1 = tslib_1.__importDefault(require(\"./get_internal_slots\"));\nvar RELEVANT_EXTENSION_KEYS = ['ca', 'co', 'hc', 'kf', 'kn', 'nu'];\nvar UNICODE_TYPE_REGEX = /^[a-z0-9]{3,8}(-[a-z0-9]{3,8})*$/i;\nfunction applyOptionsToTag(tag, options) {\n    (0, ecma402_abstract_1.invariant)(typeof tag === 'string', 'language tag must be a string');\n    (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isStructurallyValidLanguageTag)(tag), 'malformed language tag', RangeError);\n    var language = (0, ecma402_abstract_1.GetOption)(options, 'language', 'string', undefined, undefined);\n    if (language !== undefined) {\n        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeLanguageSubtag)(language), 'Malformed unicode_language_subtag', RangeError);\n    }\n    var script = (0, ecma402_abstract_1.GetOption)(options, 'script', 'string', undefined, undefined);\n    if (script !== undefined) {\n        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeScriptSubtag)(script), 'Malformed unicode_script_subtag', RangeError);\n    }\n    var region = (0, ecma402_abstract_1.GetOption)(options, 'region', 'string', undefined, undefined);\n    if (region !== undefined) {\n        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeRegionSubtag)(region), 'Malformed unicode_region_subtag', RangeError);\n    }\n    var languageId = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(tag);\n    if (language !== undefined) {\n        languageId.lang = language;\n    }\n    if (script !== undefined) {\n        languageId.script = script;\n    }\n    if (region !== undefined) {\n        languageId.region = region;\n    }\n    return Intl.getCanonicalLocales((0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag)), { lang: languageId })))[0];\n}\nfunction applyUnicodeExtensionToTag(tag, options, relevantExtensionKeys) {\n    var unicodeExtension;\n    var keywords = [];\n    var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag);\n    for (var _i = 0, _a = ast.extensions; _i < _a.length; _i++) {\n        var ext = _a[_i];\n        if (ext.type === 'u') {\n            unicodeExtension = ext;\n            if (Array.isArray(ext.keywords))\n                keywords = ext.keywords;\n        }\n    }\n    var result = Object.create(null);\n    for (var _b = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _b < relevantExtensionKeys_1.length; _b++) {\n        var key = relevantExtensionKeys_1[_b];\n        var value = void 0, entry = void 0;\n        for (var _c = 0, keywords_1 = keywords; _c < keywords_1.length; _c++) {\n            var keyword = keywords_1[_c];\n            if (keyword[0] === key) {\n                entry = keyword;\n                value = entry[1];\n            }\n        }\n        (0, ecma402_abstract_1.invariant)(key in options, \"\".concat(key, \" must be in options\"));\n        var optionsValue = options[key];\n        if (optionsValue !== undefined) {\n            (0, ecma402_abstract_1.invariant)(typeof optionsValue === 'string', \"Value for \".concat(key, \" must be a string\"));\n            value = optionsValue;\n            if (entry) {\n                entry[1] = value;\n            }\n            else {\n                keywords.push([key, value]);\n            }\n        }\n        result[key] = value;\n    }\n    if (!unicodeExtension) {\n        if (keywords.length) {\n            ast.extensions.push({\n                type: 'u',\n                keywords: keywords,\n                attributes: [],\n            });\n        }\n    }\n    else {\n        unicodeExtension.keywords = keywords;\n    }\n    result.locale = Intl.getCanonicalLocales((0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast))[0];\n    return result;\n}\nfunction mergeUnicodeLanguageId(lang, script, region, variants, replacement) {\n    if (variants === void 0) { variants = []; }\n    if (!replacement) {\n        return {\n            lang: lang || 'und',\n            script: script,\n            region: region,\n            variants: variants,\n        };\n    }\n    return {\n        lang: !lang || lang === 'und' ? replacement.lang : lang,\n        script: script || replacement.script,\n        region: region || replacement.region,\n        variants: tslib_1.__spreadArray(tslib_1.__spreadArray([], variants, true), replacement.variants, true),\n    };\n}\nfunction addLikelySubtags(tag) {\n    var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag);\n    var unicodeLangId = ast.lang;\n    var lang = unicodeLangId.lang, script = unicodeLangId.script, region = unicodeLangId.region, variants = unicodeLangId.variants;\n    if (script && region) {\n        var match_1 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, script: script, region: region, variants: [] })];\n        if (match_1) {\n            var parts_1 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_1);\n            ast.lang = mergeUnicodeLanguageId(undefined, undefined, undefined, variants, parts_1);\n            return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);\n        }\n    }\n    if (script) {\n        var match_2 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, script: script, variants: [] })];\n        if (match_2) {\n            var parts_2 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_2);\n            ast.lang = mergeUnicodeLanguageId(undefined, undefined, region, variants, parts_2);\n            return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);\n        }\n    }\n    if (region) {\n        var match_3 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, region: region, variants: [] })];\n        if (match_3) {\n            var parts_3 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_3);\n            ast.lang = mergeUnicodeLanguageId(undefined, script, undefined, variants, parts_3);\n            return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);\n        }\n    }\n    var match = intl_getcanonicallocales_1.likelySubtags[lang] ||\n        intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: 'und', script: script, variants: [] })];\n    if (!match) {\n        throw new Error(\"No match for addLikelySubtags\");\n    }\n    var parts = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match);\n    ast.lang = mergeUnicodeLanguageId(undefined, script, region, variants, parts);\n    return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);\n}\n/**\n * From: https://github.com/unicode-org/icu/blob/4231ca5be053a22a1be24eb891817458c97db709/icu4j/main/classes/core/src/com/ibm/icu/util/ULocale.java#L2395\n * @param tag\n */\nfunction removeLikelySubtags(tag) {\n    var maxLocale = addLikelySubtags(tag);\n    if (!maxLocale) {\n        return tag;\n    }\n    maxLocale = (0, intl_getcanonicallocales_1.emitUnicodeLanguageId)(tslib_1.__assign(tslib_1.__assign({}, (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(maxLocale)), { variants: [] }));\n    var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag);\n    var _a = ast.lang, lang = _a.lang, script = _a.script, region = _a.region, variants = _a.variants;\n    var trial = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, variants: [] }));\n    if (trial === maxLocale) {\n        return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, undefined, undefined, variants) }));\n    }\n    if (region) {\n        var trial_1 = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, region: region, variants: [] }));\n        if (trial_1 === maxLocale) {\n            return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, undefined, region, variants) }));\n        }\n    }\n    if (script) {\n        var trial_2 = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: lang, script: script, variants: [] }));\n        if (trial_2 === maxLocale) {\n            return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, script, undefined, variants) }));\n        }\n    }\n    return tag;\n}\nvar Locale = /** @class */ (function () {\n    function Locale(tag, opts) {\n        // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof Locale ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.Locale must be called with 'new'\");\n        }\n        var relevantExtensionKeys = Locale.relevantExtensionKeys;\n        var internalSlotsList = [\n            'initializedLocale',\n            'locale',\n            'calendar',\n            'collation',\n            'hourCycle',\n            'numberingSystem',\n        ];\n        if (relevantExtensionKeys.indexOf('kf') > -1) {\n            internalSlotsList.push('caseFirst');\n        }\n        if (relevantExtensionKeys.indexOf('kn') > -1) {\n            internalSlotsList.push('numeric');\n        }\n        if (tag === undefined) {\n            throw new TypeError(\"First argument to Intl.Locale constructor can't be empty or missing\");\n        }\n        if (typeof tag !== 'string' && typeof tag !== 'object') {\n            throw new TypeError('tag must be a string or object');\n        }\n        var internalSlots;\n        if (typeof tag === 'object' &&\n            (internalSlots = (0, get_internal_slots_1.default)(tag)) &&\n            internalSlots.initializedLocale) {\n            tag = internalSlots.locale;\n        }\n        else {\n            tag = tag.toString();\n        }\n        internalSlots = (0, get_internal_slots_1.default)(this);\n        var options = (0, ecma402_abstract_1.CoerceOptionsToObject)(opts);\n        tag = applyOptionsToTag(tag, options);\n        var opt = Object.create(null);\n        var calendar = (0, ecma402_abstract_1.GetOption)(options, 'calendar', 'string', undefined, undefined);\n        if (calendar !== undefined) {\n            if (!UNICODE_TYPE_REGEX.test(calendar)) {\n                throw new RangeError('invalid calendar');\n            }\n        }\n        opt.ca = calendar;\n        var collation = (0, ecma402_abstract_1.GetOption)(options, 'collation', 'string', undefined, undefined);\n        if (collation !== undefined) {\n            if (!UNICODE_TYPE_REGEX.test(collation)) {\n                throw new RangeError('invalid collation');\n            }\n        }\n        opt.co = collation;\n        var hc = (0, ecma402_abstract_1.GetOption)(options, 'hourCycle', 'string', ['h11', 'h12', 'h23', 'h24'], undefined);\n        opt.hc = hc;\n        var kf = (0, ecma402_abstract_1.GetOption)(options, 'caseFirst', 'string', ['upper', 'lower', 'false'], undefined);\n        opt.kf = kf;\n        var _kn = (0, ecma402_abstract_1.GetOption)(options, 'numeric', 'boolean', undefined, undefined);\n        var kn;\n        if (_kn !== undefined) {\n            kn = String(_kn);\n        }\n        opt.kn = kn;\n        var numberingSystem = (0, ecma402_abstract_1.GetOption)(options, 'numberingSystem', 'string', undefined, undefined);\n        if (numberingSystem !== undefined) {\n            if (!UNICODE_TYPE_REGEX.test(numberingSystem)) {\n                throw new RangeError('Invalid numberingSystem');\n            }\n        }\n        opt.nu = numberingSystem;\n        var r = applyUnicodeExtensionToTag(tag, opt, relevantExtensionKeys);\n        internalSlots.locale = r.locale;\n        internalSlots.calendar = r.ca;\n        internalSlots.collation = r.co;\n        internalSlots.hourCycle = r.hc;\n        if (relevantExtensionKeys.indexOf('kf') > -1) {\n            internalSlots.caseFirst = r.kf;\n        }\n        if (relevantExtensionKeys.indexOf('kn') > -1) {\n            internalSlots.numeric = (0, ecma402_abstract_1.SameValue)(r.kn, 'true');\n        }\n        internalSlots.numberingSystem = r.nu;\n    }\n    /**\n     * https://www.unicode.org/reports/tr35/#Likely_Subtags\n     */\n    Locale.prototype.maximize = function () {\n        var locale = (0, get_internal_slots_1.default)(this).locale;\n        try {\n            var maximizedLocale = addLikelySubtags(locale);\n            return new Locale(maximizedLocale);\n        }\n        catch (e) {\n            return new Locale(locale);\n        }\n    };\n    /**\n     * https://www.unicode.org/reports/tr35/#Likely_Subtags\n     */\n    Locale.prototype.minimize = function () {\n        var locale = (0, get_internal_slots_1.default)(this).locale;\n        try {\n            var minimizedLocale = removeLikelySubtags(locale);\n            return new Locale(minimizedLocale);\n        }\n        catch (e) {\n            return new Locale(locale);\n        }\n    };\n    Locale.prototype.toString = function () {\n        return (0, get_internal_slots_1.default)(this).locale;\n    };\n    Object.defineProperty(Locale.prototype, \"baseName\", {\n        get: function () {\n            var locale = (0, get_internal_slots_1.default)(this).locale;\n            return (0, intl_getcanonicallocales_1.emitUnicodeLanguageId)((0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"calendar\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).calendar;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"collation\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).collation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"hourCycle\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).hourCycle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"caseFirst\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).caseFirst;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"numeric\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).numeric;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"numberingSystem\", {\n        get: function () {\n            return (0, get_internal_slots_1.default)(this).numberingSystem;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"language\", {\n        /**\n         * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.language\n         */\n        get: function () {\n            var locale = (0, get_internal_slots_1.default)(this).locale;\n            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).lang;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"script\", {\n        /**\n         * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.script\n         */\n        get: function () {\n            var locale = (0, get_internal_slots_1.default)(this).locale;\n            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).script;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Locale.prototype, \"region\", {\n        /**\n         * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.region\n         */\n        get: function () {\n            var locale = (0, get_internal_slots_1.default)(this).locale;\n            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).region;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Locale.relevantExtensionKeys = RELEVANT_EXTENSION_KEYS;\n    return Locale;\n}());\nexports.Locale = Locale;\ntry {\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(Locale.prototype, Symbol.toStringTag, {\n            value: 'Intl.Locale',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    Object.defineProperty(Locale.prototype.constructor, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (e) {\n    // Meta fix so we're test262-compliant, not important\n}\nexports.default = Locale;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUnicodeLanguageSubtag = exports.isUnicodeScriptSubtag = exports.isUnicodeRegionSubtag = exports.isStructurallyValidLanguageTag = exports.parseUnicodeLanguageId = exports.parseUnicodeLocaleId = exports.getCanonicalLocales = void 0;\nvar tslib_1 = require(\"tslib\");\nvar parser_1 = require(\"./src/parser\");\nvar emitter_1 = require(\"./src/emitter\");\nvar canonicalizer_1 = require(\"./src/canonicalizer\");\n/**\n * https://tc39.es/ecma402/#sec-canonicalizelocalelist\n * @param locales\n */\nfunction CanonicalizeLocaleList(locales) {\n    if (locales === undefined) {\n        return [];\n    }\n    var seen = [];\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    for (var _i = 0, locales_1 = locales; _i < locales_1.length; _i++) {\n        var locale = locales_1[_i];\n        var canonicalizedTag = (0, emitter_1.emitUnicodeLocaleId)((0, canonicalizer_1.canonicalizeUnicodeLocaleId)((0, parser_1.parseUnicodeLocaleId)(locale)));\n        if (seen.indexOf(canonicalizedTag) < 0) {\n            seen.push(canonicalizedTag);\n        }\n    }\n    return seen;\n}\nfunction getCanonicalLocales(locales) {\n    return CanonicalizeLocaleList(locales);\n}\nexports.getCanonicalLocales = getCanonicalLocales;\nvar parser_2 = require(\"./src/parser\");\nObject.defineProperty(exports, \"parseUnicodeLocaleId\", { enumerable: true, get: function () { return parser_2.parseUnicodeLocaleId; } });\nObject.defineProperty(exports, \"parseUnicodeLanguageId\", { enumerable: true, get: function () { return parser_2.parseUnicodeLanguageId; } });\nObject.defineProperty(exports, \"isStructurallyValidLanguageTag\", { enumerable: true, get: function () { return parser_2.isStructurallyValidLanguageTag; } });\nObject.defineProperty(exports, \"isUnicodeRegionSubtag\", { enumerable: true, get: function () { return parser_2.isUnicodeRegionSubtag; } });\nObject.defineProperty(exports, \"isUnicodeScriptSubtag\", { enumerable: true, get: function () { return parser_2.isUnicodeScriptSubtag; } });\nObject.defineProperty(exports, \"isUnicodeLanguageSubtag\", { enumerable: true, get: function () { return parser_2.isUnicodeLanguageSubtag; } });\ntslib_1.__exportStar(require(\"./src/types\"), exports);\ntslib_1.__exportStar(require(\"./src/emitter\"), exports);\ntslib_1.__exportStar(require(\"./src/likelySubtags.generated\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canonicalizeUnicodeLocaleId = exports.canonicalizeUnicodeLanguageId = void 0;\nvar tslib_1 = require(\"tslib\");\nvar aliases_generated_1 = require(\"./aliases.generated\");\nvar parser_1 = require(\"./parser\");\nvar likelySubtags_generated_1 = require(\"./likelySubtags.generated\");\nvar emitter_1 = require(\"./emitter\");\nfunction canonicalizeAttrs(strs) {\n    return Object.keys(strs.reduce(function (all, str) {\n        all[str.toLowerCase()] = 1;\n        return all;\n    }, {})).sort();\n}\nfunction canonicalizeKVs(arr) {\n    var all = {};\n    var result = [];\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var kv = arr_1[_i];\n        if (kv[0] in all) {\n            continue;\n        }\n        all[kv[0]] = 1;\n        if (!kv[1] || kv[1] === 'true') {\n            result.push([kv[0].toLowerCase()]);\n        }\n        else {\n            result.push([kv[0].toLowerCase(), kv[1].toLowerCase()]);\n        }\n    }\n    return result.sort(compareKV);\n}\nfunction compareKV(t1, t2) {\n    return t1[0] < t2[0] ? -1 : t1[0] > t2[0] ? 1 : 0;\n}\nfunction compareExtension(e1, e2) {\n    return e1.type < e2.type ? -1 : e1.type > e2.type ? 1 : 0;\n}\nfunction mergeVariants(v1, v2) {\n    var result = tslib_1.__spreadArray([], v1, true);\n    for (var _i = 0, v2_1 = v2; _i < v2_1.length; _i++) {\n        var v = v2_1[_i];\n        if (v1.indexOf(v) < 0) {\n            result.push(v);\n        }\n    }\n    return result;\n}\n/**\n * CAVEAT: We don't do this section in the spec bc they have no JSON data\n * Use the bcp47 data to replace keys, types, tfields, and tvalues by their canonical forms. See Section 3.6.4 U Extension Data Files) and Section 3.7.1 T Extension Data Files. The aliases are in the alias attribute value, while the canonical is in the name attribute value. For example,\nBecause of the following bcp47 data:\n<key name=\"ms\"…>…<type name=\"uksystem\" … alias=\"imperial\" … />…</key>\nWe get the following transformation:\nen-u-ms-imperial ⇒ en-u-ms-uksystem\n * @param lang\n */\nfunction canonicalizeUnicodeLanguageId(unicodeLanguageId) {\n    /**\n     * If the language subtag matches the type attribute of a languageAlias element in Supplemental Data, replace the language subtag with the replacement value.\n     *  1. If there are additional subtags in the replacement value, add them to the result, but only if there is no corresponding subtag already in the tag.\n     *  2. Five special deprecated grandfathered codes (such as i-default) are in type attributes, and are also replaced.\n     */\n    // From https://github.com/unicode-org/icu/blob/master/icu4j/main/classes/core/src/com/ibm/icu/util/ULocale.java#L1246\n    // Try language _ variant\n    var finalLangAst = unicodeLanguageId;\n    if (unicodeLanguageId.variants.length) {\n        var replacedLang_1 = '';\n        for (var _i = 0, _a = unicodeLanguageId.variants; _i < _a.length; _i++) {\n            var variant = _a[_i];\n            if ((replacedLang_1 =\n                aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({\n                    lang: unicodeLanguageId.lang,\n                    variants: [variant],\n                })])) {\n                var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_1.split(parser_1.SEPARATOR));\n                finalLangAst = {\n                    lang: replacedLangAst.lang,\n                    script: finalLangAst.script || replacedLangAst.script,\n                    region: finalLangAst.region || replacedLangAst.region,\n                    variants: mergeVariants(finalLangAst.variants, replacedLangAst.variants),\n                };\n                break;\n            }\n        }\n    }\n    // language _ script _ country\n    // ug-Arab-CN -> ug-CN\n    if (finalLangAst.script && finalLangAst.region) {\n        var replacedLang_2 = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({\n            lang: finalLangAst.lang,\n            script: finalLangAst.script,\n            region: finalLangAst.region,\n            variants: [],\n        })];\n        if (replacedLang_2) {\n            var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_2.split(parser_1.SEPARATOR));\n            finalLangAst = {\n                lang: replacedLangAst.lang,\n                script: replacedLangAst.script,\n                region: replacedLangAst.region,\n                variants: finalLangAst.variants,\n            };\n        }\n    }\n    // language _ country\n    // eg. az_AZ -> az_Latn_A\n    if (finalLangAst.region) {\n        var replacedLang_3 = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({\n            lang: finalLangAst.lang,\n            region: finalLangAst.region,\n            variants: [],\n        })];\n        if (replacedLang_3) {\n            var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_3.split(parser_1.SEPARATOR));\n            finalLangAst = {\n                lang: replacedLangAst.lang,\n                script: finalLangAst.script || replacedLangAst.script,\n                region: replacedLangAst.region,\n                variants: finalLangAst.variants,\n            };\n        }\n    }\n    // only language\n    // e.g. twi -> ak\n    var replacedLang = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({\n        lang: finalLangAst.lang,\n        variants: [],\n    })];\n    if (replacedLang) {\n        var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang.split(parser_1.SEPARATOR));\n        finalLangAst = {\n            lang: replacedLangAst.lang,\n            script: finalLangAst.script || replacedLangAst.script,\n            region: finalLangAst.region || replacedLangAst.region,\n            variants: finalLangAst.variants,\n        };\n    }\n    if (finalLangAst.region) {\n        var region = finalLangAst.region.toUpperCase();\n        var regionAlias = aliases_generated_1.territoryAlias[region];\n        var replacedRegion = void 0;\n        if (regionAlias) {\n            var regions = regionAlias.split(' ');\n            replacedRegion = regions[0];\n            var likelySubtag = likelySubtags_generated_1.likelySubtags[(0, emitter_1.emitUnicodeLanguageId)({\n                lang: finalLangAst.lang,\n                script: finalLangAst.script,\n                variants: [],\n            })];\n            if (likelySubtag) {\n                var likelyRegion = (0, parser_1.parseUnicodeLanguageId)(likelySubtag.split(parser_1.SEPARATOR)).region;\n                if (likelyRegion && regions.indexOf(likelyRegion) > -1) {\n                    replacedRegion = likelyRegion;\n                }\n            }\n        }\n        if (replacedRegion) {\n            finalLangAst.region = replacedRegion;\n        }\n        finalLangAst.region = finalLangAst.region.toUpperCase();\n    }\n    if (finalLangAst.script) {\n        finalLangAst.script =\n            finalLangAst.script[0].toUpperCase() +\n                finalLangAst.script.slice(1).toLowerCase();\n        if (aliases_generated_1.scriptAlias[finalLangAst.script]) {\n            finalLangAst.script = aliases_generated_1.scriptAlias[finalLangAst.script];\n        }\n    }\n    if (finalLangAst.variants.length) {\n        for (var i = 0; i < finalLangAst.variants.length; i++) {\n            var variant = finalLangAst.variants[i].toLowerCase();\n            if (aliases_generated_1.variantAlias[variant]) {\n                var alias = aliases_generated_1.variantAlias[variant];\n                if ((0, parser_1.isUnicodeVariantSubtag)(alias)) {\n                    finalLangAst.variants[i] = alias;\n                }\n                else if ((0, parser_1.isUnicodeLanguageSubtag)(alias)) {\n                    // Yes this can happen per the spec\n                    finalLangAst.lang = alias;\n                }\n            }\n        }\n        finalLangAst.variants.sort();\n    }\n    return finalLangAst;\n}\nexports.canonicalizeUnicodeLanguageId = canonicalizeUnicodeLanguageId;\n/**\n * Canonicalize based on\n * https://www.unicode.org/reports/tr35/tr35.html#Canonical_Unicode_Locale_Identifiers\n * https://tc39.es/ecma402/#sec-canonicalizeunicodelocaleid\n * IMPORTANT: This modifies the object inline\n * @param locale\n */\nfunction canonicalizeUnicodeLocaleId(locale) {\n    locale.lang = canonicalizeUnicodeLanguageId(locale.lang);\n    if (locale.extensions) {\n        for (var _i = 0, _a = locale.extensions; _i < _a.length; _i++) {\n            var extension = _a[_i];\n            switch (extension.type) {\n                case 'u':\n                    extension.keywords = canonicalizeKVs(extension.keywords);\n                    if (extension.attributes) {\n                        extension.attributes = canonicalizeAttrs(extension.attributes);\n                    }\n                    break;\n                case 't':\n                    if (extension.lang) {\n                        extension.lang = canonicalizeUnicodeLanguageId(extension.lang);\n                    }\n                    extension.fields = canonicalizeKVs(extension.fields);\n                    break;\n                default:\n                    extension.value = extension.value.toLowerCase();\n                    break;\n            }\n        }\n        locale.extensions.sort(compareExtension);\n    }\n    return locale;\n}\nexports.canonicalizeUnicodeLocaleId = canonicalizeUnicodeLocaleId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.variantAlias = exports.scriptAlias = exports.territoryAlias = exports.languageAlias = void 0;\n/* @generated */\n// prettier-ignore  \nexports.languageAlias = {\n    \"aa-saaho\": \"ssy\",\n    \"aam\": \"aas\",\n    \"aar\": \"aa\",\n    \"abk\": \"ab\",\n    \"adp\": \"dz\",\n    \"afr\": \"af\",\n    \"agp\": \"apf\",\n    \"ais\": \"ami\",\n    \"aju\": \"jrb\",\n    \"aka\": \"ak\",\n    \"alb\": \"sq\",\n    \"als\": \"sq\",\n    \"amh\": \"am\",\n    \"ara\": \"ar\",\n    \"arb\": \"ar\",\n    \"arg\": \"an\",\n    \"arm\": \"hy\",\n    \"art-lojban\": \"jbo\",\n    \"asd\": \"snz\",\n    \"asm\": \"as\",\n    \"aue\": \"ktz\",\n    \"ava\": \"av\",\n    \"ave\": \"ae\",\n    \"aym\": \"ay\",\n    \"ayr\": \"ay\",\n    \"ayx\": \"nun\",\n    \"aze\": \"az\",\n    \"azj\": \"az\",\n    \"bak\": \"ba\",\n    \"bam\": \"bm\",\n    \"baq\": \"eu\",\n    \"baz\": \"nvo\",\n    \"bcc\": \"bal\",\n    \"bcl\": \"bik\",\n    \"bel\": \"be\",\n    \"ben\": \"bn\",\n    \"bgm\": \"bcg\",\n    \"bh\": \"bho\",\n    \"bhk\": \"fbl\",\n    \"bic\": \"bir\",\n    \"bih\": \"bho\",\n    \"bis\": \"bi\",\n    \"bjd\": \"drl\",\n    \"bjq\": \"bzc\",\n    \"bkb\": \"ebk\",\n    \"blg\": \"iba\",\n    \"bod\": \"bo\",\n    \"bos\": \"bs\",\n    \"bre\": \"br\",\n    \"btb\": \"beb\",\n    \"bul\": \"bg\",\n    \"bur\": \"my\",\n    \"bxk\": \"luy\",\n    \"bxr\": \"bua\",\n    \"cat\": \"ca\",\n    \"ccq\": \"rki\",\n    \"cel-gaulish\": \"xtg\",\n    \"ces\": \"cs\",\n    \"cha\": \"ch\",\n    \"che\": \"ce\",\n    \"chi\": \"zh\",\n    \"chu\": \"cu\",\n    \"chv\": \"cv\",\n    \"cjr\": \"mom\",\n    \"cka\": \"cmr\",\n    \"cld\": \"syr\",\n    \"cmk\": \"xch\",\n    \"cmn\": \"zh\",\n    \"cnr\": \"sr-ME\",\n    \"cor\": \"kw\",\n    \"cos\": \"co\",\n    \"coy\": \"pij\",\n    \"cqu\": \"quh\",\n    \"cre\": \"cr\",\n    \"cwd\": \"cr\",\n    \"cym\": \"cy\",\n    \"cze\": \"cs\",\n    \"daf\": \"dnj\",\n    \"dan\": \"da\",\n    \"dap\": \"njz\",\n    \"deu\": \"de\",\n    \"dgo\": \"doi\",\n    \"dhd\": \"mwr\",\n    \"dik\": \"din\",\n    \"diq\": \"zza\",\n    \"dit\": \"dif\",\n    \"div\": \"dv\",\n    \"djl\": \"dze\",\n    \"dkl\": \"aqd\",\n    \"drh\": \"mn\",\n    \"drr\": \"kzk\",\n    \"drw\": \"fa-AF\",\n    \"dud\": \"uth\",\n    \"duj\": \"dwu\",\n    \"dut\": \"nl\",\n    \"dwl\": \"dbt\",\n    \"dzo\": \"dz\",\n    \"ekk\": \"et\",\n    \"ell\": \"el\",\n    \"elp\": \"amq\",\n    \"emk\": \"man\",\n    \"en-GB-oed\": \"en-GB-oxendict\",\n    \"eng\": \"en\",\n    \"epo\": \"eo\",\n    \"esk\": \"ik\",\n    \"est\": \"et\",\n    \"eus\": \"eu\",\n    \"ewe\": \"ee\",\n    \"fao\": \"fo\",\n    \"fas\": \"fa\",\n    \"fat\": \"ak\",\n    \"fij\": \"fj\",\n    \"fin\": \"fi\",\n    \"fra\": \"fr\",\n    \"fre\": \"fr\",\n    \"fry\": \"fy\",\n    \"fuc\": \"ff\",\n    \"ful\": \"ff\",\n    \"gav\": \"dev\",\n    \"gaz\": \"om\",\n    \"gbc\": \"wny\",\n    \"gbo\": \"grb\",\n    \"geo\": \"ka\",\n    \"ger\": \"de\",\n    \"gfx\": \"vaj\",\n    \"ggn\": \"gvr\",\n    \"ggo\": \"esg\",\n    \"ggr\": \"gtu\",\n    \"gio\": \"aou\",\n    \"gla\": \"gd\",\n    \"gle\": \"ga\",\n    \"glg\": \"gl\",\n    \"gli\": \"kzk\",\n    \"glv\": \"gv\",\n    \"gno\": \"gon\",\n    \"gre\": \"el\",\n    \"grn\": \"gn\",\n    \"gti\": \"nyc\",\n    \"gug\": \"gn\",\n    \"guj\": \"gu\",\n    \"guv\": \"duz\",\n    \"gya\": \"gba\",\n    \"hat\": \"ht\",\n    \"hau\": \"ha\",\n    \"hbs\": \"sr-Latn\",\n    \"hdn\": \"hai\",\n    \"hea\": \"hmn\",\n    \"heb\": \"he\",\n    \"her\": \"hz\",\n    \"him\": \"srx\",\n    \"hin\": \"hi\",\n    \"hmo\": \"ho\",\n    \"hrr\": \"jal\",\n    \"hrv\": \"hr\",\n    \"hun\": \"hu\",\n    \"hy-arevmda\": \"hyw\",\n    \"hye\": \"hy\",\n    \"i-ami\": \"ami\",\n    \"i-bnn\": \"bnn\",\n    \"i-default\": \"en-x-i-default\",\n    \"i-enochian\": \"und-x-i-enochian\",\n    \"i-hak\": \"hak\",\n    \"i-klingon\": \"tlh\",\n    \"i-lux\": \"lb\",\n    \"i-mingo\": \"see-x-i-mingo\",\n    \"i-navajo\": \"nv\",\n    \"i-pwn\": \"pwn\",\n    \"i-tao\": \"tao\",\n    \"i-tay\": \"tay\",\n    \"i-tsu\": \"tsu\",\n    \"ibi\": \"opa\",\n    \"ibo\": \"ig\",\n    \"ice\": \"is\",\n    \"ido\": \"io\",\n    \"iii\": \"ii\",\n    \"ike\": \"iu\",\n    \"iku\": \"iu\",\n    \"ile\": \"ie\",\n    \"ill\": \"ilm\",\n    \"ilw\": \"gal\",\n    \"in\": \"id\",\n    \"ina\": \"ia\",\n    \"ind\": \"id\",\n    \"ipk\": \"ik\",\n    \"isl\": \"is\",\n    \"ita\": \"it\",\n    \"iw\": \"he\",\n    \"izi\": \"eza\",\n    \"jar\": \"jgk\",\n    \"jav\": \"jv\",\n    \"jeg\": \"oyb\",\n    \"ji\": \"yi\",\n    \"jpn\": \"ja\",\n    \"jw\": \"jv\",\n    \"kal\": \"kl\",\n    \"kan\": \"kn\",\n    \"kas\": \"ks\",\n    \"kat\": \"ka\",\n    \"kau\": \"kr\",\n    \"kaz\": \"kk\",\n    \"kdv\": \"zkd\",\n    \"kgc\": \"tdf\",\n    \"kgd\": \"ncq\",\n    \"kgh\": \"kml\",\n    \"khk\": \"mn\",\n    \"khm\": \"km\",\n    \"kik\": \"ki\",\n    \"kin\": \"rw\",\n    \"kir\": \"ky\",\n    \"kmr\": \"ku\",\n    \"knc\": \"kr\",\n    \"kng\": \"kg\",\n    \"knn\": \"kok\",\n    \"koj\": \"kwv\",\n    \"kom\": \"kv\",\n    \"kon\": \"kg\",\n    \"kor\": \"ko\",\n    \"kpp\": \"jkm\",\n    \"kpv\": \"kv\",\n    \"krm\": \"bmf\",\n    \"ktr\": \"dtp\",\n    \"kua\": \"kj\",\n    \"kur\": \"ku\",\n    \"kvs\": \"gdj\",\n    \"kwq\": \"yam\",\n    \"kxe\": \"tvd\",\n    \"kxl\": \"kru\",\n    \"kzh\": \"dgl\",\n    \"kzj\": \"dtp\",\n    \"kzt\": \"dtp\",\n    \"lao\": \"lo\",\n    \"lat\": \"la\",\n    \"lav\": \"lv\",\n    \"lbk\": \"bnc\",\n    \"leg\": \"enl\",\n    \"lii\": \"raq\",\n    \"lim\": \"li\",\n    \"lin\": \"ln\",\n    \"lit\": \"lt\",\n    \"llo\": \"ngt\",\n    \"lmm\": \"rmx\",\n    \"ltz\": \"lb\",\n    \"lub\": \"lu\",\n    \"lug\": \"lg\",\n    \"lvs\": \"lv\",\n    \"mac\": \"mk\",\n    \"mah\": \"mh\",\n    \"mal\": \"ml\",\n    \"mao\": \"mi\",\n    \"mar\": \"mr\",\n    \"may\": \"ms\",\n    \"meg\": \"cir\",\n    \"mgx\": \"jbk\",\n    \"mhr\": \"chm\",\n    \"mkd\": \"mk\",\n    \"mlg\": \"mg\",\n    \"mlt\": \"mt\",\n    \"mnk\": \"man\",\n    \"mnt\": \"wnn\",\n    \"mo\": \"ro\",\n    \"mof\": \"xnt\",\n    \"mol\": \"ro\",\n    \"mon\": \"mn\",\n    \"mri\": \"mi\",\n    \"msa\": \"ms\",\n    \"mst\": \"mry\",\n    \"mup\": \"raj\",\n    \"mwd\": \"dmw\",\n    \"mwj\": \"vaj\",\n    \"mya\": \"my\",\n    \"myd\": \"aog\",\n    \"myt\": \"mry\",\n    \"nad\": \"xny\",\n    \"nau\": \"na\",\n    \"nav\": \"nv\",\n    \"nbf\": \"nru\",\n    \"nbl\": \"nr\",\n    \"nbx\": \"ekc\",\n    \"ncp\": \"kdz\",\n    \"nde\": \"nd\",\n    \"ndo\": \"ng\",\n    \"nep\": \"ne\",\n    \"nld\": \"nl\",\n    \"nln\": \"azd\",\n    \"nlr\": \"nrk\",\n    \"nno\": \"nn\",\n    \"nns\": \"nbr\",\n    \"nnx\": \"ngv\",\n    \"no-bok\": \"nb\",\n    \"no-bokmal\": \"nb\",\n    \"no-nyn\": \"nn\",\n    \"no-nynorsk\": \"nn\",\n    \"nob\": \"nb\",\n    \"noo\": \"dtd\",\n    \"nor\": \"no\",\n    \"npi\": \"ne\",\n    \"nts\": \"pij\",\n    \"nxu\": \"bpp\",\n    \"nya\": \"ny\",\n    \"oci\": \"oc\",\n    \"ojg\": \"oj\",\n    \"oji\": \"oj\",\n    \"ori\": \"or\",\n    \"orm\": \"om\",\n    \"ory\": \"or\",\n    \"oss\": \"os\",\n    \"oun\": \"vaj\",\n    \"pan\": \"pa\",\n    \"pat\": \"kxr\",\n    \"pbu\": \"ps\",\n    \"pcr\": \"adx\",\n    \"per\": \"fa\",\n    \"pes\": \"fa\",\n    \"pli\": \"pi\",\n    \"plt\": \"mg\",\n    \"pmc\": \"huw\",\n    \"pmu\": \"phr\",\n    \"pnb\": \"lah\",\n    \"pol\": \"pl\",\n    \"por\": \"pt\",\n    \"ppa\": \"bfy\",\n    \"ppr\": \"lcq\",\n    \"prs\": \"fa-AF\",\n    \"pry\": \"prt\",\n    \"pus\": \"ps\",\n    \"puz\": \"pub\",\n    \"que\": \"qu\",\n    \"quz\": \"qu\",\n    \"rmr\": \"emx\",\n    \"rmy\": \"rom\",\n    \"roh\": \"rm\",\n    \"ron\": \"ro\",\n    \"rum\": \"ro\",\n    \"run\": \"rn\",\n    \"rus\": \"ru\",\n    \"sag\": \"sg\",\n    \"san\": \"sa\",\n    \"sap\": \"aqt\",\n    \"sca\": \"hle\",\n    \"scc\": \"sr\",\n    \"scr\": \"hr\",\n    \"sgl\": \"isk\",\n    \"sgn-BE-FR\": \"sfb\",\n    \"sgn-BE-NL\": \"vgt\",\n    \"sgn-BR\": \"bzs\",\n    \"sgn-CH-DE\": \"sgg\",\n    \"sgn-CO\": \"csn\",\n    \"sgn-DE\": \"gsg\",\n    \"sgn-DK\": \"dsl\",\n    \"sgn-ES\": \"ssp\",\n    \"sgn-FR\": \"fsl\",\n    \"sgn-GB\": \"bfi\",\n    \"sgn-GR\": \"gss\",\n    \"sgn-IE\": \"isg\",\n    \"sgn-IT\": \"ise\",\n    \"sgn-JP\": \"jsl\",\n    \"sgn-MX\": \"mfs\",\n    \"sgn-NI\": \"ncs\",\n    \"sgn-NL\": \"dse\",\n    \"sgn-NO\": \"nsi\",\n    \"sgn-PT\": \"psr\",\n    \"sgn-SE\": \"swl\",\n    \"sgn-US\": \"ase\",\n    \"sgn-ZA\": \"sfs\",\n    \"sh\": \"sr-Latn\",\n    \"sin\": \"si\",\n    \"skk\": \"oyb\",\n    \"slk\": \"sk\",\n    \"slo\": \"sk\",\n    \"slv\": \"sl\",\n    \"sme\": \"se\",\n    \"smo\": \"sm\",\n    \"sna\": \"sn\",\n    \"snd\": \"sd\",\n    \"som\": \"so\",\n    \"sot\": \"st\",\n    \"spa\": \"es\",\n    \"spy\": \"kln\",\n    \"sqi\": \"sq\",\n    \"src\": \"sc\",\n    \"srd\": \"sc\",\n    \"srp\": \"sr\",\n    \"ssw\": \"ss\",\n    \"sul\": \"sgd\",\n    \"sum\": \"ulw\",\n    \"sun\": \"su\",\n    \"swa\": \"sw\",\n    \"swc\": \"sw-CD\",\n    \"swe\": \"sv\",\n    \"swh\": \"sw\",\n    \"tah\": \"ty\",\n    \"tam\": \"ta\",\n    \"tat\": \"tt\",\n    \"tdu\": \"dtp\",\n    \"tel\": \"te\",\n    \"tgg\": \"bjp\",\n    \"tgk\": \"tg\",\n    \"tgl\": \"fil\",\n    \"tha\": \"th\",\n    \"thc\": \"tpo\",\n    \"thw\": \"ola\",\n    \"thx\": \"oyb\",\n    \"tib\": \"bo\",\n    \"tid\": \"itd\",\n    \"tie\": \"ras\",\n    \"tir\": \"ti\",\n    \"tkk\": \"twm\",\n    \"tl\": \"fil\",\n    \"tlw\": \"weo\",\n    \"tmp\": \"tyj\",\n    \"tne\": \"kak\",\n    \"tnf\": \"fa-AF\",\n    \"ton\": \"to\",\n    \"tsf\": \"taj\",\n    \"tsn\": \"tn\",\n    \"tso\": \"ts\",\n    \"ttq\": \"tmh\",\n    \"tuk\": \"tk\",\n    \"tur\": \"tr\",\n    \"tw\": \"ak\",\n    \"twi\": \"ak\",\n    \"uig\": \"ug\",\n    \"ukr\": \"uk\",\n    \"umu\": \"del\",\n    \"und-aaland\": \"und-AX\",\n    \"und-arevela\": \"und\",\n    \"und-arevmda\": \"und\",\n    \"und-bokmal\": \"und\",\n    \"und-hakka\": \"und\",\n    \"und-hepburn-heploc\": \"und-alalc97\",\n    \"und-lojban\": \"und\",\n    \"und-nynorsk\": \"und\",\n    \"und-saaho\": \"und\",\n    \"und-xiang\": \"und\",\n    \"unp\": \"wro\",\n    \"uok\": \"ema\",\n    \"urd\": \"ur\",\n    \"uzb\": \"uz\",\n    \"uzn\": \"uz\",\n    \"ven\": \"ve\",\n    \"vie\": \"vi\",\n    \"vol\": \"vo\",\n    \"wel\": \"cy\",\n    \"wgw\": \"wgb\",\n    \"wit\": \"nol\",\n    \"wiw\": \"nwo\",\n    \"wln\": \"wa\",\n    \"wol\": \"wo\",\n    \"xba\": \"cax\",\n    \"xho\": \"xh\",\n    \"xia\": \"acn\",\n    \"xkh\": \"waw\",\n    \"xpe\": \"kpe\",\n    \"xrq\": \"dmw\",\n    \"xsj\": \"suj\",\n    \"xsl\": \"den\",\n    \"ybd\": \"rki\",\n    \"ydd\": \"yi\",\n    \"yen\": \"ynq\",\n    \"yid\": \"yi\",\n    \"yiy\": \"yrm\",\n    \"yma\": \"lrr\",\n    \"ymt\": \"mtm\",\n    \"yor\": \"yo\",\n    \"yos\": \"zom\",\n    \"yuu\": \"yug\",\n    \"zai\": \"zap\",\n    \"zh-cmn\": \"zh\",\n    \"zh-cmn-Hans\": \"zh-Hans\",\n    \"zh-cmn-Hant\": \"zh-Hant\",\n    \"zh-gan\": \"gan\",\n    \"zh-guoyu\": \"zh\",\n    \"zh-hakka\": \"hak\",\n    \"zh-min\": \"nan-x-zh-min\",\n    \"zh-min-nan\": \"nan\",\n    \"zh-wuu\": \"wuu\",\n    \"zh-xiang\": \"hsn\",\n    \"zh-yue\": \"yue\",\n    \"zha\": \"za\",\n    \"zho\": \"zh\",\n    \"zir\": \"scv\",\n    \"zsm\": \"ms\",\n    \"zul\": \"zu\",\n    \"zyb\": \"za\"\n};\nexports.territoryAlias = {\n    \"100\": \"BG\",\n    \"104\": \"MM\",\n    \"108\": \"BI\",\n    \"112\": \"BY\",\n    \"116\": \"KH\",\n    \"120\": \"CM\",\n    \"124\": \"CA\",\n    \"132\": \"CV\",\n    \"136\": \"KY\",\n    \"140\": \"CF\",\n    \"144\": \"LK\",\n    \"148\": \"TD\",\n    \"152\": \"CL\",\n    \"156\": \"CN\",\n    \"158\": \"TW\",\n    \"162\": \"CX\",\n    \"166\": \"CC\",\n    \"170\": \"CO\",\n    \"172\": \"RU AM AZ BY GE KG KZ MD TJ TM UA UZ\",\n    \"174\": \"KM\",\n    \"175\": \"YT\",\n    \"178\": \"CG\",\n    \"180\": \"CD\",\n    \"184\": \"CK\",\n    \"188\": \"CR\",\n    \"191\": \"HR\",\n    \"192\": \"CU\",\n    \"196\": \"CY\",\n    \"200\": \"CZ SK\",\n    \"203\": \"CZ\",\n    \"204\": \"BJ\",\n    \"208\": \"DK\",\n    \"212\": \"DM\",\n    \"214\": \"DO\",\n    \"218\": \"EC\",\n    \"222\": \"SV\",\n    \"226\": \"GQ\",\n    \"230\": \"ET\",\n    \"231\": \"ET\",\n    \"232\": \"ER\",\n    \"233\": \"EE\",\n    \"234\": \"FO\",\n    \"238\": \"FK\",\n    \"239\": \"GS\",\n    \"242\": \"FJ\",\n    \"246\": \"FI\",\n    \"248\": \"AX\",\n    \"249\": \"FR\",\n    \"250\": \"FR\",\n    \"254\": \"GF\",\n    \"258\": \"PF\",\n    \"260\": \"TF\",\n    \"262\": \"DJ\",\n    \"266\": \"GA\",\n    \"268\": \"GE\",\n    \"270\": \"GM\",\n    \"275\": \"PS\",\n    \"276\": \"DE\",\n    \"278\": \"DE\",\n    \"280\": \"DE\",\n    \"288\": \"GH\",\n    \"292\": \"GI\",\n    \"296\": \"KI\",\n    \"300\": \"GR\",\n    \"304\": \"GL\",\n    \"308\": \"GD\",\n    \"312\": \"GP\",\n    \"316\": \"GU\",\n    \"320\": \"GT\",\n    \"324\": \"GN\",\n    \"328\": \"GY\",\n    \"332\": \"HT\",\n    \"334\": \"HM\",\n    \"336\": \"VA\",\n    \"340\": \"HN\",\n    \"344\": \"HK\",\n    \"348\": \"HU\",\n    \"352\": \"IS\",\n    \"356\": \"IN\",\n    \"360\": \"ID\",\n    \"364\": \"IR\",\n    \"368\": \"IQ\",\n    \"372\": \"IE\",\n    \"376\": \"IL\",\n    \"380\": \"IT\",\n    \"384\": \"CI\",\n    \"388\": \"JM\",\n    \"392\": \"JP\",\n    \"398\": \"KZ\",\n    \"400\": \"JO\",\n    \"404\": \"KE\",\n    \"408\": \"KP\",\n    \"410\": \"KR\",\n    \"414\": \"KW\",\n    \"417\": \"KG\",\n    \"418\": \"LA\",\n    \"422\": \"LB\",\n    \"426\": \"LS\",\n    \"428\": \"LV\",\n    \"430\": \"LR\",\n    \"434\": \"LY\",\n    \"438\": \"LI\",\n    \"440\": \"LT\",\n    \"442\": \"LU\",\n    \"446\": \"MO\",\n    \"450\": \"MG\",\n    \"454\": \"MW\",\n    \"458\": \"MY\",\n    \"462\": \"MV\",\n    \"466\": \"ML\",\n    \"470\": \"MT\",\n    \"474\": \"MQ\",\n    \"478\": \"MR\",\n    \"480\": \"MU\",\n    \"484\": \"MX\",\n    \"492\": \"MC\",\n    \"496\": \"MN\",\n    \"498\": \"MD\",\n    \"499\": \"ME\",\n    \"500\": \"MS\",\n    \"504\": \"MA\",\n    \"508\": \"MZ\",\n    \"512\": \"OM\",\n    \"516\": \"NA\",\n    \"520\": \"NR\",\n    \"524\": \"NP\",\n    \"528\": \"NL\",\n    \"530\": \"CW SX BQ\",\n    \"531\": \"CW\",\n    \"532\": \"CW SX BQ\",\n    \"533\": \"AW\",\n    \"534\": \"SX\",\n    \"535\": \"BQ\",\n    \"536\": \"SA IQ\",\n    \"540\": \"NC\",\n    \"548\": \"VU\",\n    \"554\": \"NZ\",\n    \"558\": \"NI\",\n    \"562\": \"NE\",\n    \"566\": \"NG\",\n    \"570\": \"NU\",\n    \"574\": \"NF\",\n    \"578\": \"NO\",\n    \"580\": \"MP\",\n    \"581\": \"UM\",\n    \"582\": \"FM MH MP PW\",\n    \"583\": \"FM\",\n    \"584\": \"MH\",\n    \"585\": \"PW\",\n    \"586\": \"PK\",\n    \"591\": \"PA\",\n    \"598\": \"PG\",\n    \"600\": \"PY\",\n    \"604\": \"PE\",\n    \"608\": \"PH\",\n    \"612\": \"PN\",\n    \"616\": \"PL\",\n    \"620\": \"PT\",\n    \"624\": \"GW\",\n    \"626\": \"TL\",\n    \"630\": \"PR\",\n    \"634\": \"QA\",\n    \"638\": \"RE\",\n    \"642\": \"RO\",\n    \"643\": \"RU\",\n    \"646\": \"RW\",\n    \"652\": \"BL\",\n    \"654\": \"SH\",\n    \"659\": \"KN\",\n    \"660\": \"AI\",\n    \"662\": \"LC\",\n    \"663\": \"MF\",\n    \"666\": \"PM\",\n    \"670\": \"VC\",\n    \"674\": \"SM\",\n    \"678\": \"ST\",\n    \"682\": \"SA\",\n    \"686\": \"SN\",\n    \"688\": \"RS\",\n    \"690\": \"SC\",\n    \"694\": \"SL\",\n    \"702\": \"SG\",\n    \"703\": \"SK\",\n    \"704\": \"VN\",\n    \"705\": \"SI\",\n    \"706\": \"SO\",\n    \"710\": \"ZA\",\n    \"716\": \"ZW\",\n    \"720\": \"YE\",\n    \"724\": \"ES\",\n    \"728\": \"SS\",\n    \"729\": \"SD\",\n    \"732\": \"EH\",\n    \"736\": \"SD\",\n    \"740\": \"SR\",\n    \"744\": \"SJ\",\n    \"748\": \"SZ\",\n    \"752\": \"SE\",\n    \"756\": \"CH\",\n    \"760\": \"SY\",\n    \"762\": \"TJ\",\n    \"764\": \"TH\",\n    \"768\": \"TG\",\n    \"772\": \"TK\",\n    \"776\": \"TO\",\n    \"780\": \"TT\",\n    \"784\": \"AE\",\n    \"788\": \"TN\",\n    \"792\": \"TR\",\n    \"795\": \"TM\",\n    \"796\": \"TC\",\n    \"798\": \"TV\",\n    \"800\": \"UG\",\n    \"804\": \"UA\",\n    \"807\": \"MK\",\n    \"810\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\",\n    \"818\": \"EG\",\n    \"826\": \"GB\",\n    \"830\": \"JE GG\",\n    \"831\": \"GG\",\n    \"832\": \"JE\",\n    \"833\": \"IM\",\n    \"834\": \"TZ\",\n    \"840\": \"US\",\n    \"850\": \"VI\",\n    \"854\": \"BF\",\n    \"858\": \"UY\",\n    \"860\": \"UZ\",\n    \"862\": \"VE\",\n    \"876\": \"WF\",\n    \"882\": \"WS\",\n    \"886\": \"YE\",\n    \"887\": \"YE\",\n    \"890\": \"RS ME SI HR MK BA\",\n    \"891\": \"RS ME\",\n    \"894\": \"ZM\",\n    \"958\": \"AA\",\n    \"959\": \"QM\",\n    \"960\": \"QN\",\n    \"962\": \"QP\",\n    \"963\": \"QQ\",\n    \"964\": \"QR\",\n    \"965\": \"QS\",\n    \"966\": \"QT\",\n    \"967\": \"EU\",\n    \"968\": \"QV\",\n    \"969\": \"QW\",\n    \"970\": \"QX\",\n    \"971\": \"QY\",\n    \"972\": \"QZ\",\n    \"973\": \"XA\",\n    \"974\": \"XB\",\n    \"975\": \"XC\",\n    \"976\": \"XD\",\n    \"977\": \"XE\",\n    \"978\": \"XF\",\n    \"979\": \"XG\",\n    \"980\": \"XH\",\n    \"981\": \"XI\",\n    \"982\": \"XJ\",\n    \"983\": \"XK\",\n    \"984\": \"XL\",\n    \"985\": \"XM\",\n    \"986\": \"XN\",\n    \"987\": \"XO\",\n    \"988\": \"XP\",\n    \"989\": \"XQ\",\n    \"990\": \"XR\",\n    \"991\": \"XS\",\n    \"992\": \"XT\",\n    \"993\": \"XU\",\n    \"994\": \"XV\",\n    \"995\": \"XW\",\n    \"996\": \"XX\",\n    \"997\": \"XY\",\n    \"998\": \"XZ\",\n    \"999\": \"ZZ\",\n    \"004\": \"AF\",\n    \"008\": \"AL\",\n    \"010\": \"AQ\",\n    \"012\": \"DZ\",\n    \"016\": \"AS\",\n    \"020\": \"AD\",\n    \"024\": \"AO\",\n    \"028\": \"AG\",\n    \"031\": \"AZ\",\n    \"032\": \"AR\",\n    \"036\": \"AU\",\n    \"040\": \"AT\",\n    \"044\": \"BS\",\n    \"048\": \"BH\",\n    \"050\": \"BD\",\n    \"051\": \"AM\",\n    \"052\": \"BB\",\n    \"056\": \"BE\",\n    \"060\": \"BM\",\n    \"062\": \"034 143\",\n    \"064\": \"BT\",\n    \"068\": \"BO\",\n    \"070\": \"BA\",\n    \"072\": \"BW\",\n    \"074\": \"BV\",\n    \"076\": \"BR\",\n    \"084\": \"BZ\",\n    \"086\": \"IO\",\n    \"090\": \"SB\",\n    \"092\": \"VG\",\n    \"096\": \"BN\",\n    \"AAA\": \"AA\",\n    \"ABW\": \"AW\",\n    \"AFG\": \"AF\",\n    \"AGO\": \"AO\",\n    \"AIA\": \"AI\",\n    \"ALA\": \"AX\",\n    \"ALB\": \"AL\",\n    \"AN\": \"CW SX BQ\",\n    \"AND\": \"AD\",\n    \"ANT\": \"CW SX BQ\",\n    \"ARE\": \"AE\",\n    \"ARG\": \"AR\",\n    \"ARM\": \"AM\",\n    \"ASC\": \"AC\",\n    \"ASM\": \"AS\",\n    \"ATA\": \"AQ\",\n    \"ATF\": \"TF\",\n    \"ATG\": \"AG\",\n    \"AUS\": \"AU\",\n    \"AUT\": \"AT\",\n    \"AZE\": \"AZ\",\n    \"BDI\": \"BI\",\n    \"BEL\": \"BE\",\n    \"BEN\": \"BJ\",\n    \"BES\": \"BQ\",\n    \"BFA\": \"BF\",\n    \"BGD\": \"BD\",\n    \"BGR\": \"BG\",\n    \"BHR\": \"BH\",\n    \"BHS\": \"BS\",\n    \"BIH\": \"BA\",\n    \"BLM\": \"BL\",\n    \"BLR\": \"BY\",\n    \"BLZ\": \"BZ\",\n    \"BMU\": \"BM\",\n    \"BOL\": \"BO\",\n    \"BRA\": \"BR\",\n    \"BRB\": \"BB\",\n    \"BRN\": \"BN\",\n    \"BTN\": \"BT\",\n    \"BU\": \"MM\",\n    \"BUR\": \"MM\",\n    \"BVT\": \"BV\",\n    \"BWA\": \"BW\",\n    \"CAF\": \"CF\",\n    \"CAN\": \"CA\",\n    \"CCK\": \"CC\",\n    \"CHE\": \"CH\",\n    \"CHL\": \"CL\",\n    \"CHN\": \"CN\",\n    \"CIV\": \"CI\",\n    \"CMR\": \"CM\",\n    \"COD\": \"CD\",\n    \"COG\": \"CG\",\n    \"COK\": \"CK\",\n    \"COL\": \"CO\",\n    \"COM\": \"KM\",\n    \"CPT\": \"CP\",\n    \"CPV\": \"CV\",\n    \"CRI\": \"CR\",\n    \"CS\": \"RS ME\",\n    \"CT\": \"KI\",\n    \"CUB\": \"CU\",\n    \"CUW\": \"CW\",\n    \"CXR\": \"CX\",\n    \"CYM\": \"KY\",\n    \"CYP\": \"CY\",\n    \"CZE\": \"CZ\",\n    \"DD\": \"DE\",\n    \"DDR\": \"DE\",\n    \"DEU\": \"DE\",\n    \"DGA\": \"DG\",\n    \"DJI\": \"DJ\",\n    \"DMA\": \"DM\",\n    \"DNK\": \"DK\",\n    \"DOM\": \"DO\",\n    \"DY\": \"BJ\",\n    \"DZA\": \"DZ\",\n    \"ECU\": \"EC\",\n    \"EGY\": \"EG\",\n    \"ERI\": \"ER\",\n    \"ESH\": \"EH\",\n    \"ESP\": \"ES\",\n    \"EST\": \"EE\",\n    \"ETH\": \"ET\",\n    \"FIN\": \"FI\",\n    \"FJI\": \"FJ\",\n    \"FLK\": \"FK\",\n    \"FQ\": \"AQ TF\",\n    \"FRA\": \"FR\",\n    \"FRO\": \"FO\",\n    \"FSM\": \"FM\",\n    \"FX\": \"FR\",\n    \"FXX\": \"FR\",\n    \"GAB\": \"GA\",\n    \"GBR\": \"GB\",\n    \"GEO\": \"GE\",\n    \"GGY\": \"GG\",\n    \"GHA\": \"GH\",\n    \"GIB\": \"GI\",\n    \"GIN\": \"GN\",\n    \"GLP\": \"GP\",\n    \"GMB\": \"GM\",\n    \"GNB\": \"GW\",\n    \"GNQ\": \"GQ\",\n    \"GRC\": \"GR\",\n    \"GRD\": \"GD\",\n    \"GRL\": \"GL\",\n    \"GTM\": \"GT\",\n    \"GUF\": \"GF\",\n    \"GUM\": \"GU\",\n    \"GUY\": \"GY\",\n    \"HKG\": \"HK\",\n    \"HMD\": \"HM\",\n    \"HND\": \"HN\",\n    \"HRV\": \"HR\",\n    \"HTI\": \"HT\",\n    \"HUN\": \"HU\",\n    \"HV\": \"BF\",\n    \"IDN\": \"ID\",\n    \"IMN\": \"IM\",\n    \"IND\": \"IN\",\n    \"IOT\": \"IO\",\n    \"IRL\": \"IE\",\n    \"IRN\": \"IR\",\n    \"IRQ\": \"IQ\",\n    \"ISL\": \"IS\",\n    \"ISR\": \"IL\",\n    \"ITA\": \"IT\",\n    \"JAM\": \"JM\",\n    \"JEY\": \"JE\",\n    \"JOR\": \"JO\",\n    \"JPN\": \"JP\",\n    \"JT\": \"UM\",\n    \"KAZ\": \"KZ\",\n    \"KEN\": \"KE\",\n    \"KGZ\": \"KG\",\n    \"KHM\": \"KH\",\n    \"KIR\": \"KI\",\n    \"KNA\": \"KN\",\n    \"KOR\": \"KR\",\n    \"KWT\": \"KW\",\n    \"LAO\": \"LA\",\n    \"LBN\": \"LB\",\n    \"LBR\": \"LR\",\n    \"LBY\": \"LY\",\n    \"LCA\": \"LC\",\n    \"LIE\": \"LI\",\n    \"LKA\": \"LK\",\n    \"LSO\": \"LS\",\n    \"LTU\": \"LT\",\n    \"LUX\": \"LU\",\n    \"LVA\": \"LV\",\n    \"MAC\": \"MO\",\n    \"MAF\": \"MF\",\n    \"MAR\": \"MA\",\n    \"MCO\": \"MC\",\n    \"MDA\": \"MD\",\n    \"MDG\": \"MG\",\n    \"MDV\": \"MV\",\n    \"MEX\": \"MX\",\n    \"MHL\": \"MH\",\n    \"MI\": \"UM\",\n    \"MKD\": \"MK\",\n    \"MLI\": \"ML\",\n    \"MLT\": \"MT\",\n    \"MMR\": \"MM\",\n    \"MNE\": \"ME\",\n    \"MNG\": \"MN\",\n    \"MNP\": \"MP\",\n    \"MOZ\": \"MZ\",\n    \"MRT\": \"MR\",\n    \"MSR\": \"MS\",\n    \"MTQ\": \"MQ\",\n    \"MUS\": \"MU\",\n    \"MWI\": \"MW\",\n    \"MYS\": \"MY\",\n    \"MYT\": \"YT\",\n    \"NAM\": \"NA\",\n    \"NCL\": \"NC\",\n    \"NER\": \"NE\",\n    \"NFK\": \"NF\",\n    \"NGA\": \"NG\",\n    \"NH\": \"VU\",\n    \"NIC\": \"NI\",\n    \"NIU\": \"NU\",\n    \"NLD\": \"NL\",\n    \"NOR\": \"NO\",\n    \"NPL\": \"NP\",\n    \"NQ\": \"AQ\",\n    \"NRU\": \"NR\",\n    \"NT\": \"SA IQ\",\n    \"NTZ\": \"SA IQ\",\n    \"NZL\": \"NZ\",\n    \"OMN\": \"OM\",\n    \"PAK\": \"PK\",\n    \"PAN\": \"PA\",\n    \"PC\": \"FM MH MP PW\",\n    \"PCN\": \"PN\",\n    \"PER\": \"PE\",\n    \"PHL\": \"PH\",\n    \"PLW\": \"PW\",\n    \"PNG\": \"PG\",\n    \"POL\": \"PL\",\n    \"PRI\": \"PR\",\n    \"PRK\": \"KP\",\n    \"PRT\": \"PT\",\n    \"PRY\": \"PY\",\n    \"PSE\": \"PS\",\n    \"PU\": \"UM\",\n    \"PYF\": \"PF\",\n    \"PZ\": \"PA\",\n    \"QAT\": \"QA\",\n    \"QMM\": \"QM\",\n    \"QNN\": \"QN\",\n    \"QPP\": \"QP\",\n    \"QQQ\": \"QQ\",\n    \"QRR\": \"QR\",\n    \"QSS\": \"QS\",\n    \"QTT\": \"QT\",\n    \"QU\": \"EU\",\n    \"QUU\": \"EU\",\n    \"QVV\": \"QV\",\n    \"QWW\": \"QW\",\n    \"QXX\": \"QX\",\n    \"QYY\": \"QY\",\n    \"QZZ\": \"QZ\",\n    \"REU\": \"RE\",\n    \"RH\": \"ZW\",\n    \"ROU\": \"RO\",\n    \"RUS\": \"RU\",\n    \"RWA\": \"RW\",\n    \"SAU\": \"SA\",\n    \"SCG\": \"RS ME\",\n    \"SDN\": \"SD\",\n    \"SEN\": \"SN\",\n    \"SGP\": \"SG\",\n    \"SGS\": \"GS\",\n    \"SHN\": \"SH\",\n    \"SJM\": \"SJ\",\n    \"SLB\": \"SB\",\n    \"SLE\": \"SL\",\n    \"SLV\": \"SV\",\n    \"SMR\": \"SM\",\n    \"SOM\": \"SO\",\n    \"SPM\": \"PM\",\n    \"SRB\": \"RS\",\n    \"SSD\": \"SS\",\n    \"STP\": \"ST\",\n    \"SU\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\",\n    \"SUN\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\",\n    \"SUR\": \"SR\",\n    \"SVK\": \"SK\",\n    \"SVN\": \"SI\",\n    \"SWE\": \"SE\",\n    \"SWZ\": \"SZ\",\n    \"SXM\": \"SX\",\n    \"SYC\": \"SC\",\n    \"SYR\": \"SY\",\n    \"TAA\": \"TA\",\n    \"TCA\": \"TC\",\n    \"TCD\": \"TD\",\n    \"TGO\": \"TG\",\n    \"THA\": \"TH\",\n    \"TJK\": \"TJ\",\n    \"TKL\": \"TK\",\n    \"TKM\": \"TM\",\n    \"TLS\": \"TL\",\n    \"TMP\": \"TL\",\n    \"TON\": \"TO\",\n    \"TP\": \"TL\",\n    \"TTO\": \"TT\",\n    \"TUN\": \"TN\",\n    \"TUR\": \"TR\",\n    \"TUV\": \"TV\",\n    \"TWN\": \"TW\",\n    \"TZA\": \"TZ\",\n    \"UGA\": \"UG\",\n    \"UK\": \"GB\",\n    \"UKR\": \"UA\",\n    \"UMI\": \"UM\",\n    \"URY\": \"UY\",\n    \"USA\": \"US\",\n    \"UZB\": \"UZ\",\n    \"VAT\": \"VA\",\n    \"VCT\": \"VC\",\n    \"VD\": \"VN\",\n    \"VEN\": \"VE\",\n    \"VGB\": \"VG\",\n    \"VIR\": \"VI\",\n    \"VNM\": \"VN\",\n    \"VUT\": \"VU\",\n    \"WK\": \"UM\",\n    \"WLF\": \"WF\",\n    \"WSM\": \"WS\",\n    \"XAA\": \"XA\",\n    \"XBB\": \"XB\",\n    \"XCC\": \"XC\",\n    \"XDD\": \"XD\",\n    \"XEE\": \"XE\",\n    \"XFF\": \"XF\",\n    \"XGG\": \"XG\",\n    \"XHH\": \"XH\",\n    \"XII\": \"XI\",\n    \"XJJ\": \"XJ\",\n    \"XKK\": \"XK\",\n    \"XLL\": \"XL\",\n    \"XMM\": \"XM\",\n    \"XNN\": \"XN\",\n    \"XOO\": \"XO\",\n    \"XPP\": \"XP\",\n    \"XQQ\": \"XQ\",\n    \"XRR\": \"XR\",\n    \"XSS\": \"XS\",\n    \"XTT\": \"XT\",\n    \"XUU\": \"XU\",\n    \"XVV\": \"XV\",\n    \"XWW\": \"XW\",\n    \"XXX\": \"XX\",\n    \"XYY\": \"XY\",\n    \"XZZ\": \"XZ\",\n    \"YD\": \"YE\",\n    \"YEM\": \"YE\",\n    \"YMD\": \"YE\",\n    \"YU\": \"RS ME\",\n    \"YUG\": \"RS ME\",\n    \"ZAF\": \"ZA\",\n    \"ZAR\": \"CD\",\n    \"ZMB\": \"ZM\",\n    \"ZR\": \"CD\",\n    \"ZWE\": \"ZW\",\n    \"ZZZ\": \"ZZ\"\n};\nexports.scriptAlias = {\n    \"Qaai\": \"Zinh\"\n};\nexports.variantAlias = {\n    \"heploc\": \"alalc97\",\n    \"polytoni\": \"polyton\"\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\n// Type-only circular import\n// eslint-disable-next-line import/no-cycle\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar internalSlotMap = new WeakMap();\nfunction getInternalSlots(x) {\n    var internalSlots = internalSlotMap.get(x);\n    if (!internalSlots) {\n        internalSlots = Object.create(null);\n        internalSlotMap.set(x, internalSlots);\n    }\n    return internalSlots;\n}\nexports.default = getInternalSlots;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"./\");\nvar should_polyfill_1 = require(\"./should-polyfill\");\nif ((0, should_polyfill_1.shouldPolyfill)()) {\n    Object.defineProperty(Intl, 'Locale', {\n        value: _1.Locale,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n    });\n}\n"],"sourceRoot":""}